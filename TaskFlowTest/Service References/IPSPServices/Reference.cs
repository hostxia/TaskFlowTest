//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskFlowTest.IPSPServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationInfo", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class OperationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bOperationResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sOperationMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sOperationReturnObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bOperationResult {
            get {
                return this.bOperationResultField;
            }
            set {
                if ((this.bOperationResultField.Equals(value) != true)) {
                    this.bOperationResultField = value;
                    this.RaisePropertyChanged("bOperationResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sOperationMessage {
            get {
                return this.sOperationMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.sOperationMessageField, value) != true)) {
                    this.sOperationMessageField = value;
                    this.RaisePropertyChanged("sOperationMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sOperationReturnObject {
            get {
                return this.sOperationReturnObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.sOperationReturnObjectField, value) != true)) {
                    this.sOperationReturnObjectField = value;
                    this.RaisePropertyChanged("sOperationReturnObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateInfo", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UpdateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EleID {
            get {
                return this.EleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EleIDField, value) != true)) {
                    this.EleIDField = value;
                    this.RaisePropertyChanged("EleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EleName {
            get {
                return this.EleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EleNameField, value) != true)) {
                    this.EleNameField = value;
                    this.RaisePropertyChanged("EleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EleType {
            get {
                return this.EleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EleTypeField, value) != true)) {
                    this.EleTypeField = value;
                    this.RaisePropertyChanged("EleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicCaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class BasicCaseData : TaskFlowTest.IPSPServices.BasicCaseBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicCaseBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData))]
    public partial class BasicCaseBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int s_AppsSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((this.n_ClientIDField.Equals(value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FlowNum {
            get {
                return this.n_FlowNumField;
            }
            set {
                if ((this.n_FlowNumField.Equals(value) != true)) {
                    this.n_FlowNumField = value;
                    this.RaisePropertyChanged("n_FlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ApplicantCodes {
            get {
                return this.s_ApplicantCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantCodesField, value) != true)) {
                    this.s_ApplicantCodesField = value;
                    this.RaisePropertyChanged("s_ApplicantCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s_AppsSerial {
            get {
                return this.s_AppsSerialField;
            }
            set {
                if ((this.s_AppsSerialField.Equals(value) != true)) {
                    this.s_AppsSerialField = value;
                    this.RaisePropertyChanged("s_AppsSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCode {
            get {
                return this.s_ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCodeField, value) != true)) {
                    this.s_ClientCodeField = value;
                    this.RaisePropertyChanged("s_ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatentData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class PatentData : TaskFlowTest.IPSPServices.PatentBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSubmitStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentProcessName {
            get {
                return this.CurrentProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentProcessNameField, value) != true)) {
                    this.CurrentProcessNameField = value;
                    this.RaisePropertyChanged("CurrentProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSubmitStatus {
            get {
                return this.s_CaseSubmitStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSubmitStatusField, value) != true)) {
                    this.s_CaseSubmitStatusField = value;
                    this.RaisePropertyChanged("s_CaseSubmitStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatentBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData))]
    public partial class PatentBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CertfDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_IssuedPubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PCTAppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PriorityStatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldSbmtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_UndertakeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CurrentProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RegCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_StartProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CertfNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CoopAgencyToNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InventorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IssuedPubNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OldSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PCTAppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PriorityStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SerialLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TechnologyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TotalSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_aaaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CertfDate {
            get {
                return this.dt_CertfDateField;
            }
            set {
                if ((this.dt_CertfDateField.Equals(value) != true)) {
                    this.dt_CertfDateField = value;
                    this.RaisePropertyChanged("dt_CertfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_IssuedPubDate {
            get {
                return this.dt_IssuedPubDateField;
            }
            set {
                if ((this.dt_IssuedPubDateField.Equals(value) != true)) {
                    this.dt_IssuedPubDateField = value;
                    this.RaisePropertyChanged("dt_IssuedPubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PCTAppDate {
            get {
                return this.dt_PCTAppDateField;
            }
            set {
                if ((this.dt_PCTAppDateField.Equals(value) != true)) {
                    this.dt_PCTAppDateField = value;
                    this.RaisePropertyChanged("dt_PCTAppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PriorityStatusDate {
            get {
                return this.dt_PriorityStatusDateField;
            }
            set {
                if ((this.dt_PriorityStatusDateField.Equals(value) != true)) {
                    this.dt_PriorityStatusDateField = value;
                    this.RaisePropertyChanged("dt_PriorityStatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendCheckDate {
            get {
                return this.dt_SendCheckDateField;
            }
            set {
                if ((this.dt_SendCheckDateField.Equals(value) != true)) {
                    this.dt_SendCheckDateField = value;
                    this.RaisePropertyChanged("dt_SendCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldSbmtDate {
            get {
                return this.dt_ShldSbmtDateField;
            }
            set {
                if ((this.dt_ShldSbmtDateField.Equals(value) != true)) {
                    this.dt_ShldSbmtDateField = value;
                    this.RaisePropertyChanged("dt_ShldSbmtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_StartDate {
            get {
                return this.dt_StartDateField;
            }
            set {
                if ((this.dt_StartDateField.Equals(value) != true)) {
                    this.dt_StartDateField = value;
                    this.RaisePropertyChanged("dt_StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_UndertakeDate {
            get {
                return this.dt_UndertakeDateField;
            }
            set {
                if ((this.dt_UndertakeDateField.Equals(value) != true)) {
                    this.dt_UndertakeDateField = value;
                    this.RaisePropertyChanged("dt_UndertakeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CurrentProcessCodeID {
            get {
                return this.n_CurrentProcessCodeIDField;
            }
            set {
                if ((this.n_CurrentProcessCodeIDField.Equals(value) != true)) {
                    this.n_CurrentProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_CurrentProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PFlowNum {
            get {
                return this.n_PFlowNumField;
            }
            set {
                if ((this.n_PFlowNumField.Equals(value) != true)) {
                    this.n_PFlowNumField = value;
                    this.RaisePropertyChanged("n_PFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentTypeID {
            get {
                return this.n_PatentTypeIDField;
            }
            set {
                if ((this.n_PatentTypeIDField.Equals(value) != true)) {
                    this.n_PatentTypeIDField = value;
                    this.RaisePropertyChanged("n_PatentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RegCountry {
            get {
                return this.n_RegCountryField;
            }
            set {
                if ((this.n_RegCountryField.Equals(value) != true)) {
                    this.n_RegCountryField = value;
                    this.RaisePropertyChanged("n_RegCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_StartProcessCodeID {
            get {
                return this.n_StartProcessCodeIDField;
            }
            set {
                if ((this.n_StartProcessCodeIDField.Equals(value) != true)) {
                    this.n_StartProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_StartProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyToName {
            get {
                return this.s_AgencyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyToNameField, value) != true)) {
                    this.s_AgencyToNameField = value;
                    this.RaisePropertyChanged("s_AgencyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ApplicantsNativeName {
            get {
                return this.s_ApplicantsNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsNativeNameField, value) != true)) {
                    this.s_ApplicantsNativeNameField = value;
                    this.RaisePropertyChanged("s_ApplicantsNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Area {
            get {
                return this.s_AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AreaField, value) != true)) {
                    this.s_AreaField = value;
                    this.RaisePropertyChanged("s_Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseNativeName {
            get {
                return this.s_CaseNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNativeNameField, value) != true)) {
                    this.s_CaseNativeNameField = value;
                    this.RaisePropertyChanged("s_CaseNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseOtherName {
            get {
                return this.s_CaseOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseOtherNameField, value) != true)) {
                    this.s_CaseOtherNameField = value;
                    this.RaisePropertyChanged("s_CaseOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CertfNo {
            get {
                return this.s_CertfNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CertfNoField, value) != true)) {
                    this.s_CertfNoField = value;
                    this.RaisePropertyChanged("s_CertfNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCName {
            get {
                return this.s_ClientCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCNameField, value) != true)) {
                    this.s_ClientCNameField = value;
                    this.RaisePropertyChanged("s_ClientCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientContacts {
            get {
                return this.s_ClientContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientContactsField, value) != true)) {
                    this.s_ClientContactsField = value;
                    this.RaisePropertyChanged("s_ClientContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientOtherName {
            get {
                return this.s_ClientOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientOtherNameField, value) != true)) {
                    this.s_ClientOtherNameField = value;
                    this.RaisePropertyChanged("s_ClientOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientPhone {
            get {
                return this.s_ClientPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientPhoneField, value) != true)) {
                    this.s_ClientPhoneField = value;
                    this.RaisePropertyChanged("s_ClientPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CoopAgencyToNo {
            get {
                return this.s_CoopAgencyToNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CoopAgencyToNoField, value) != true)) {
                    this.s_CoopAgencyToNoField = value;
                    this.RaisePropertyChanged("s_CoopAgencyToNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField1 {
            get {
                return this.s_CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField1Field, value) != true)) {
                    this.s_CustomField1Field = value;
                    this.RaisePropertyChanged("s_CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField10 {
            get {
                return this.s_CustomField10Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField10Field, value) != true)) {
                    this.s_CustomField10Field = value;
                    this.RaisePropertyChanged("s_CustomField10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField2 {
            get {
                return this.s_CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField2Field, value) != true)) {
                    this.s_CustomField2Field = value;
                    this.RaisePropertyChanged("s_CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField3 {
            get {
                return this.s_CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField3Field, value) != true)) {
                    this.s_CustomField3Field = value;
                    this.RaisePropertyChanged("s_CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField4 {
            get {
                return this.s_CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField4Field, value) != true)) {
                    this.s_CustomField4Field = value;
                    this.RaisePropertyChanged("s_CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField5 {
            get {
                return this.s_CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField5Field, value) != true)) {
                    this.s_CustomField5Field = value;
                    this.RaisePropertyChanged("s_CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField6 {
            get {
                return this.s_CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField6Field, value) != true)) {
                    this.s_CustomField6Field = value;
                    this.RaisePropertyChanged("s_CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField7 {
            get {
                return this.s_CustomField7Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField7Field, value) != true)) {
                    this.s_CustomField7Field = value;
                    this.RaisePropertyChanged("s_CustomField7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField8 {
            get {
                return this.s_CustomField8Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField8Field, value) != true)) {
                    this.s_CustomField8Field = value;
                    this.RaisePropertyChanged("s_CustomField8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField9 {
            get {
                return this.s_CustomField9Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField9Field, value) != true)) {
                    this.s_CustomField9Field = value;
                    this.RaisePropertyChanged("s_CustomField9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Inventors {
            get {
                return this.s_InventorsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InventorsField, value) != true)) {
                    this.s_InventorsField = value;
                    this.RaisePropertyChanged("s_Inventors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IssuedPubNo {
            get {
                return this.s_IssuedPubNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IssuedPubNoField, value) != true)) {
                    this.s_IssuedPubNoField = value;
                    this.RaisePropertyChanged("s_IssuedPubNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OldSerial {
            get {
                return this.s_OldSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OldSerialField, value) != true)) {
                    this.s_OldSerialField = value;
                    this.RaisePropertyChanged("s_OldSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PCTAppNo {
            get {
                return this.s_PCTAppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PCTAppNoField, value) != true)) {
                    this.s_PCTAppNoField = value;
                    this.RaisePropertyChanged("s_PCTAppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PriorityStatus {
            get {
                return this.s_PriorityStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PriorityStatusField, value) != true)) {
                    this.s_PriorityStatusField = value;
                    this.RaisePropertyChanged("s_PriorityStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SerialLocation {
            get {
                return this.s_SerialLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SerialLocationField, value) != true)) {
                    this.s_SerialLocationField = value;
                    this.RaisePropertyChanged("s_SerialLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TechnologyType {
            get {
                return this.s_TechnologyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TechnologyTypeField, value) != true)) {
                    this.s_TechnologyTypeField = value;
                    this.RaisePropertyChanged("s_TechnologyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TotalSerial {
            get {
                return this.s_TotalSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TotalSerialField, value) != true)) {
                    this.s_TotalSerialField = value;
                    this.RaisePropertyChanged("s_TotalSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_aaa {
            get {
                return this.s_aaaField;
            }
            set {
                if ((object.ReferenceEquals(this.s_aaaField, value) != true)) {
                    this.s_aaaField = value;
                    this.RaisePropertyChanged("s_aaa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrademarkData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class TrademarkData : TaskFlowTest.IPSPServices.TrademarkBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSubmitStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentProcessName {
            get {
                return this.CurrentProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentProcessNameField, value) != true)) {
                    this.CurrentProcessNameField = value;
                    this.RaisePropertyChanged("CurrentProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSubmitStatus {
            get {
                return this.s_CaseSubmitStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSubmitStatusField, value) != true)) {
                    this.s_CaseSubmitStatusField = value;
                    this.RaisePropertyChanged("s_CaseSubmitStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrademarkBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData))]
    public partial class TrademarkBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_BeginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_NextRenewalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldSbmtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_UndertakeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] img_MainThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_MadBasicCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RegCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_StartProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AcceptNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CoopAgencyToNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsRegOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PrePubIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RegistrationNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SerialLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TotalSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TrademarkClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TrademarkTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_BeginDate {
            get {
                return this.dt_BeginDateField;
            }
            set {
                if ((this.dt_BeginDateField.Equals(value) != true)) {
                    this.dt_BeginDateField = value;
                    this.RaisePropertyChanged("dt_BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EndDate {
            get {
                return this.dt_EndDateField;
            }
            set {
                if ((this.dt_EndDateField.Equals(value) != true)) {
                    this.dt_EndDateField = value;
                    this.RaisePropertyChanged("dt_EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_NextRenewal {
            get {
                return this.dt_NextRenewalField;
            }
            set {
                if ((this.dt_NextRenewalField.Equals(value) != true)) {
                    this.dt_NextRenewalField = value;
                    this.RaisePropertyChanged("dt_NextRenewal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_RegistrationDate {
            get {
                return this.dt_RegistrationDateField;
            }
            set {
                if ((this.dt_RegistrationDateField.Equals(value) != true)) {
                    this.dt_RegistrationDateField = value;
                    this.RaisePropertyChanged("dt_RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendCheckDate {
            get {
                return this.dt_SendCheckDateField;
            }
            set {
                if ((this.dt_SendCheckDateField.Equals(value) != true)) {
                    this.dt_SendCheckDateField = value;
                    this.RaisePropertyChanged("dt_SendCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldSbmtDate {
            get {
                return this.dt_ShldSbmtDateField;
            }
            set {
                if ((this.dt_ShldSbmtDateField.Equals(value) != true)) {
                    this.dt_ShldSbmtDateField = value;
                    this.RaisePropertyChanged("dt_ShldSbmtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_UndertakeDate {
            get {
                return this.dt_UndertakeDateField;
            }
            set {
                if ((this.dt_UndertakeDateField.Equals(value) != true)) {
                    this.dt_UndertakeDateField = value;
                    this.RaisePropertyChanged("dt_UndertakeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] img_MainThumbnail {
            get {
                return this.img_MainThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.img_MainThumbnailField, value) != true)) {
                    this.img_MainThumbnailField = value;
                    this.RaisePropertyChanged("img_MainThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_MadBasicCountry {
            get {
                return this.n_MadBasicCountryField;
            }
            set {
                if ((this.n_MadBasicCountryField.Equals(value) != true)) {
                    this.n_MadBasicCountryField = value;
                    this.RaisePropertyChanged("n_MadBasicCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RegCountry {
            get {
                return this.n_RegCountryField;
            }
            set {
                if ((this.n_RegCountryField.Equals(value) != true)) {
                    this.n_RegCountryField = value;
                    this.RaisePropertyChanged("n_RegCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_StartProcessCodeID {
            get {
                return this.n_StartProcessCodeIDField;
            }
            set {
                if ((this.n_StartProcessCodeIDField.Equals(value) != true)) {
                    this.n_StartProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_StartProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TFlowNum {
            get {
                return this.n_TFlowNumField;
            }
            set {
                if ((this.n_TFlowNumField.Equals(value) != true)) {
                    this.n_TFlowNumField = value;
                    this.RaisePropertyChanged("n_TFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AcceptNO {
            get {
                return this.s_AcceptNOField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AcceptNOField, value) != true)) {
                    this.s_AcceptNOField = value;
                    this.RaisePropertyChanged("s_AcceptNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyToName {
            get {
                return this.s_AgencyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyToNameField, value) != true)) {
                    this.s_AgencyToNameField = value;
                    this.RaisePropertyChanged("s_AgencyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ApplicantsNativeName {
            get {
                return this.s_ApplicantsNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsNativeNameField, value) != true)) {
                    this.s_ApplicantsNativeNameField = value;
                    this.RaisePropertyChanged("s_ApplicantsNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseOtherName {
            get {
                return this.s_CaseOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseOtherNameField, value) != true)) {
                    this.s_CaseOtherNameField = value;
                    this.RaisePropertyChanged("s_CaseOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientArea {
            get {
                return this.s_ClientAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientAreaField, value) != true)) {
                    this.s_ClientAreaField = value;
                    this.RaisePropertyChanged("s_ClientArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientContacts {
            get {
                return this.s_ClientContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientContactsField, value) != true)) {
                    this.s_ClientContactsField = value;
                    this.RaisePropertyChanged("s_ClientContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientOtherName {
            get {
                return this.s_ClientOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientOtherNameField, value) != true)) {
                    this.s_ClientOtherNameField = value;
                    this.RaisePropertyChanged("s_ClientOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientPhone {
            get {
                return this.s_ClientPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientPhoneField, value) != true)) {
                    this.s_ClientPhoneField = value;
                    this.RaisePropertyChanged("s_ClientPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CoopAgencyToNo {
            get {
                return this.s_CoopAgencyToNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CoopAgencyToNoField, value) != true)) {
                    this.s_CoopAgencyToNoField = value;
                    this.RaisePropertyChanged("s_CoopAgencyToNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField1 {
            get {
                return this.s_CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField1Field, value) != true)) {
                    this.s_CustomField1Field = value;
                    this.RaisePropertyChanged("s_CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField10 {
            get {
                return this.s_CustomField10Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField10Field, value) != true)) {
                    this.s_CustomField10Field = value;
                    this.RaisePropertyChanged("s_CustomField10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField2 {
            get {
                return this.s_CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField2Field, value) != true)) {
                    this.s_CustomField2Field = value;
                    this.RaisePropertyChanged("s_CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField3 {
            get {
                return this.s_CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField3Field, value) != true)) {
                    this.s_CustomField3Field = value;
                    this.RaisePropertyChanged("s_CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField4 {
            get {
                return this.s_CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField4Field, value) != true)) {
                    this.s_CustomField4Field = value;
                    this.RaisePropertyChanged("s_CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField5 {
            get {
                return this.s_CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField5Field, value) != true)) {
                    this.s_CustomField5Field = value;
                    this.RaisePropertyChanged("s_CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField6 {
            get {
                return this.s_CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField6Field, value) != true)) {
                    this.s_CustomField6Field = value;
                    this.RaisePropertyChanged("s_CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField7 {
            get {
                return this.s_CustomField7Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField7Field, value) != true)) {
                    this.s_CustomField7Field = value;
                    this.RaisePropertyChanged("s_CustomField7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField8 {
            get {
                return this.s_CustomField8Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField8Field, value) != true)) {
                    this.s_CustomField8Field = value;
                    this.RaisePropertyChanged("s_CustomField8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField9 {
            get {
                return this.s_CustomField9Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField9Field, value) != true)) {
                    this.s_CustomField9Field = value;
                    this.RaisePropertyChanged("s_CustomField9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FlowDirection {
            get {
                return this.s_FlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlowDirectionField, value) != true)) {
                    this.s_FlowDirectionField = value;
                    this.RaisePropertyChanged("s_FlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsRegOnline {
            get {
                return this.s_IsRegOnlineField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsRegOnlineField, value) != true)) {
                    this.s_IsRegOnlineField = value;
                    this.RaisePropertyChanged("s_IsRegOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PrePubIssue {
            get {
                return this.s_PrePubIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PrePubIssueField, value) != true)) {
                    this.s_PrePubIssueField = value;
                    this.RaisePropertyChanged("s_PrePubIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RegistrationNO {
            get {
                return this.s_RegistrationNOField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RegistrationNOField, value) != true)) {
                    this.s_RegistrationNOField = value;
                    this.RaisePropertyChanged("s_RegistrationNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SerialLocation {
            get {
                return this.s_SerialLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SerialLocationField, value) != true)) {
                    this.s_SerialLocationField = value;
                    this.RaisePropertyChanged("s_SerialLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TotalSerial {
            get {
                return this.s_TotalSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TotalSerialField, value) != true)) {
                    this.s_TotalSerialField = value;
                    this.RaisePropertyChanged("s_TotalSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TrademarkClass {
            get {
                return this.s_TrademarkClassField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TrademarkClassField, value) != true)) {
                    this.s_TrademarkClassField = value;
                    this.RaisePropertyChanged("s_TrademarkClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TrademarkType {
            get {
                return this.s_TrademarkTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TrademarkTypeField, value) != true)) {
                    this.s_TrademarkTypeField = value;
                    this.RaisePropertyChanged("s_TrademarkType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class DomainData : TaskFlowTest.IPSPServices.DomainBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSubmitStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSubmitStatus {
            get {
                return this.s_CaseSubmitStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSubmitStatusField, value) != true)) {
                    this.s_CaseSubmitStatusField = value;
                    this.RaisePropertyChanged("s_CaseSubmitStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData))]
    public partial class DomainBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ApplyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_NextRenewalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldSbmtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RegCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_StartProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CoopAgencyToNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_Apply {
            get {
                return this.dt_ApplyField;
            }
            set {
                if ((this.dt_ApplyField.Equals(value) != true)) {
                    this.dt_ApplyField = value;
                    this.RaisePropertyChanged("dt_Apply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_NextRenewal {
            get {
                return this.dt_NextRenewalField;
            }
            set {
                if ((this.dt_NextRenewalField.Equals(value) != true)) {
                    this.dt_NextRenewalField = value;
                    this.RaisePropertyChanged("dt_NextRenewal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendCheckDate {
            get {
                return this.dt_SendCheckDateField;
            }
            set {
                if ((this.dt_SendCheckDateField.Equals(value) != true)) {
                    this.dt_SendCheckDateField = value;
                    this.RaisePropertyChanged("dt_SendCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldSbmtDate {
            get {
                return this.dt_ShldSbmtDateField;
            }
            set {
                if ((this.dt_ShldSbmtDateField.Equals(value) != true)) {
                    this.dt_ShldSbmtDateField = value;
                    this.RaisePropertyChanged("dt_ShldSbmtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DFlowNum {
            get {
                return this.n_DFlowNumField;
            }
            set {
                if ((this.n_DFlowNumField.Equals(value) != true)) {
                    this.n_DFlowNumField = value;
                    this.RaisePropertyChanged("n_DFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RegCountry {
            get {
                return this.n_RegCountryField;
            }
            set {
                if ((this.n_RegCountryField.Equals(value) != true)) {
                    this.n_RegCountryField = value;
                    this.RaisePropertyChanged("n_RegCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_StartProcessCodeID {
            get {
                return this.n_StartProcessCodeIDField;
            }
            set {
                if ((this.n_StartProcessCodeIDField.Equals(value) != true)) {
                    this.n_StartProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_StartProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyToName {
            get {
                return this.s_AgencyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyToNameField, value) != true)) {
                    this.s_AgencyToNameField = value;
                    this.RaisePropertyChanged("s_AgencyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseOtherName {
            get {
                return this.s_CaseOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseOtherNameField, value) != true)) {
                    this.s_CaseOtherNameField = value;
                    this.RaisePropertyChanged("s_CaseOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientOtherName {
            get {
                return this.s_ClientOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientOtherNameField, value) != true)) {
                    this.s_ClientOtherNameField = value;
                    this.RaisePropertyChanged("s_ClientOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientPhone {
            get {
                return this.s_ClientPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientPhoneField, value) != true)) {
                    this.s_ClientPhoneField = value;
                    this.RaisePropertyChanged("s_ClientPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CoopAgencyToNo {
            get {
                return this.s_CoopAgencyToNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CoopAgencyToNoField, value) != true)) {
                    this.s_CoopAgencyToNoField = value;
                    this.RaisePropertyChanged("s_CoopAgencyToNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField1 {
            get {
                return this.s_CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField1Field, value) != true)) {
                    this.s_CustomField1Field = value;
                    this.RaisePropertyChanged("s_CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField10 {
            get {
                return this.s_CustomField10Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField10Field, value) != true)) {
                    this.s_CustomField10Field = value;
                    this.RaisePropertyChanged("s_CustomField10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField2 {
            get {
                return this.s_CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField2Field, value) != true)) {
                    this.s_CustomField2Field = value;
                    this.RaisePropertyChanged("s_CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField3 {
            get {
                return this.s_CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField3Field, value) != true)) {
                    this.s_CustomField3Field = value;
                    this.RaisePropertyChanged("s_CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField4 {
            get {
                return this.s_CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField4Field, value) != true)) {
                    this.s_CustomField4Field = value;
                    this.RaisePropertyChanged("s_CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField5 {
            get {
                return this.s_CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField5Field, value) != true)) {
                    this.s_CustomField5Field = value;
                    this.RaisePropertyChanged("s_CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField6 {
            get {
                return this.s_CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField6Field, value) != true)) {
                    this.s_CustomField6Field = value;
                    this.RaisePropertyChanged("s_CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField7 {
            get {
                return this.s_CustomField7Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField7Field, value) != true)) {
                    this.s_CustomField7Field = value;
                    this.RaisePropertyChanged("s_CustomField7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField8 {
            get {
                return this.s_CustomField8Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField8Field, value) != true)) {
                    this.s_CustomField8Field = value;
                    this.RaisePropertyChanged("s_CustomField8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField9 {
            get {
                return this.s_CustomField9Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField9Field, value) != true)) {
                    this.s_CustomField9Field = value;
                    this.RaisePropertyChanged("s_CustomField9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_DomainStatus {
            get {
                return this.s_DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DomainStatusField, value) != true)) {
                    this.s_DomainStatusField = value;
                    this.RaisePropertyChanged("s_DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FlowDirection {
            get {
                return this.s_FlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlowDirectionField, value) != true)) {
                    this.s_FlowDirectionField = value;
                    this.RaisePropertyChanged("s_FlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CopyRightData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class CopyRightData : TaskFlowTest.IPSPServices.CopyRightBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSubmitStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSubmitStatus {
            get {
                return this.s_CaseSubmitStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSubmitStatusField, value) != true)) {
                    this.s_CaseSubmitStatusField = value;
                    this.RaisePropertyChanged("s_CaseSubmitStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CopyRightBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData))]
    public partial class CopyRightBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldSbmtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CopyrightTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RegCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_StartProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CoopAgencyToNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SerialLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TotalSerialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendCheckDate {
            get {
                return this.dt_SendCheckDateField;
            }
            set {
                if ((this.dt_SendCheckDateField.Equals(value) != true)) {
                    this.dt_SendCheckDateField = value;
                    this.RaisePropertyChanged("dt_SendCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldSbmtDate {
            get {
                return this.dt_ShldSbmtDateField;
            }
            set {
                if ((this.dt_ShldSbmtDateField.Equals(value) != true)) {
                    this.dt_ShldSbmtDateField = value;
                    this.RaisePropertyChanged("dt_ShldSbmtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CFlowNum {
            get {
                return this.n_CFlowNumField;
            }
            set {
                if ((this.n_CFlowNumField.Equals(value) != true)) {
                    this.n_CFlowNumField = value;
                    this.RaisePropertyChanged("n_CFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CopyrightType {
            get {
                return this.n_CopyrightTypeField;
            }
            set {
                if ((this.n_CopyrightTypeField.Equals(value) != true)) {
                    this.n_CopyrightTypeField = value;
                    this.RaisePropertyChanged("n_CopyrightType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RegCountry {
            get {
                return this.n_RegCountryField;
            }
            set {
                if ((this.n_RegCountryField.Equals(value) != true)) {
                    this.n_RegCountryField = value;
                    this.RaisePropertyChanged("n_RegCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_StartProcessCodeID {
            get {
                return this.n_StartProcessCodeIDField;
            }
            set {
                if ((this.n_StartProcessCodeIDField.Equals(value) != true)) {
                    this.n_StartProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_StartProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyToName {
            get {
                return this.s_AgencyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyToNameField, value) != true)) {
                    this.s_AgencyToNameField = value;
                    this.RaisePropertyChanged("s_AgencyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseOtherName {
            get {
                return this.s_CaseOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseOtherNameField, value) != true)) {
                    this.s_CaseOtherNameField = value;
                    this.RaisePropertyChanged("s_CaseOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientOtherName {
            get {
                return this.s_ClientOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientOtherNameField, value) != true)) {
                    this.s_ClientOtherNameField = value;
                    this.RaisePropertyChanged("s_ClientOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientPhone {
            get {
                return this.s_ClientPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientPhoneField, value) != true)) {
                    this.s_ClientPhoneField = value;
                    this.RaisePropertyChanged("s_ClientPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CoopAgencyToNo {
            get {
                return this.s_CoopAgencyToNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CoopAgencyToNoField, value) != true)) {
                    this.s_CoopAgencyToNoField = value;
                    this.RaisePropertyChanged("s_CoopAgencyToNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField1 {
            get {
                return this.s_CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField1Field, value) != true)) {
                    this.s_CustomField1Field = value;
                    this.RaisePropertyChanged("s_CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField10 {
            get {
                return this.s_CustomField10Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField10Field, value) != true)) {
                    this.s_CustomField10Field = value;
                    this.RaisePropertyChanged("s_CustomField10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField2 {
            get {
                return this.s_CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField2Field, value) != true)) {
                    this.s_CustomField2Field = value;
                    this.RaisePropertyChanged("s_CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField3 {
            get {
                return this.s_CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField3Field, value) != true)) {
                    this.s_CustomField3Field = value;
                    this.RaisePropertyChanged("s_CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField4 {
            get {
                return this.s_CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField4Field, value) != true)) {
                    this.s_CustomField4Field = value;
                    this.RaisePropertyChanged("s_CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField5 {
            get {
                return this.s_CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField5Field, value) != true)) {
                    this.s_CustomField5Field = value;
                    this.RaisePropertyChanged("s_CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField6 {
            get {
                return this.s_CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField6Field, value) != true)) {
                    this.s_CustomField6Field = value;
                    this.RaisePropertyChanged("s_CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField7 {
            get {
                return this.s_CustomField7Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField7Field, value) != true)) {
                    this.s_CustomField7Field = value;
                    this.RaisePropertyChanged("s_CustomField7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField8 {
            get {
                return this.s_CustomField8Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField8Field, value) != true)) {
                    this.s_CustomField8Field = value;
                    this.RaisePropertyChanged("s_CustomField8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField9 {
            get {
                return this.s_CustomField9Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField9Field, value) != true)) {
                    this.s_CustomField9Field = value;
                    this.RaisePropertyChanged("s_CustomField9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FlowDirection {
            get {
                return this.s_FlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlowDirectionField, value) != true)) {
                    this.s_FlowDirectionField = value;
                    this.RaisePropertyChanged("s_FlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SerialLocation {
            get {
                return this.s_SerialLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SerialLocationField, value) != true)) {
                    this.s_SerialLocationField = value;
                    this.RaisePropertyChanged("s_SerialLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TotalSerial {
            get {
                return this.s_TotalSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TotalSerialField, value) != true)) {
                    this.s_TotalSerialField = value;
                    this.RaisePropertyChanged("s_TotalSerial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherCaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class OtherCaseData : TaskFlowTest.IPSPServices.OtherCaseBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSubmitStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSubmitStatus {
            get {
                return this.s_CaseSubmitStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSubmitStatusField, value) != true)) {
                    this.s_CaseSubmitStatusField = value;
                    this.RaisePropertyChanged("s_CaseSubmitStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherCaseBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData))]
    public partial class OtherCaseBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldSbmtDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RegCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_StartProcessCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientOtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CoopAgencyToNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CustomField9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendCheckDate {
            get {
                return this.dt_SendCheckDateField;
            }
            set {
                if ((this.dt_SendCheckDateField.Equals(value) != true)) {
                    this.dt_SendCheckDateField = value;
                    this.RaisePropertyChanged("dt_SendCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldSbmtDate {
            get {
                return this.dt_ShldSbmtDateField;
            }
            set {
                if ((this.dt_ShldSbmtDateField.Equals(value) != true)) {
                    this.dt_ShldSbmtDateField = value;
                    this.RaisePropertyChanged("dt_ShldSbmtDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BusinessTypeID {
            get {
                return this.n_BusinessTypeIDField;
            }
            set {
                if ((this.n_BusinessTypeIDField.Equals(value) != true)) {
                    this.n_BusinessTypeIDField = value;
                    this.RaisePropertyChanged("n_BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OFlowNum {
            get {
                return this.n_OFlowNumField;
            }
            set {
                if ((this.n_OFlowNumField.Equals(value) != true)) {
                    this.n_OFlowNumField = value;
                    this.RaisePropertyChanged("n_OFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RegCountry {
            get {
                return this.n_RegCountryField;
            }
            set {
                if ((this.n_RegCountryField.Equals(value) != true)) {
                    this.n_RegCountryField = value;
                    this.RaisePropertyChanged("n_RegCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_SecondAttorney {
            get {
                return this.n_SecondAttorneyField;
            }
            set {
                if ((this.n_SecondAttorneyField.Equals(value) != true)) {
                    this.n_SecondAttorneyField = value;
                    this.RaisePropertyChanged("n_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_StartProcessCodeID {
            get {
                return this.n_StartProcessCodeIDField;
            }
            set {
                if ((this.n_StartProcessCodeIDField.Equals(value) != true)) {
                    this.n_StartProcessCodeIDField = value;
                    this.RaisePropertyChanged("n_StartProcessCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyToName {
            get {
                return this.s_AgencyToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyToNameField, value) != true)) {
                    this.s_AgencyToNameField = value;
                    this.RaisePropertyChanged("s_AgencyToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseOtherName {
            get {
                return this.s_CaseOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseOtherNameField, value) != true)) {
                    this.s_CaseOtherNameField = value;
                    this.RaisePropertyChanged("s_CaseOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientOtherName {
            get {
                return this.s_ClientOtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientOtherNameField, value) != true)) {
                    this.s_ClientOtherNameField = value;
                    this.RaisePropertyChanged("s_ClientOtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientPhone {
            get {
                return this.s_ClientPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientPhoneField, value) != true)) {
                    this.s_ClientPhoneField = value;
                    this.RaisePropertyChanged("s_ClientPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CoopAgencyToNo {
            get {
                return this.s_CoopAgencyToNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CoopAgencyToNoField, value) != true)) {
                    this.s_CoopAgencyToNoField = value;
                    this.RaisePropertyChanged("s_CoopAgencyToNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField1 {
            get {
                return this.s_CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField1Field, value) != true)) {
                    this.s_CustomField1Field = value;
                    this.RaisePropertyChanged("s_CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField10 {
            get {
                return this.s_CustomField10Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField10Field, value) != true)) {
                    this.s_CustomField10Field = value;
                    this.RaisePropertyChanged("s_CustomField10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField2 {
            get {
                return this.s_CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField2Field, value) != true)) {
                    this.s_CustomField2Field = value;
                    this.RaisePropertyChanged("s_CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField3 {
            get {
                return this.s_CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField3Field, value) != true)) {
                    this.s_CustomField3Field = value;
                    this.RaisePropertyChanged("s_CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField4 {
            get {
                return this.s_CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField4Field, value) != true)) {
                    this.s_CustomField4Field = value;
                    this.RaisePropertyChanged("s_CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField5 {
            get {
                return this.s_CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField5Field, value) != true)) {
                    this.s_CustomField5Field = value;
                    this.RaisePropertyChanged("s_CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField6 {
            get {
                return this.s_CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField6Field, value) != true)) {
                    this.s_CustomField6Field = value;
                    this.RaisePropertyChanged("s_CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField7 {
            get {
                return this.s_CustomField7Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField7Field, value) != true)) {
                    this.s_CustomField7Field = value;
                    this.RaisePropertyChanged("s_CustomField7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField8 {
            get {
                return this.s_CustomField8Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField8Field, value) != true)) {
                    this.s_CustomField8Field = value;
                    this.RaisePropertyChanged("s_CustomField8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CustomField9 {
            get {
                return this.s_CustomField9Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_CustomField9Field, value) != true)) {
                    this.s_CustomField9Field = value;
                    this.RaisePropertyChanged("s_CustomField9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FlowDirection {
            get {
                return this.s_FlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlowDirectionField, value) != true)) {
                    this.s_FlowDirectionField = value;
                    this.RaisePropertyChanged("s_FlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ClientData : TaskFlowTest.IPSPServices.ClientBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseCount {
            get {
                return this.n_CaseCountField;
            }
            set {
                if ((this.n_CaseCountField.Equals(value) != true)) {
                    this.n_CaseCountField = value;
                    this.RaisePropertyChanged("n_CaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactName {
            get {
                return this.s_FirstContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactNameField, value) != true)) {
                    this.s_FirstContactNameField = value;
                    this.RaisePropertyChanged("s_FirstContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroducerName {
            get {
                return this.s_IntroducerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerNameField, value) != true)) {
                    this.s_IntroducerNameField = value;
                    this.RaisePropertyChanged("s_IntroducerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData))]
    public partial class ClientBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FirstCaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_LastCaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CopyrightCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DomainCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OtherCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TMCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstContactTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IMAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PatentChargerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TMChargerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TwitterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_WebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ZipCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FirstCaseDate {
            get {
                return this.dt_FirstCaseDateField;
            }
            set {
                if ((this.dt_FirstCaseDateField.Equals(value) != true)) {
                    this.dt_FirstCaseDateField = value;
                    this.RaisePropertyChanged("dt_FirstCaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_LastCaseDate {
            get {
                return this.dt_LastCaseDateField;
            }
            set {
                if ((this.dt_LastCaseDateField.Equals(value) != true)) {
                    this.dt_LastCaseDateField = value;
                    this.RaisePropertyChanged("dt_LastCaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((this.n_ClientIDField.Equals(value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CopyrightCaseCount {
            get {
                return this.n_CopyrightCaseCountField;
            }
            set {
                if ((this.n_CopyrightCaseCountField.Equals(value) != true)) {
                    this.n_CopyrightCaseCountField = value;
                    this.RaisePropertyChanged("n_CopyrightCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Country {
            get {
                return this.n_CountryField;
            }
            set {
                if ((this.n_CountryField.Equals(value) != true)) {
                    this.n_CountryField = value;
                    this.RaisePropertyChanged("n_Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DomainCaseCount {
            get {
                return this.n_DomainCaseCountField;
            }
            set {
                if ((this.n_DomainCaseCountField.Equals(value) != true)) {
                    this.n_DomainCaseCountField = value;
                    this.RaisePropertyChanged("n_DomainCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Language {
            get {
                return this.n_LanguageField;
            }
            set {
                if ((this.n_LanguageField.Equals(value) != true)) {
                    this.n_LanguageField = value;
                    this.RaisePropertyChanged("n_Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OtherCaseCount {
            get {
                return this.n_OtherCaseCountField;
            }
            set {
                if ((this.n_OtherCaseCountField.Equals(value) != true)) {
                    this.n_OtherCaseCountField = value;
                    this.RaisePropertyChanged("n_OtherCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentCaseCount {
            get {
                return this.n_PatentCaseCountField;
            }
            set {
                if ((this.n_PatentCaseCountField.Equals(value) != true)) {
                    this.n_PatentCaseCountField = value;
                    this.RaisePropertyChanged("n_PatentCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TMCaseCount {
            get {
                return this.n_TMCaseCountField;
            }
            set {
                if ((this.n_TMCaseCountField.Equals(value) != true)) {
                    this.n_TMCaseCountField = value;
                    this.RaisePropertyChanged("n_TMCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Addresses {
            get {
                return this.s_AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AddressesField, value) != true)) {
                    this.s_AddressesField = value;
                    this.RaisePropertyChanged("s_Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Area {
            get {
                return this.s_AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AreaField, value) != true)) {
                    this.s_AreaField = value;
                    this.RaisePropertyChanged("s_Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCode {
            get {
                return this.s_ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCodeField, value) != true)) {
                    this.s_ClientCodeField = value;
                    this.RaisePropertyChanged("s_ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsAddress {
            get {
                return this.s_ContactsAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsAddressField, value) != true)) {
                    this.s_ContactsAddressField = value;
                    this.RaisePropertyChanged("s_ContactsAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsTel {
            get {
                return this.s_ContactsTelField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsTelField, value) != true)) {
                    this.s_ContactsTelField = value;
                    this.RaisePropertyChanged("s_ContactsTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsZipCode {
            get {
                return this.s_ContactsZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsZipCodeField, value) != true)) {
                    this.s_ContactsZipCodeField = value;
                    this.RaisePropertyChanged("s_ContactsZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Credit {
            get {
                return this.s_CreditField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreditField, value) != true)) {
                    this.s_CreditField = value;
                    this.RaisePropertyChanged("s_Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Email {
            get {
                return this.s_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EmailField, value) != true)) {
                    this.s_EmailField = value;
                    this.RaisePropertyChanged("s_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Facebook {
            get {
                return this.s_FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FacebookField, value) != true)) {
                    this.s_FacebookField = value;
                    this.RaisePropertyChanged("s_Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Fax {
            get {
                return this.s_FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FaxField, value) != true)) {
                    this.s_FaxField = value;
                    this.RaisePropertyChanged("s_Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactEmail {
            get {
                return this.s_FirstContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactEmailField, value) != true)) {
                    this.s_FirstContactEmailField = value;
                    this.RaisePropertyChanged("s_FirstContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactFirstName {
            get {
                return this.s_FirstContactFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactFirstNameField, value) != true)) {
                    this.s_FirstContactFirstNameField = value;
                    this.RaisePropertyChanged("s_FirstContactFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactIdentity {
            get {
                return this.s_FirstContactIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactIdentityField, value) != true)) {
                    this.s_FirstContactIdentityField = value;
                    this.RaisePropertyChanged("s_FirstContactIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactLastName {
            get {
                return this.s_FirstContactLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactLastNameField, value) != true)) {
                    this.s_FirstContactLastNameField = value;
                    this.RaisePropertyChanged("s_FirstContactLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstContactTel {
            get {
                return this.s_FirstContactTelField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstContactTelField, value) != true)) {
                    this.s_FirstContactTelField = value;
                    this.RaisePropertyChanged("s_FirstContactTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IMAddress {
            get {
                return this.s_IMAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IMAddressField, value) != true)) {
                    this.s_IMAddressField = value;
                    this.RaisePropertyChanged("s_IMAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroducerFirstName {
            get {
                return this.s_IntroducerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerFirstNameField, value) != true)) {
                    this.s_IntroducerFirstNameField = value;
                    this.RaisePropertyChanged("s_IntroducerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroducerLastName {
            get {
                return this.s_IntroducerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerLastNameField, value) != true)) {
                    this.s_IntroducerLastNameField = value;
                    this.RaisePropertyChanged("s_IntroducerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Mobile {
            get {
                return this.s_MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.s_MobileField, value) != true)) {
                    this.s_MobileField = value;
                    this.RaisePropertyChanged("s_Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NativeName {
            get {
                return this.s_NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NativeNameField, value) != true)) {
                    this.s_NativeNameField = value;
                    this.RaisePropertyChanged("s_NativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OtherName {
            get {
                return this.s_OtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OtherNameField, value) != true)) {
                    this.s_OtherNameField = value;
                    this.RaisePropertyChanged("s_OtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PatentChargerName {
            get {
                return this.s_PatentChargerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PatentChargerNameField, value) != true)) {
                    this.s_PatentChargerNameField = value;
                    this.RaisePropertyChanged("s_PatentChargerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Phone {
            get {
                return this.s_PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PhoneField, value) != true)) {
                    this.s_PhoneField = value;
                    this.RaisePropertyChanged("s_Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Source {
            get {
                return this.s_SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SourceField, value) != true)) {
                    this.s_SourceField = value;
                    this.RaisePropertyChanged("s_Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TMChargerName {
            get {
                return this.s_TMChargerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TMChargerNameField, value) != true)) {
                    this.s_TMChargerNameField = value;
                    this.RaisePropertyChanged("s_TMChargerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Twitter {
            get {
                return this.s_TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TwitterField, value) != true)) {
                    this.s_TwitterField = value;
                    this.RaisePropertyChanged("s_Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Type {
            get {
                return this.s_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TypeField, value) != true)) {
                    this.s_TypeField = value;
                    this.RaisePropertyChanged("s_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Website {
            get {
                return this.s_WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_WebsiteField, value) != true)) {
                    this.s_WebsiteField = value;
                    this.RaisePropertyChanged("s_Website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ZipCodes {
            get {
                return this.s_ZipCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ZipCodesField, value) != true)) {
                    this.s_ZipCodesField = value;
                    this.RaisePropertyChanged("s_ZipCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgencyData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class AgencyData : TaskFlowTest.IPSPServices.AgencyBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToCaseCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseCount {
            get {
                return this.n_CaseCountField;
            }
            set {
                if ((this.n_CaseCountField.Equals(value) != true)) {
                    this.n_CaseCountField = value;
                    this.RaisePropertyChanged("n_CaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToCaseCount {
            get {
                return this.n_ToCaseCountField;
            }
            set {
                if ((this.n_ToCaseCountField.Equals(value) != true)) {
                    this.n_ToCaseCountField = value;
                    this.RaisePropertyChanged("n_ToCaseCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgencyBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData))]
    public partial class AgencyBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FirstCaseFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FirstCaseToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_LastCaseFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_LastCaseToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CopyrightCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DomainCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OtherCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PayCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TMCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToCopyrightCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToDomainCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToOtherCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToPatentCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ToTMCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IMAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TwitterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_WebSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FirstCaseFromDate {
            get {
                return this.dt_FirstCaseFromDateField;
            }
            set {
                if ((this.dt_FirstCaseFromDateField.Equals(value) != true)) {
                    this.dt_FirstCaseFromDateField = value;
                    this.RaisePropertyChanged("dt_FirstCaseFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FirstCaseToDate {
            get {
                return this.dt_FirstCaseToDateField;
            }
            set {
                if ((this.dt_FirstCaseToDateField.Equals(value) != true)) {
                    this.dt_FirstCaseToDateField = value;
                    this.RaisePropertyChanged("dt_FirstCaseToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_LastCaseFromDate {
            get {
                return this.dt_LastCaseFromDateField;
            }
            set {
                if ((this.dt_LastCaseFromDateField.Equals(value) != true)) {
                    this.dt_LastCaseFromDateField = value;
                    this.RaisePropertyChanged("dt_LastCaseFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_LastCaseToDate {
            get {
                return this.dt_LastCaseToDateField;
            }
            set {
                if ((this.dt_LastCaseToDateField.Equals(value) != true)) {
                    this.dt_LastCaseToDateField = value;
                    this.RaisePropertyChanged("dt_LastCaseToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AgencyID {
            get {
                return this.n_AgencyIDField;
            }
            set {
                if ((this.n_AgencyIDField.Equals(value) != true)) {
                    this.n_AgencyIDField = value;
                    this.RaisePropertyChanged("n_AgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CopyrightCaseCount {
            get {
                return this.n_CopyrightCaseCountField;
            }
            set {
                if ((this.n_CopyrightCaseCountField.Equals(value) != true)) {
                    this.n_CopyrightCaseCountField = value;
                    this.RaisePropertyChanged("n_CopyrightCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DomainCaseCount {
            get {
                return this.n_DomainCaseCountField;
            }
            set {
                if ((this.n_DomainCaseCountField.Equals(value) != true)) {
                    this.n_DomainCaseCountField = value;
                    this.RaisePropertyChanged("n_DomainCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OtherCaseCount {
            get {
                return this.n_OtherCaseCountField;
            }
            set {
                if ((this.n_OtherCaseCountField.Equals(value) != true)) {
                    this.n_OtherCaseCountField = value;
                    this.RaisePropertyChanged("n_OtherCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentCaseCount {
            get {
                return this.n_PatentCaseCountField;
            }
            set {
                if ((this.n_PatentCaseCountField.Equals(value) != true)) {
                    this.n_PatentCaseCountField = value;
                    this.RaisePropertyChanged("n_PatentCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PayCurrency {
            get {
                return this.n_PayCurrencyField;
            }
            set {
                if ((this.n_PayCurrencyField.Equals(value) != true)) {
                    this.n_PayCurrencyField = value;
                    this.RaisePropertyChanged("n_PayCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TMCaseCount {
            get {
                return this.n_TMCaseCountField;
            }
            set {
                if ((this.n_TMCaseCountField.Equals(value) != true)) {
                    this.n_TMCaseCountField = value;
                    this.RaisePropertyChanged("n_TMCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToCopyrightCaseCount {
            get {
                return this.n_ToCopyrightCaseCountField;
            }
            set {
                if ((this.n_ToCopyrightCaseCountField.Equals(value) != true)) {
                    this.n_ToCopyrightCaseCountField = value;
                    this.RaisePropertyChanged("n_ToCopyrightCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToDomainCaseCount {
            get {
                return this.n_ToDomainCaseCountField;
            }
            set {
                if ((this.n_ToDomainCaseCountField.Equals(value) != true)) {
                    this.n_ToDomainCaseCountField = value;
                    this.RaisePropertyChanged("n_ToDomainCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToOtherCaseCount {
            get {
                return this.n_ToOtherCaseCountField;
            }
            set {
                if ((this.n_ToOtherCaseCountField.Equals(value) != true)) {
                    this.n_ToOtherCaseCountField = value;
                    this.RaisePropertyChanged("n_ToOtherCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToPatentCaseCount {
            get {
                return this.n_ToPatentCaseCountField;
            }
            set {
                if ((this.n_ToPatentCaseCountField.Equals(value) != true)) {
                    this.n_ToPatentCaseCountField = value;
                    this.RaisePropertyChanged("n_ToPatentCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ToTMCaseCount {
            get {
                return this.n_ToTMCaseCountField;
            }
            set {
                if ((this.n_ToTMCaseCountField.Equals(value) != true)) {
                    this.n_ToTMCaseCountField = value;
                    this.RaisePropertyChanged("n_ToTMCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Addresses {
            get {
                return this.s_AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AddressesField, value) != true)) {
                    this.s_AddressesField = value;
                    this.RaisePropertyChanged("s_Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsEmail {
            get {
                return this.s_ContactsEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsEmailField, value) != true)) {
                    this.s_ContactsEmailField = value;
                    this.RaisePropertyChanged("s_ContactsEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFax {
            get {
                return this.s_ContactsFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFaxField, value) != true)) {
                    this.s_ContactsFaxField = value;
                    this.RaisePropertyChanged("s_ContactsFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsTel {
            get {
                return this.s_ContactsTelField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsTelField, value) != true)) {
                    this.s_ContactsTelField = value;
                    this.RaisePropertyChanged("s_ContactsTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CountryName {
            get {
                return this.s_CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CountryNameField, value) != true)) {
                    this.s_CountryNameField = value;
                    this.RaisePropertyChanged("s_CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Credit {
            get {
                return this.s_CreditField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreditField, value) != true)) {
                    this.s_CreditField = value;
                    this.RaisePropertyChanged("s_Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Email {
            get {
                return this.s_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EmailField, value) != true)) {
                    this.s_EmailField = value;
                    this.RaisePropertyChanged("s_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Facebook {
            get {
                return this.s_FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FacebookField, value) != true)) {
                    this.s_FacebookField = value;
                    this.RaisePropertyChanged("s_Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Fax {
            get {
                return this.s_FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FaxField, value) != true)) {
                    this.s_FaxField = value;
                    this.RaisePropertyChanged("s_Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAddress {
            get {
                return this.s_FirstAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAddressField, value) != true)) {
                    this.s_FirstAddressField = value;
                    this.RaisePropertyChanged("s_FirstAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IMAddress {
            get {
                return this.s_IMAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IMAddressField, value) != true)) {
                    this.s_IMAddressField = value;
                    this.RaisePropertyChanged("s_IMAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Mobile {
            get {
                return this.s_MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.s_MobileField, value) != true)) {
                    this.s_MobileField = value;
                    this.RaisePropertyChanged("s_Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NativeName {
            get {
                return this.s_NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NativeNameField, value) != true)) {
                    this.s_NativeNameField = value;
                    this.RaisePropertyChanged("s_NativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OtherName {
            get {
                return this.s_OtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OtherNameField, value) != true)) {
                    this.s_OtherNameField = value;
                    this.RaisePropertyChanged("s_OtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Phone {
            get {
                return this.s_PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PhoneField, value) != true)) {
                    this.s_PhoneField = value;
                    this.RaisePropertyChanged("s_Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Twitter {
            get {
                return this.s_TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TwitterField, value) != true)) {
                    this.s_TwitterField = value;
                    this.RaisePropertyChanged("s_Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_WebSite {
            get {
                return this.s_WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_WebSiteField, value) != true)) {
                    this.s_WebSiteField = value;
                    this.RaisePropertyChanged("s_WebSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntroducerData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class IntroducerData : TaskFlowTest.IPSPServices.IntroducerBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntroducerBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData))]
    public partial class IntroducerBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FirstCaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_LastCaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CopyrightCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DomainCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OtherCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TMCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IMAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TwitterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FirstCaseDate {
            get {
                return this.dt_FirstCaseDateField;
            }
            set {
                if ((this.dt_FirstCaseDateField.Equals(value) != true)) {
                    this.dt_FirstCaseDateField = value;
                    this.RaisePropertyChanged("dt_FirstCaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_LastCaseDate {
            get {
                return this.dt_LastCaseDateField;
            }
            set {
                if ((this.dt_LastCaseDateField.Equals(value) != true)) {
                    this.dt_LastCaseDateField = value;
                    this.RaisePropertyChanged("dt_LastCaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CopyrightCaseCount {
            get {
                return this.n_CopyrightCaseCountField;
            }
            set {
                if ((this.n_CopyrightCaseCountField.Equals(value) != true)) {
                    this.n_CopyrightCaseCountField = value;
                    this.RaisePropertyChanged("n_CopyrightCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DomainCaseCount {
            get {
                return this.n_DomainCaseCountField;
            }
            set {
                if ((this.n_DomainCaseCountField.Equals(value) != true)) {
                    this.n_DomainCaseCountField = value;
                    this.RaisePropertyChanged("n_DomainCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ID {
            get {
                return this.n_IDField;
            }
            set {
                if ((this.n_IDField.Equals(value) != true)) {
                    this.n_IDField = value;
                    this.RaisePropertyChanged("n_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OtherCaseCount {
            get {
                return this.n_OtherCaseCountField;
            }
            set {
                if ((this.n_OtherCaseCountField.Equals(value) != true)) {
                    this.n_OtherCaseCountField = value;
                    this.RaisePropertyChanged("n_OtherCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentCaseCount {
            get {
                return this.n_PatentCaseCountField;
            }
            set {
                if ((this.n_PatentCaseCountField.Equals(value) != true)) {
                    this.n_PatentCaseCountField = value;
                    this.RaisePropertyChanged("n_PatentCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_Percent {
            get {
                return this.n_PercentField;
            }
            set {
                if ((this.n_PercentField.Equals(value) != true)) {
                    this.n_PercentField = value;
                    this.RaisePropertyChanged("n_Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TMCaseCount {
            get {
                return this.n_TMCaseCountField;
            }
            set {
                if ((this.n_TMCaseCountField.Equals(value) != true)) {
                    this.n_TMCaseCountField = value;
                    this.RaisePropertyChanged("n_TMCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Addresses {
            get {
                return this.s_AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AddressesField, value) != true)) {
                    this.s_AddressesField = value;
                    this.RaisePropertyChanged("s_Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsAddress {
            get {
                return this.s_ContactsAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsAddressField, value) != true)) {
                    this.s_ContactsAddressField = value;
                    this.RaisePropertyChanged("s_ContactsAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Email {
            get {
                return this.s_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EmailField, value) != true)) {
                    this.s_EmailField = value;
                    this.RaisePropertyChanged("s_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Facebook {
            get {
                return this.s_FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FacebookField, value) != true)) {
                    this.s_FacebookField = value;
                    this.RaisePropertyChanged("s_Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Fax {
            get {
                return this.s_FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FaxField, value) != true)) {
                    this.s_FaxField = value;
                    this.RaisePropertyChanged("s_Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAddress {
            get {
                return this.s_FirstAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAddressField, value) != true)) {
                    this.s_FirstAddressField = value;
                    this.RaisePropertyChanged("s_FirstAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstName {
            get {
                return this.s_FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstNameField, value) != true)) {
                    this.s_FirstNameField = value;
                    this.RaisePropertyChanged("s_FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IMAddress {
            get {
                return this.s_IMAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IMAddressField, value) != true)) {
                    this.s_IMAddressField = value;
                    this.RaisePropertyChanged("s_IMAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Initial {
            get {
                return this.s_InitialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InitialField, value) != true)) {
                    this.s_InitialField = value;
                    this.RaisePropertyChanged("s_Initial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroCode {
            get {
                return this.s_IntroCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroCodeField, value) != true)) {
                    this.s_IntroCodeField = value;
                    this.RaisePropertyChanged("s_IntroCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_JobTitle {
            get {
                return this.s_JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_JobTitleField, value) != true)) {
                    this.s_JobTitleField = value;
                    this.RaisePropertyChanged("s_JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_LastName {
            get {
                return this.s_LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_LastNameField, value) != true)) {
                    this.s_LastNameField = value;
                    this.RaisePropertyChanged("s_LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Mobile {
            get {
                return this.s_MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.s_MobileField, value) != true)) {
                    this.s_MobileField = value;
                    this.RaisePropertyChanged("s_Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NativeName {
            get {
                return this.s_NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NativeNameField, value) != true)) {
                    this.s_NativeNameField = value;
                    this.RaisePropertyChanged("s_NativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Phone {
            get {
                return this.s_PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PhoneField, value) != true)) {
                    this.s_PhoneField = value;
                    this.RaisePropertyChanged("s_Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Prefix {
            get {
                return this.s_PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PrefixField, value) != true)) {
                    this.s_PrefixField = value;
                    this.RaisePropertyChanged("s_Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Twitter {
            get {
                return this.s_TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TwitterField, value) != true)) {
                    this.s_TwitterField = value;
                    this.RaisePropertyChanged("s_Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Website {
            get {
                return this.s_WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_WebsiteField, value) != true)) {
                    this.s_WebsiteField = value;
                    this.RaisePropertyChanged("s_Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicantData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ApplicantData : TaskFlowTest.IPSPServices.ApplicantBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseCount {
            get {
                return this.n_CaseCountField;
            }
            set {
                if ((this.n_CaseCountField.Equals(value) != true)) {
                    this.n_CaseCountField = value;
                    this.RaisePropertyChanged("n_CaseCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicantBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData))]
    public partial class ApplicantBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FirstCaseFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_LastCaseFromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CopyrightCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DomainCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OtherCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TMCaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContactsTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeMitigationNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeMitigationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IMAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FirstCaseFromDate {
            get {
                return this.dt_FirstCaseFromDateField;
            }
            set {
                if ((this.dt_FirstCaseFromDateField.Equals(value) != true)) {
                    this.dt_FirstCaseFromDateField = value;
                    this.RaisePropertyChanged("dt_FirstCaseFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_LastCaseFromDate {
            get {
                return this.dt_LastCaseFromDateField;
            }
            set {
                if ((this.dt_LastCaseFromDateField.Equals(value) != true)) {
                    this.dt_LastCaseFromDateField = value;
                    this.RaisePropertyChanged("dt_LastCaseFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AppID {
            get {
                return this.n_AppIDField;
            }
            set {
                if ((this.n_AppIDField.Equals(value) != true)) {
                    this.n_AppIDField = value;
                    this.RaisePropertyChanged("n_AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CopyrightCaseCount {
            get {
                return this.n_CopyrightCaseCountField;
            }
            set {
                if ((this.n_CopyrightCaseCountField.Equals(value) != true)) {
                    this.n_CopyrightCaseCountField = value;
                    this.RaisePropertyChanged("n_CopyrightCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DomainCaseCount {
            get {
                return this.n_DomainCaseCountField;
            }
            set {
                if ((this.n_DomainCaseCountField.Equals(value) != true)) {
                    this.n_DomainCaseCountField = value;
                    this.RaisePropertyChanged("n_DomainCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OtherCaseCount {
            get {
                return this.n_OtherCaseCountField;
            }
            set {
                if ((this.n_OtherCaseCountField.Equals(value) != true)) {
                    this.n_OtherCaseCountField = value;
                    this.RaisePropertyChanged("n_OtherCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentCaseCount {
            get {
                return this.n_PatentCaseCountField;
            }
            set {
                if ((this.n_PatentCaseCountField.Equals(value) != true)) {
                    this.n_PatentCaseCountField = value;
                    this.RaisePropertyChanged("n_PatentCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TMCaseCount {
            get {
                return this.n_TMCaseCountField;
            }
            set {
                if ((this.n_TMCaseCountField.Equals(value) != true)) {
                    this.n_TMCaseCountField = value;
                    this.RaisePropertyChanged("n_TMCaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Addresses {
            get {
                return this.s_AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AddressesField, value) != true)) {
                    this.s_AddressesField = value;
                    this.RaisePropertyChanged("s_Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppCode {
            get {
                return this.s_AppCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppCodeField, value) != true)) {
                    this.s_AppCodeField = value;
                    this.RaisePropertyChanged("s_AppCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppType {
            get {
                return this.s_AppTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppTypeField, value) != true)) {
                    this.s_AppTypeField = value;
                    this.RaisePropertyChanged("s_AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsFirstName {
            get {
                return this.s_ContactsFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsFirstNameField, value) != true)) {
                    this.s_ContactsFirstNameField = value;
                    this.RaisePropertyChanged("s_ContactsFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsLastName {
            get {
                return this.s_ContactsLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsLastNameField, value) != true)) {
                    this.s_ContactsLastNameField = value;
                    this.RaisePropertyChanged("s_ContactsLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ContactsTel {
            get {
                return this.s_ContactsTelField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContactsTelField, value) != true)) {
                    this.s_ContactsTelField = value;
                    this.RaisePropertyChanged("s_ContactsTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Email {
            get {
                return this.s_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EmailField, value) != true)) {
                    this.s_EmailField = value;
                    this.RaisePropertyChanged("s_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Fax {
            get {
                return this.s_FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FaxField, value) != true)) {
                    this.s_FaxField = value;
                    this.RaisePropertyChanged("s_Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeMitigationNum {
            get {
                return this.s_FeeMitigationNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeMitigationNumField, value) != true)) {
                    this.s_FeeMitigationNumField = value;
                    this.RaisePropertyChanged("s_FeeMitigationNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeMitigationYear {
            get {
                return this.s_FeeMitigationYearField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeMitigationYearField, value) != true)) {
                    this.s_FeeMitigationYearField = value;
                    this.RaisePropertyChanged("s_FeeMitigationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAddress {
            get {
                return this.s_FirstAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAddressField, value) != true)) {
                    this.s_FirstAddressField = value;
                    this.RaisePropertyChanged("s_FirstAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IDName {
            get {
                return this.s_IDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IDNameField, value) != true)) {
                    this.s_IDNameField = value;
                    this.RaisePropertyChanged("s_IDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IDNumber {
            get {
                return this.s_IDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IDNumberField, value) != true)) {
                    this.s_IDNumberField = value;
                    this.RaisePropertyChanged("s_IDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IMAddress {
            get {
                return this.s_IMAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IMAddressField, value) != true)) {
                    this.s_IMAddressField = value;
                    this.RaisePropertyChanged("s_IMAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Mobile {
            get {
                return this.s_MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.s_MobileField, value) != true)) {
                    this.s_MobileField = value;
                    this.RaisePropertyChanged("s_Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NativeName {
            get {
                return this.s_NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NativeNameField, value) != true)) {
                    this.s_NativeNameField = value;
                    this.RaisePropertyChanged("s_NativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OtherName {
            get {
                return this.s_OtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OtherNameField, value) != true)) {
                    this.s_OtherNameField = value;
                    this.RaisePropertyChanged("s_OtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Phone {
            get {
                return this.s_PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PhoneField, value) != true)) {
                    this.s_PhoneField = value;
                    this.RaisePropertyChanged("s_Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Website {
            get {
                return this.s_WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_WebsiteField, value) != true)) {
                    this.s_WebsiteField = value;
                    this.RaisePropertyChanged("s_Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutFileData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class OutFileData : TaskFlowTest.IPSPServices.OutFileBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckOutStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientGovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckOutStatus {
            get {
                return this.CheckOutStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckOutStatusField, value) != true)) {
                    this.CheckOutStatusField = value;
                    this.RaisePropertyChanged("CheckOutStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientGov {
            get {
                return this.ClientGovField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientGovField, value) != true)) {
                    this.ClientGovField = value;
                    this.RaisePropertyChanged("ClientGov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Attorney {
            get {
                return this.s_AttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AttorneyField, value) != true)) {
                    this.s_AttorneyField = value;
                    this.RaisePropertyChanged("s_Attorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutFileBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData))]
    public partial class OutFileBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_WriteDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CheckedOutByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_GovOfficeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AbstactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AcceptNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InventorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameForeignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PubNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SendMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PubDate {
            get {
                return this.dt_PubDateField;
            }
            set {
                if ((this.dt_PubDateField.Equals(value) != true)) {
                    this.dt_PubDateField = value;
                    this.RaisePropertyChanged("dt_PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiveDate {
            get {
                return this.dt_ReceiveDateField;
            }
            set {
                if ((this.dt_ReceiveDateField.Equals(value) != true)) {
                    this.dt_ReceiveDateField = value;
                    this.RaisePropertyChanged("dt_ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendDate {
            get {
                return this.dt_SendDateField;
            }
            set {
                if ((this.dt_SendDateField.Equals(value) != true)) {
                    this.dt_SendDateField = value;
                    this.RaisePropertyChanged("dt_SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDueDate {
            get {
                return this.dt_SubmitDueDateField;
            }
            set {
                if ((this.dt_SubmitDueDateField.Equals(value) != true)) {
                    this.dt_SubmitDueDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_WriteDate {
            get {
                return this.dt_WriteDateField;
            }
            set {
                if ((this.dt_WriteDateField.Equals(value) != true)) {
                    this.dt_WriteDateField = value;
                    this.RaisePropertyChanged("dt_WriteDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CheckedOutBy {
            get {
                return this.n_CheckedOutByField;
            }
            set {
                if ((this.n_CheckedOutByField.Equals(value) != true)) {
                    this.n_CheckedOutByField = value;
                    this.RaisePropertyChanged("n_CheckedOutBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.n_ClientIDField, value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CreatorID {
            get {
                return this.n_CreatorIDField;
            }
            set {
                if ((this.n_CreatorIDField.Equals(value) != true)) {
                    this.n_CreatorIDField = value;
                    this.RaisePropertyChanged("n_CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FileID {
            get {
                return this.n_FileIDField;
            }
            set {
                if ((this.n_FileIDField.Equals(value) != true)) {
                    this.n_FileIDField = value;
                    this.RaisePropertyChanged("n_FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_GovOfficeID {
            get {
                return this.n_GovOfficeIDField;
            }
            set {
                if ((this.n_GovOfficeIDField.Equals(value) != true)) {
                    this.n_GovOfficeIDField = value;
                    this.RaisePropertyChanged("n_GovOfficeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Abstact {
            get {
                return this.s_AbstactField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AbstactField, value) != true)) {
                    this.s_AbstactField = value;
                    this.RaisePropertyChanged("s_Abstact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AcceptNO {
            get {
                return this.s_AcceptNOField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AcceptNOField, value) != true)) {
                    this.s_AcceptNOField = value;
                    this.RaisePropertyChanged("s_AcceptNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AgencyName {
            get {
                return this.s_AgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AgencyNameField, value) != true)) {
                    this.s_AgencyNameField = value;
                    this.RaisePropertyChanged("s_AgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BusinessName {
            get {
                return this.s_BusinessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BusinessNameField, value) != true)) {
                    this.s_BusinessNameField = value;
                    this.RaisePropertyChanged("s_BusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseClientName {
            get {
                return this.s_CaseClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseClientNameField, value) != true)) {
                    this.s_CaseClientNameField = value;
                    this.RaisePropertyChanged("s_CaseClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientType {
            get {
                return this.s_ClientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientTypeField, value) != true)) {
                    this.s_ClientTypeField = value;
                    this.RaisePropertyChanged("s_ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileStatus {
            get {
                return this.s_FileStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileStatusField, value) != true)) {
                    this.s_FileStatusField = value;
                    this.RaisePropertyChanged("s_FileStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAttorney {
            get {
                return this.s_FirstAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAttorneyField, value) != true)) {
                    this.s_FirstAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Inventors {
            get {
                return this.s_InventorsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InventorsField, value) != true)) {
                    this.s_InventorsField = value;
                    this.RaisePropertyChanged("s_Inventors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NameForeign {
            get {
                return this.s_NameForeignField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameForeignField, value) != true)) {
                    this.s_NameForeignField = value;
                    this.RaisePropertyChanged("s_NameForeign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PubNo {
            get {
                return this.s_PubNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PubNoField, value) != true)) {
                    this.s_PubNoField = value;
                    this.RaisePropertyChanged("s_PubNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SecondAttorney {
            get {
                return this.s_SecondAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SecondAttorneyField, value) != true)) {
                    this.s_SecondAttorneyField = value;
                    this.RaisePropertyChanged("s_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SendMethod {
            get {
                return this.s_SendMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SendMethodField, value) != true)) {
                    this.s_SendMethodField = value;
                    this.RaisePropertyChanged("s_SendMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InFileData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class InFileData : TaskFlowTest.IPSPServices.InFileBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientGovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileConfirmStatusDispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileRelatedApplicantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileRelatedClinetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PreChangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientGov {
            get {
                return this.ClientGovField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientGovField, value) != true)) {
                    this.ClientGovField = value;
                    this.RaisePropertyChanged("ClientGov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Distribute {
            get {
                return this.DistributeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributeField, value) != true)) {
                    this.DistributeField = value;
                    this.RaisePropertyChanged("Distribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Attorney {
            get {
                return this.s_AttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AttorneyField, value) != true)) {
                    this.s_AttorneyField = value;
                    this.RaisePropertyChanged("s_Attorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileConfirmStatusDisp {
            get {
                return this.s_FileConfirmStatusDispField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileConfirmStatusDispField, value) != true)) {
                    this.s_FileConfirmStatusDispField = value;
                    this.RaisePropertyChanged("s_FileConfirmStatusDisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileRelatedApplicantName {
            get {
                return this.s_FileRelatedApplicantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileRelatedApplicantNameField, value) != true)) {
                    this.s_FileRelatedApplicantNameField = value;
                    this.RaisePropertyChanged("s_FileRelatedApplicantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileRelatedClinetName {
            get {
                return this.s_FileRelatedClinetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileRelatedClinetNameField, value) != true)) {
                    this.s_FileRelatedClinetNameField = value;
                    this.RaisePropertyChanged("s_FileRelatedClinetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PreChange {
            get {
                return this.s_PreChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PreChangeField, value) != true)) {
                    this.s_PreChangeField = value;
                    this.RaisePropertyChanged("s_PreChange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InFileBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData))]
    public partial class InFileBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_TransmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AgencyOfficeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CameFileApplicantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CameFileClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ConfirmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FileCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_GovOfficeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AbstactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DistributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileApplicantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileClinetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileConfirmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FilePathNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InfileFlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InventorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsPreChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameForeignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OFileStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PubNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SendMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_UrgentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PubDate {
            get {
                return this.dt_PubDateField;
            }
            set {
                if ((this.dt_PubDateField.Equals(value) != true)) {
                    this.dt_PubDateField = value;
                    this.RaisePropertyChanged("dt_PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiveDate {
            get {
                return this.dt_ReceiveDateField;
            }
            set {
                if ((this.dt_ReceiveDateField.Equals(value) != true)) {
                    this.dt_ReceiveDateField = value;
                    this.RaisePropertyChanged("dt_ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendDate {
            get {
                return this.dt_SendDateField;
            }
            set {
                if ((this.dt_SendDateField.Equals(value) != true)) {
                    this.dt_SendDateField = value;
                    this.RaisePropertyChanged("dt_SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_TransmitDate {
            get {
                return this.dt_TransmitDateField;
            }
            set {
                if ((this.dt_TransmitDateField.Equals(value) != true)) {
                    this.dt_TransmitDateField = value;
                    this.RaisePropertyChanged("dt_TransmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AgencyOfficeID {
            get {
                return this.n_AgencyOfficeIDField;
            }
            set {
                if ((this.n_AgencyOfficeIDField.Equals(value) != true)) {
                    this.n_AgencyOfficeIDField = value;
                    this.RaisePropertyChanged("n_AgencyOfficeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CameFileApplicantID {
            get {
                return this.n_CameFileApplicantIDField;
            }
            set {
                if ((this.n_CameFileApplicantIDField.Equals(value) != true)) {
                    this.n_CameFileApplicantIDField = value;
                    this.RaisePropertyChanged("n_CameFileApplicantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CameFileClientID {
            get {
                return this.n_CameFileClientIDField;
            }
            set {
                if ((this.n_CameFileClientIDField.Equals(value) != true)) {
                    this.n_CameFileClientIDField = value;
                    this.RaisePropertyChanged("n_CameFileClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((this.n_ClientIDField.Equals(value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ConfirmID {
            get {
                return this.n_ConfirmIDField;
            }
            set {
                if ((this.n_ConfirmIDField.Equals(value) != true)) {
                    this.n_ConfirmIDField = value;
                    this.RaisePropertyChanged("n_ConfirmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CreatorID {
            get {
                return this.n_CreatorIDField;
            }
            set {
                if ((this.n_CreatorIDField.Equals(value) != true)) {
                    this.n_CreatorIDField = value;
                    this.RaisePropertyChanged("n_CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FileCodeID {
            get {
                return this.n_FileCodeIDField;
            }
            set {
                if ((this.n_FileCodeIDField.Equals(value) != true)) {
                    this.n_FileCodeIDField = value;
                    this.RaisePropertyChanged("n_FileCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FileID {
            get {
                return this.n_FileIDField;
            }
            set {
                if ((this.n_FileIDField.Equals(value) != true)) {
                    this.n_FileIDField = value;
                    this.RaisePropertyChanged("n_FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_GovOfficeID {
            get {
                return this.n_GovOfficeIDField;
            }
            set {
                if ((this.n_GovOfficeIDField.Equals(value) != true)) {
                    this.n_GovOfficeIDField = value;
                    this.RaisePropertyChanged("n_GovOfficeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Abstact {
            get {
                return this.s_AbstactField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AbstactField, value) != true)) {
                    this.s_AbstactField = value;
                    this.RaisePropertyChanged("s_Abstact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseClientName {
            get {
                return this.s_CaseClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseClientNameField, value) != true)) {
                    this.s_CaseClientNameField = value;
                    this.RaisePropertyChanged("s_CaseClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseStatus {
            get {
                return this.s_CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseStatusField, value) != true)) {
                    this.s_CaseStatusField = value;
                    this.RaisePropertyChanged("s_CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCode {
            get {
                return this.s_ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCodeField, value) != true)) {
                    this.s_ClientCodeField = value;
                    this.RaisePropertyChanged("s_ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientType {
            get {
                return this.s_ClientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientTypeField, value) != true)) {
                    this.s_ClientTypeField = value;
                    this.RaisePropertyChanged("s_ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Complete {
            get {
                return this.s_CompleteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CompleteField, value) != true)) {
                    this.s_CompleteField = value;
                    this.RaisePropertyChanged("s_Complete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Distribute {
            get {
                return this.s_DistributeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DistributeField, value) != true)) {
                    this.s_DistributeField = value;
                    this.RaisePropertyChanged("s_Distribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileApplicantName {
            get {
                return this.s_FileApplicantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileApplicantNameField, value) != true)) {
                    this.s_FileApplicantNameField = value;
                    this.RaisePropertyChanged("s_FileApplicantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileClinetName {
            get {
                return this.s_FileClinetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileClinetNameField, value) != true)) {
                    this.s_FileClinetNameField = value;
                    this.RaisePropertyChanged("s_FileClinetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileConfirmStatus {
            get {
                return this.s_FileConfirmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileConfirmStatusField, value) != true)) {
                    this.s_FileConfirmStatusField = value;
                    this.RaisePropertyChanged("s_FileConfirmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FilePathName {
            get {
                return this.s_FilePathNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FilePathNameField, value) != true)) {
                    this.s_FilePathNameField = value;
                    this.RaisePropertyChanged("s_FilePathName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAttorney {
            get {
                return this.s_FirstAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAttorneyField, value) != true)) {
                    this.s_FirstAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_InfileFlowNum {
            get {
                return this.s_InfileFlowNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InfileFlowNumField, value) != true)) {
                    this.s_InfileFlowNumField = value;
                    this.RaisePropertyChanged("s_InfileFlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Inventors {
            get {
                return this.s_InventorsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InventorsField, value) != true)) {
                    this.s_InventorsField = value;
                    this.RaisePropertyChanged("s_Inventors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsPreChange {
            get {
                return this.s_IsPreChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsPreChangeField, value) != true)) {
                    this.s_IsPreChangeField = value;
                    this.RaisePropertyChanged("s_IsPreChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NameForeign {
            get {
                return this.s_NameForeignField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameForeignField, value) != true)) {
                    this.s_NameForeignField = value;
                    this.RaisePropertyChanged("s_NameForeign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OFileStatus {
            get {
                return this.s_OFileStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OFileStatusField, value) != true)) {
                    this.s_OFileStatusField = value;
                    this.RaisePropertyChanged("s_OFileStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Officer {
            get {
                return this.s_OfficerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficerField, value) != true)) {
                    this.s_OfficerField = value;
                    this.RaisePropertyChanged("s_Officer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialNO {
            get {
                return this.s_OfficialNOField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialNOField, value) != true)) {
                    this.s_OfficialNOField = value;
                    this.RaisePropertyChanged("s_OfficialNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PubNo {
            get {
                return this.s_PubNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PubNoField, value) != true)) {
                    this.s_PubNoField = value;
                    this.RaisePropertyChanged("s_PubNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SecondAttorney {
            get {
                return this.s_SecondAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SecondAttorneyField, value) != true)) {
                    this.s_SecondAttorneyField = value;
                    this.RaisePropertyChanged("s_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SendMethod {
            get {
                return this.s_SendMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SendMethodField, value) != true)) {
                    this.s_SendMethodField = value;
                    this.RaisePropertyChanged("s_SendMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Urgent {
            get {
                return this.s_UrgentField;
            }
            set {
                if ((object.ReferenceEquals(this.s_UrgentField, value) != true)) {
                    this.s_UrgentField = value;
                    this.RaisePropertyChanged("s_Urgent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherFileData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class OtherFileData : TaskFlowTest.IPSPServices.OtherFileBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientGovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientGov {
            get {
                return this.ClientGovField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientGovField, value) != true)) {
                    this.ClientGovField = value;
                    this.RaisePropertyChanged("ClientGov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Attorney {
            get {
                return this.s_AttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AttorneyField, value) != true)) {
                    this.s_AttorneyField = value;
                    this.RaisePropertyChanged("s_Attorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherFileBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData))]
    public partial class OtherFileBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AbstactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InventorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameForeignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PubNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SendMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PubDate {
            get {
                return this.dt_PubDateField;
            }
            set {
                if ((this.dt_PubDateField.Equals(value) != true)) {
                    this.dt_PubDateField = value;
                    this.RaisePropertyChanged("dt_PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiveDate {
            get {
                return this.dt_ReceiveDateField;
            }
            set {
                if ((this.dt_ReceiveDateField.Equals(value) != true)) {
                    this.dt_ReceiveDateField = value;
                    this.RaisePropertyChanged("dt_ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendDate {
            get {
                return this.dt_SendDateField;
            }
            set {
                if ((this.dt_SendDateField.Equals(value) != true)) {
                    this.dt_SendDateField = value;
                    this.RaisePropertyChanged("dt_SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CreatorID {
            get {
                return this.n_CreatorIDField;
            }
            set {
                if ((this.n_CreatorIDField.Equals(value) != true)) {
                    this.n_CreatorIDField = value;
                    this.RaisePropertyChanged("n_CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FileID {
            get {
                return this.n_FileIDField;
            }
            set {
                if ((this.n_FileIDField.Equals(value) != true)) {
                    this.n_FileIDField = value;
                    this.RaisePropertyChanged("n_FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Abstact {
            get {
                return this.s_AbstactField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AbstactField, value) != true)) {
                    this.s_AbstactField = value;
                    this.RaisePropertyChanged("s_Abstact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAttorney {
            get {
                return this.s_FirstAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAttorneyField, value) != true)) {
                    this.s_FirstAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Inventors {
            get {
                return this.s_InventorsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InventorsField, value) != true)) {
                    this.s_InventorsField = value;
                    this.RaisePropertyChanged("s_Inventors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NameForeign {
            get {
                return this.s_NameForeignField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameForeignField, value) != true)) {
                    this.s_NameForeignField = value;
                    this.RaisePropertyChanged("s_NameForeign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PubNo {
            get {
                return this.s_PubNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PubNoField, value) != true)) {
                    this.s_PubNoField = value;
                    this.RaisePropertyChanged("s_PubNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SecondAttorney {
            get {
                return this.s_SecondAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SecondAttorneyField, value) != true)) {
                    this.s_SecondAttorneyField = value;
                    this.RaisePropertyChanged("s_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SendMethod {
            get {
                return this.s_SendMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SendMethodField, value) != true)) {
                    this.s_SendMethodField = value;
                    this.RaisePropertyChanged("s_SendMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class EmailData : TaskFlowTest.IPSPServices.EmailBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sEmailFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sEmailFile {
            get {
                return this.sEmailFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sEmailFileField, value) != true)) {
                    this.sEmailFileField = value;
                    this.RaisePropertyChanged("sEmailFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Attachment {
            get {
                return this.s_AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AttachmentField, value) != true)) {
                    this.s_AttachmentField = value;
                    this.RaisePropertyChanged("s_Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData))]
    public partial class EmailBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AttachCountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AbstactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EmailPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ImportantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiveTime {
            get {
                return this.dt_ReceiveTimeField;
            }
            set {
                if ((this.dt_ReceiveTimeField.Equals(value) != true)) {
                    this.dt_ReceiveTimeField = value;
                    this.RaisePropertyChanged("dt_ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendTime {
            get {
                return this.dt_SendTimeField;
            }
            set {
                if ((this.dt_SendTimeField.Equals(value) != true)) {
                    this.dt_SendTimeField = value;
                    this.RaisePropertyChanged("dt_SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AttachCounts {
            get {
                return this.n_AttachCountsField;
            }
            set {
                if ((this.n_AttachCountsField.Equals(value) != true)) {
                    this.n_AttachCountsField = value;
                    this.RaisePropertyChanged("n_AttachCounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_EmailID {
            get {
                return this.n_EmailIDField;
            }
            set {
                if ((this.n_EmailIDField.Equals(value) != true)) {
                    this.n_EmailIDField = value;
                    this.RaisePropertyChanged("n_EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Abstact {
            get {
                return this.s_AbstactField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AbstactField, value) != true)) {
                    this.s_AbstactField = value;
                    this.RaisePropertyChanged("s_Abstact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Bc {
            get {
                return this.s_BcField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BcField, value) != true)) {
                    this.s_BcField = value;
                    this.RaisePropertyChanged("s_Bc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Cc {
            get {
                return this.s_CcField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CcField, value) != true)) {
                    this.s_CcField = value;
                    this.RaisePropertyChanged("s_Cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_EmailPath {
            get {
                return this.s_EmailPathField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EmailPathField, value) != true)) {
                    this.s_EmailPathField = value;
                    this.RaisePropertyChanged("s_EmailPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_From {
            get {
                return this.s_FromField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FromField, value) != true)) {
                    this.s_FromField = value;
                    this.RaisePropertyChanged("s_From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IO {
            get {
                return this.s_IOField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IOField, value) != true)) {
                    this.s_IOField = value;
                    this.RaisePropertyChanged("s_IO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Important {
            get {
                return this.s_ImportantField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ImportantField, value) != true)) {
                    this.s_ImportantField = value;
                    this.RaisePropertyChanged("s_Important");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Subject {
            get {
                return this.s_SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SubjectField, value) != true)) {
                    this.s_SubjectField = value;
                    this.RaisePropertyChanged("s_Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_To {
            get {
                return this.s_ToField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ToField, value) != true)) {
                    this.s_ToField = value;
                    this.RaisePropertyChanged("s_To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class TaskData : TaskFlowTest.IPSPServices.TaskBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData))]
    public partial class TaskBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_FormerNodeGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_NodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_TaskChainGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ExecutePositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ExecutorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FinisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_MentorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_UrgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeNodeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ReadStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedInfo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedInfo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskChainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateTime {
            get {
                return this.dt_CreateTimeField;
            }
            set {
                if ((this.dt_CreateTimeField.Equals(value) != true)) {
                    this.dt_CreateTimeField = value;
                    this.RaisePropertyChanged("dt_CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditTime {
            get {
                return this.dt_EditTimeField;
            }
            set {
                if ((this.dt_EditTimeField.Equals(value) != true)) {
                    this.dt_EditTimeField = value;
                    this.RaisePropertyChanged("dt_EditTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EndDate {
            get {
                return this.dt_EndDateField;
            }
            set {
                if ((this.dt_EndDateField.Equals(value) != true)) {
                    this.dt_EndDateField = value;
                    this.RaisePropertyChanged("dt_EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_FinishTime {
            get {
                return this.dt_FinishTimeField;
            }
            set {
                if ((this.dt_FinishTimeField.Equals(value) != true)) {
                    this.dt_FinishTimeField = value;
                    this.RaisePropertyChanged("dt_FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_StartDate {
            get {
                return this.dt_StartDateField;
            }
            set {
                if ((this.dt_StartDateField.Equals(value) != true)) {
                    this.dt_StartDateField = value;
                    this.RaisePropertyChanged("dt_StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_FormerNodeGuid {
            get {
                return this.g_FormerNodeGuidField;
            }
            set {
                if ((this.g_FormerNodeGuidField.Equals(value) != true)) {
                    this.g_FormerNodeGuidField = value;
                    this.RaisePropertyChanged("g_FormerNodeGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_ID {
            get {
                return this.g_IDField;
            }
            set {
                if ((this.g_IDField.Equals(value) != true)) {
                    this.g_IDField = value;
                    this.RaisePropertyChanged("g_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_NodeID {
            get {
                return this.g_NodeIDField;
            }
            set {
                if ((this.g_NodeIDField.Equals(value) != true)) {
                    this.g_NodeIDField = value;
                    this.RaisePropertyChanged("g_NodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_TaskChainGuid {
            get {
                return this.g_TaskChainGuidField;
            }
            set {
                if ((this.g_TaskChainGuidField.Equals(value) != true)) {
                    this.g_TaskChainGuidField = value;
                    this.RaisePropertyChanged("g_TaskChainGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Creator {
            get {
                return this.n_CreatorField;
            }
            set {
                if ((this.n_CreatorField.Equals(value) != true)) {
                    this.n_CreatorField = value;
                    this.RaisePropertyChanged("n_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Editor {
            get {
                return this.n_EditorField;
            }
            set {
                if ((this.n_EditorField.Equals(value) != true)) {
                    this.n_EditorField = value;
                    this.RaisePropertyChanged("n_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ExecutePositionID {
            get {
                return this.n_ExecutePositionIDField;
            }
            set {
                if ((this.n_ExecutePositionIDField.Equals(value) != true)) {
                    this.n_ExecutePositionIDField = value;
                    this.RaisePropertyChanged("n_ExecutePositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ExecutorID {
            get {
                return this.n_ExecutorIDField;
            }
            set {
                if ((this.n_ExecutorIDField.Equals(value) != true)) {
                    this.n_ExecutorIDField = value;
                    this.RaisePropertyChanged("n_ExecutorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Finisher {
            get {
                return this.n_FinisherField;
            }
            set {
                if ((this.n_FinisherField.Equals(value) != true)) {
                    this.n_FinisherField = value;
                    this.RaisePropertyChanged("n_Finisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Level {
            get {
                return this.n_LevelField;
            }
            set {
                if ((this.n_LevelField.Equals(value) != true)) {
                    this.n_LevelField = value;
                    this.RaisePropertyChanged("n_Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_MentorID {
            get {
                return this.n_MentorIDField;
            }
            set {
                if ((this.n_MentorIDField.Equals(value) != true)) {
                    this.n_MentorIDField = value;
                    this.RaisePropertyChanged("n_MentorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Num {
            get {
                return this.n_NumField;
            }
            set {
                if ((this.n_NumField.Equals(value) != true)) {
                    this.n_NumField = value;
                    this.RaisePropertyChanged("n_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_UrgencyID {
            get {
                return this.n_UrgencyIDField;
            }
            set {
                if ((this.n_UrgencyIDField.Equals(value) != true)) {
                    this.n_UrgencyIDField = value;
                    this.RaisePropertyChanged("n_UrgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Checked {
            get {
                return this.s_CheckedField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CheckedField, value) != true)) {
                    this.s_CheckedField = value;
                    this.RaisePropertyChanged("s_Checked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeNodeCode {
            get {
                return this.s_CodeNodeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeNodeCodeField, value) != true)) {
                    this.s_CodeNodeCodeField = value;
                    this.RaisePropertyChanged("s_CodeNodeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Description {
            get {
                return this.s_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DescriptionField, value) != true)) {
                    this.s_DescriptionField = value;
                    this.RaisePropertyChanged("s_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Mode {
            get {
                return this.s_ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ModeField, value) != true)) {
                    this.s_ModeField = value;
                    this.RaisePropertyChanged("s_Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ReadState {
            get {
                return this.s_ReadStateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ReadStateField, value) != true)) {
                    this.s_ReadStateField = value;
                    this.RaisePropertyChanged("s_ReadState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedInfo1 {
            get {
                return this.s_RelatedInfo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedInfo1Field, value) != true)) {
                    this.s_RelatedInfo1Field = value;
                    this.RaisePropertyChanged("s_RelatedInfo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedInfo2 {
            get {
                return this.s_RelatedInfo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedInfo2Field, value) != true)) {
                    this.s_RelatedInfo2Field = value;
                    this.RaisePropertyChanged("s_RelatedInfo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_State {
            get {
                return this.s_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StateField, value) != true)) {
                    this.s_StateField = value;
                    this.RaisePropertyChanged("s_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TaskChainName {
            get {
                return this.s_TaskChainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskChainNameField, value) != true)) {
                    this.s_TaskChainNameField = value;
                    this.RaisePropertyChanged("s_TaskChainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Type {
            get {
                return this.s_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TypeField, value) != true)) {
                    this.s_TypeField = value;
                    this.RaisePropertyChanged("s_Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskChainData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class TaskChainData : TaskFlowTest.IPSPServices.TaskChainBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskChainBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData))]
    public partial class TaskChainBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string g_TaskChainGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedInfo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedInfo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateTime {
            get {
                return this.dt_CreateTimeField;
            }
            set {
                if ((this.dt_CreateTimeField.Equals(value) != true)) {
                    this.dt_CreateTimeField = value;
                    this.RaisePropertyChanged("dt_CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditTime {
            get {
                return this.dt_EditTimeField;
            }
            set {
                if ((this.dt_EditTimeField.Equals(value) != true)) {
                    this.dt_EditTimeField = value;
                    this.RaisePropertyChanged("dt_EditTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_ID {
            get {
                return this.g_IDField;
            }
            set {
                if ((this.g_IDField.Equals(value) != true)) {
                    this.g_IDField = value;
                    this.RaisePropertyChanged("g_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string g_TaskChainGuid {
            get {
                return this.g_TaskChainGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.g_TaskChainGuidField, value) != true)) {
                    this.g_TaskChainGuidField = value;
                    this.RaisePropertyChanged("g_TaskChainGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Creator {
            get {
                return this.n_CreatorField;
            }
            set {
                if ((this.n_CreatorField.Equals(value) != true)) {
                    this.n_CreatorField = value;
                    this.RaisePropertyChanged("n_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Editor {
            get {
                return this.n_EditorField;
            }
            set {
                if ((this.n_EditorField.Equals(value) != true)) {
                    this.n_EditorField = value;
                    this.RaisePropertyChanged("n_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Num {
            get {
                return this.n_NumField;
            }
            set {
                if ((this.n_NumField.Equals(value) != true)) {
                    this.n_NumField = value;
                    this.RaisePropertyChanged("n_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedInfo1 {
            get {
                return this.s_RelatedInfo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedInfo1Field, value) != true)) {
                    this.s_RelatedInfo1Field = value;
                    this.RaisePropertyChanged("s_RelatedInfo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedInfo2 {
            get {
                return this.s_RelatedInfo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedInfo2Field, value) != true)) {
                    this.s_RelatedInfo2Field = value;
                    this.RaisePropertyChanged("s_RelatedInfo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_State {
            get {
                return this.s_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StateField, value) != true)) {
                    this.s_StateField = value;
                    this.RaisePropertyChanged("s_State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemindData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class RemindData : TaskFlowTest.IPSPServices.RemindBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemindBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData))]
    public partial class RemindBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_RemindDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string g_CodeRemindIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RemindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FileCaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RemindParaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RemindTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskCaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskChainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TriggerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TriggerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_RemindDate {
            get {
                return this.dt_RemindDateField;
            }
            set {
                if ((this.dt_RemindDateField.Equals(value) != true)) {
                    this.dt_RemindDateField = value;
                    this.RaisePropertyChanged("dt_RemindDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string g_CodeRemindID {
            get {
                return this.g_CodeRemindIDField;
            }
            set {
                if ((object.ReferenceEquals(this.g_CodeRemindIDField, value) != true)) {
                    this.g_CodeRemindIDField = value;
                    this.RaisePropertyChanged("g_CodeRemindID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_ID {
            get {
                return this.g_IDField;
            }
            set {
                if ((this.g_IDField.Equals(value) != true)) {
                    this.g_IDField = value;
                    this.RaisePropertyChanged("g_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Num {
            get {
                return this.n_NumField;
            }
            set {
                if ((this.n_NumField.Equals(value) != true)) {
                    this.n_NumField = value;
                    this.RaisePropertyChanged("n_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RemindCount {
            get {
                return this.n_RemindCountField;
            }
            set {
                if ((this.n_RemindCountField.Equals(value) != true)) {
                    this.n_RemindCountField = value;
                    this.RaisePropertyChanged("n_RemindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FileCaseSerial {
            get {
                return this.s_FileCaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FileCaseSerialField, value) != true)) {
                    this.s_FileCaseSerialField = value;
                    this.RaisePropertyChanged("s_FileCaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RemindPara {
            get {
                return this.s_RemindParaField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RemindParaField, value) != true)) {
                    this.s_RemindParaField = value;
                    this.RaisePropertyChanged("s_RemindPara");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RemindType {
            get {
                return this.s_RemindTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RemindTypeField, value) != true)) {
                    this.s_RemindTypeField = value;
                    this.RaisePropertyChanged("s_RemindType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_State {
            get {
                return this.s_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StateField, value) != true)) {
                    this.s_StateField = value;
                    this.RaisePropertyChanged("s_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TaskCaseSerial {
            get {
                return this.s_TaskCaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskCaseSerialField, value) != true)) {
                    this.s_TaskCaseSerialField = value;
                    this.RaisePropertyChanged("s_TaskCaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TaskChainName {
            get {
                return this.s_TaskChainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskChainNameField, value) != true)) {
                    this.s_TaskChainNameField = value;
                    this.RaisePropertyChanged("s_TaskChainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TaskName {
            get {
                return this.s_TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskNameField, value) != true)) {
                    this.s_TaskNameField = value;
                    this.RaisePropertyChanged("s_TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TriggerID {
            get {
                return this.s_TriggerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TriggerIDField, value) != true)) {
                    this.s_TriggerIDField = value;
                    this.RaisePropertyChanged("s_TriggerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TriggerType {
            get {
                return this.s_TriggerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TriggerTypeField, value) != true)) {
                    this.s_TriggerTypeField = value;
                    this.RaisePropertyChanged("s_TriggerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Valid {
            get {
                return this.s_ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ValidField, value) != true)) {
                    this.s_ValidField = value;
                    this.RaisePropertyChanged("s_Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemindRecordData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class RemindRecordData : TaskFlowTest.IPSPServices.RemindRecordBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemindRecordBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData))]
    public partial class RemindRecordBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_StateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> g_RemindModeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RemindModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateTime {
            get {
                return this.dt_CreateTimeField;
            }
            set {
                if ((this.dt_CreateTimeField.Equals(value) != true)) {
                    this.dt_CreateTimeField = value;
                    this.RaisePropertyChanged("dt_CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_StateTime {
            get {
                return this.dt_StateTimeField;
            }
            set {
                if ((this.dt_StateTimeField.Equals(value) != true)) {
                    this.dt_StateTimeField = value;
                    this.RaisePropertyChanged("dt_StateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_ID {
            get {
                return this.g_IDField;
            }
            set {
                if ((this.g_IDField.Equals(value) != true)) {
                    this.g_IDField = value;
                    this.RaisePropertyChanged("g_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> g_RemindModeID {
            get {
                return this.g_RemindModeIDField;
            }
            set {
                if ((this.g_RemindModeIDField.Equals(value) != true)) {
                    this.g_RemindModeIDField = value;
                    this.RaisePropertyChanged("g_RemindModeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_EmployeeID {
            get {
                return this.n_EmployeeIDField;
            }
            set {
                if ((this.n_EmployeeIDField.Equals(value) != true)) {
                    this.n_EmployeeIDField = value;
                    this.RaisePropertyChanged("n_EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Num {
            get {
                return this.n_NumField;
            }
            set {
                if ((this.n_NumField.Equals(value) != true)) {
                    this.n_NumField = value;
                    this.RaisePropertyChanged("n_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Content {
            get {
                return this.s_ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ContentField, value) != true)) {
                    this.s_ContentField = value;
                    this.RaisePropertyChanged("s_Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RemindMode {
            get {
                return this.s_RemindModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RemindModeField, value) != true)) {
                    this.s_RemindModeField = value;
                    this.RaisePropertyChanged("s_RemindMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_State {
            get {
                return this.s_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StateField, value) != true)) {
                    this.s_StateField = value;
                    this.RaisePropertyChanged("s_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Title {
            get {
                return this.s_TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TitleField, value) != true)) {
                    this.s_TitleField = value;
                    this.RaisePropertyChanged("s_Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Valid {
            get {
                return this.s_ValidField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ValidField, value) != true)) {
                    this.s_ValidField = value;
                    this.RaisePropertyChanged("s_Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeadlineData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class DeadlineData : TaskFlowTest.IPSPServices.DeadlineBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeadlineBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData))]
    public partial class DeadlineBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_DeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string g_CodeDeadlineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string n_RelatedObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AllowEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedObjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ValueRuleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainFileName {
            get {
                return this.MainFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MainFileNameField, value) != true)) {
                    this.MainFileNameField = value;
                    this.RaisePropertyChanged("MainFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_Deadline {
            get {
                return this.dt_DeadlineField;
            }
            set {
                if ((this.dt_DeadlineField.Equals(value) != true)) {
                    this.dt_DeadlineField = value;
                    this.RaisePropertyChanged("dt_Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string g_CodeDeadlineID {
            get {
                return this.g_CodeDeadlineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.g_CodeDeadlineIDField, value) != true)) {
                    this.g_CodeDeadlineIDField = value;
                    this.RaisePropertyChanged("g_CodeDeadlineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ID {
            get {
                return this.n_IDField;
            }
            set {
                if ((this.n_IDField.Equals(value) != true)) {
                    this.n_IDField = value;
                    this.RaisePropertyChanged("n_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string n_RelatedObjectID {
            get {
                return this.n_RelatedObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.n_RelatedObjectIDField, value) != true)) {
                    this.n_RelatedObjectIDField = value;
                    this.RaisePropertyChanged("n_RelatedObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AllowEdit {
            get {
                return this.s_AllowEditField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AllowEditField, value) != true)) {
                    this.s_AllowEditField = value;
                    this.RaisePropertyChanged("s_AllowEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Classification {
            get {
                return this.s_ClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClassificationField, value) != true)) {
                    this.s_ClassificationField = value;
                    this.RaisePropertyChanged("s_Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Description {
            get {
                return this.s_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DescriptionField, value) != true)) {
                    this.s_DescriptionField = value;
                    this.RaisePropertyChanged("s_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Name {
            get {
                return this.s_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NameField, value) != true)) {
                    this.s_NameField = value;
                    this.RaisePropertyChanged("s_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedObjectType {
            get {
                return this.s_RelatedObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedObjectTypeField, value) != true)) {
                    this.s_RelatedObjectTypeField = value;
                    this.RaisePropertyChanged("s_RelatedObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Type {
            get {
                return this.s_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TypeField, value) != true)) {
                    this.s_TypeField = value;
                    this.RaisePropertyChanged("s_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ValueRule {
            get {
                return this.s_ValueRuleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ValueRuleField, value) != true)) {
                    this.s_ValueRuleField = value;
                    this.RaisePropertyChanged("s_ValueRule");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeeData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class FeeData : TaskFlowTest.IPSPServices.FeeBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeCheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeePaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeePaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeCheckStatus {
            get {
                return this.FeeCheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeCheckStatusField, value) != true)) {
                    this.FeeCheckStatusField = value;
                    this.RaisePropertyChanged("FeeCheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeOrder {
            get {
                return this.FeeOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeOrderField, value) != true)) {
                    this.FeeOrderField = value;
                    this.RaisePropertyChanged("FeeOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeePaymentStatus {
            get {
                return this.FeePaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FeePaymentStatusField, value) != true)) {
                    this.FeePaymentStatusField = value;
                    this.RaisePropertyChanged("FeePaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeReceivedStatus {
            get {
                return this.FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeReceivedStatusField, value) != true)) {
                    this.FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Attorney {
            get {
                return this.s_AttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AttorneyField, value) != true)) {
                    this.s_AttorneyField = value;
                    this.RaisePropertyChanged("s_Attorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeePaymentStatus {
            get {
                return this.s_FeePaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeePaymentStatusField, value) != true)) {
                    this.s_FeePaymentStatusField = value;
                    this.RaisePropertyChanged("s_FeePaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeReceivedStatus {
            get {
                return this.s_FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeReceivedStatusField, value) != true)) {
                    this.s_FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("s_FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeeBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData))]
    public partial class FeeBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargePayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargeShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OfficialCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialDiscMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialFeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ReceiptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargePayDate {
            get {
                return this.dt_ChargePayDateField;
            }
            set {
                if ((this.dt_ChargePayDateField.Equals(value) != true)) {
                    this.dt_ChargePayDateField = value;
                    this.RaisePropertyChanged("dt_ChargePayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargeShldPayDate {
            get {
                return this.dt_ChargeShldPayDateField;
            }
            set {
                if ((this.dt_ChargeShldPayDateField.Equals(value) != true)) {
                    this.dt_ChargeShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ChargeShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialPayDate {
            get {
                return this.dt_OfficialPayDateField;
            }
            set {
                if ((this.dt_OfficialPayDateField.Equals(value) != true)) {
                    this.dt_OfficialPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialShldPayDate {
            get {
                return this.dt_OfficialShldPayDateField;
            }
            set {
                if ((this.dt_OfficialShldPayDateField.Equals(value) != true)) {
                    this.dt_OfficialShldPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiptDate {
            get {
                return this.dt_ReceiptDateField;
            }
            set {
                if ((this.dt_ReceiptDateField.Equals(value) != true)) {
                    this.dt_ReceiptDateField = value;
                    this.RaisePropertyChanged("dt_ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FeeID {
            get {
                return this.n_FeeIDField;
            }
            set {
                if ((this.n_FeeIDField.Equals(value) != true)) {
                    this.n_FeeIDField = value;
                    this.RaisePropertyChanged("n_FeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OfficialCurrency {
            get {
                return this.n_OfficialCurrencyField;
            }
            set {
                if ((this.n_OfficialCurrencyField.Equals(value) != true)) {
                    this.n_OfficialCurrencyField = value;
                    this.RaisePropertyChanged("n_OfficialCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialFee {
            get {
                return this.n_OfficialFeeField;
            }
            set {
                if ((this.n_OfficialFeeField.Equals(value) != true)) {
                    this.n_OfficialFeeField = value;
                    this.RaisePropertyChanged("n_OfficialFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentTypeID {
            get {
                return this.n_PatentTypeIDField;
            }
            set {
                if ((this.n_PatentTypeIDField.Equals(value) != true)) {
                    this.n_PatentTypeIDField = value;
                    this.RaisePropertyChanged("n_PatentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillNum {
            get {
                return this.s_BillNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillNumField, value) != true)) {
                    this.s_BillNumField = value;
                    this.RaisePropertyChanged("s_BillNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CheckStatus {
            get {
                return this.s_CheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CheckStatusField, value) != true)) {
                    this.s_CheckStatusField = value;
                    this.RaisePropertyChanged("s_CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientContacts {
            get {
                return this.s_ClientContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientContactsField, value) != true)) {
                    this.s_ClientContactsField = value;
                    this.RaisePropertyChanged("s_ClientContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAttorney {
            get {
                return this.s_FirstAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAttorneyField, value) != true)) {
                    this.s_FirstAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_InvoiceNum {
            get {
                return this.s_InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InvoiceNumField, value) != true)) {
                    this.s_InvoiceNumField = value;
                    this.RaisePropertyChanged("s_InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialDiscMark {
            get {
                return this.s_OfficialDiscMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialDiscMarkField, value) != true)) {
                    this.s_OfficialDiscMarkField = value;
                    this.RaisePropertyChanged("s_OfficialDiscMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialFeeName {
            get {
                return this.s_OfficialFeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialFeeNameField, value) != true)) {
                    this.s_OfficialFeeNameField = value;
                    this.RaisePropertyChanged("s_OfficialFeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PayMode {
            get {
                return this.s_PayModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PayModeField, value) != true)) {
                    this.s_PayModeField = value;
                    this.RaisePropertyChanged("s_PayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ReceiptNo {
            get {
                return this.s_ReceiptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ReceiptNoField, value) != true)) {
                    this.s_ReceiptNoField = value;
                    this.RaisePropertyChanged("s_ReceiptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SecondAttorney {
            get {
                return this.s_SecondAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SecondAttorneyField, value) != true)) {
                    this.s_SecondAttorneyField = value;
                    this.RaisePropertyChanged("s_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargingFeeData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ChargingFeeData : TaskFlowTest.IPSPServices.ChargingFeeBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Billstatus {
            get {
                return this.BillstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BillstatusField, value) != true)) {
                    this.BillstatusField = value;
                    this.RaisePropertyChanged("Billstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeOrder {
            get {
                return this.FeeOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeOrderField, value) != true)) {
                    this.FeeOrderField = value;
                    this.RaisePropertyChanged("FeeOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeReceivedStatus {
            get {
                return this.FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeReceivedStatusField, value) != true)) {
                    this.FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Billstatus {
            get {
                return this.s_BillstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillstatusField, value) != true)) {
                    this.s_BillstatusField = value;
                    this.RaisePropertyChanged("s_Billstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeReceivedStatus {
            get {
                return this.s_FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeReceivedStatusField, value) != true)) {
                    this.s_FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("s_FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargingFeeBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData))]
    public partial class ChargingFeeBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargePayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargeShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargingCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SubmitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool n_BonusCalcedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeAFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeOFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeTFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargingCheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_PatentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AbroadBillNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BonusFeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ChargeFeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ChargingCheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ChargingNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DealersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargePayDate {
            get {
                return this.dt_ChargePayDateField;
            }
            set {
                if ((this.dt_ChargePayDateField.Equals(value) != true)) {
                    this.dt_ChargePayDateField = value;
                    this.RaisePropertyChanged("dt_ChargePayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargeShldPayDate {
            get {
                return this.dt_ChargeShldPayDateField;
            }
            set {
                if ((this.dt_ChargeShldPayDateField.Equals(value) != true)) {
                    this.dt_ChargeShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ChargeShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargingCheckDate {
            get {
                return this.dt_ChargingCheckDateField;
            }
            set {
                if ((this.dt_ChargingCheckDateField.Equals(value) != true)) {
                    this.dt_ChargingCheckDateField = value;
                    this.RaisePropertyChanged("dt_ChargingCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SubmitDate {
            get {
                return this.dt_SubmitDateField;
            }
            set {
                if ((this.dt_SubmitDateField.Equals(value) != true)) {
                    this.dt_SubmitDateField = value;
                    this.RaisePropertyChanged("dt_SubmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool n_BonusCalced {
            get {
                return this.n_BonusCalcedField;
            }
            set {
                if ((this.n_BonusCalcedField.Equals(value) != true)) {
                    this.n_BonusCalcedField = value;
                    this.RaisePropertyChanged("n_BonusCalced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeAFee {
            get {
                return this.n_ChargeAFeeField;
            }
            set {
                if ((this.n_ChargeAFeeField.Equals(value) != true)) {
                    this.n_ChargeAFeeField = value;
                    this.RaisePropertyChanged("n_ChargeAFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeCurrency {
            get {
                return this.n_ChargeCurrencyField;
            }
            set {
                if ((this.n_ChargeCurrencyField.Equals(value) != true)) {
                    this.n_ChargeCurrencyField = value;
                    this.RaisePropertyChanged("n_ChargeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeOFee {
            get {
                return this.n_ChargeOFeeField;
            }
            set {
                if ((this.n_ChargeOFeeField.Equals(value) != true)) {
                    this.n_ChargeOFeeField = value;
                    this.RaisePropertyChanged("n_ChargeOFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeTFee {
            get {
                return this.n_ChargeTFeeField;
            }
            set {
                if ((this.n_ChargeTFeeField.Equals(value) != true)) {
                    this.n_ChargeTFeeField = value;
                    this.RaisePropertyChanged("n_ChargeTFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargingChecker {
            get {
                return this.n_ChargingCheckerField;
            }
            set {
                if ((this.n_ChargingCheckerField.Equals(value) != true)) {
                    this.n_ChargingCheckerField = value;
                    this.RaisePropertyChanged("n_ChargingChecker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FeeID {
            get {
                return this.n_FeeIDField;
            }
            set {
                if ((this.n_FeeIDField.Equals(value) != true)) {
                    this.n_FeeIDField = value;
                    this.RaisePropertyChanged("n_FeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_PatentTypeID {
            get {
                return this.n_PatentTypeIDField;
            }
            set {
                if ((this.n_PatentTypeIDField.Equals(value) != true)) {
                    this.n_PatentTypeIDField = value;
                    this.RaisePropertyChanged("n_PatentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AbroadBillNo {
            get {
                return this.s_AbroadBillNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AbroadBillNoField, value) != true)) {
                    this.s_AbroadBillNoField = value;
                    this.RaisePropertyChanged("s_AbroadBillNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BonusFeeType {
            get {
                return this.s_BonusFeeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BonusFeeTypeField, value) != true)) {
                    this.s_BonusFeeTypeField = value;
                    this.RaisePropertyChanged("s_BonusFeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ChargeFeeName {
            get {
                return this.s_ChargeFeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ChargeFeeNameField, value) != true)) {
                    this.s_ChargeFeeNameField = value;
                    this.RaisePropertyChanged("s_ChargeFeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ChargingCheckStatus {
            get {
                return this.s_ChargingCheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ChargingCheckStatusField, value) != true)) {
                    this.s_ChargingCheckStatusField = value;
                    this.RaisePropertyChanged("s_ChargingCheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ChargingNotes {
            get {
                return this.s_ChargingNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ChargingNotesField, value) != true)) {
                    this.s_ChargingNotesField = value;
                    this.RaisePropertyChanged("s_ChargingNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientContacts {
            get {
                return this.s_ClientContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientContactsField, value) != true)) {
                    this.s_ClientContactsField = value;
                    this.RaisePropertyChanged("s_ClientContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Dealers {
            get {
                return this.s_DealersField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DealersField, value) != true)) {
                    this.s_DealersField = value;
                    this.RaisePropertyChanged("s_Dealers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PayMode {
            get {
                return this.s_PayModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PayModeField, value) != true)) {
                    this.s_PayModeField = value;
                    this.RaisePropertyChanged("s_PayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnualFeeData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class AnnualFeeData : TaskFlowTest.IPSPServices.AnnualFeeBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sConfirmProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sHandlingSequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ConfirmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeePaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotifyStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sConfirmProcess {
            get {
                return this.sConfirmProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.sConfirmProcessField, value) != true)) {
                    this.sConfirmProcessField = value;
                    this.RaisePropertyChanged("sConfirmProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFlowDirection {
            get {
                return this.sFlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.sFlowDirectionField, value) != true)) {
                    this.sFlowDirectionField = value;
                    this.RaisePropertyChanged("sFlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sHandlingSequence {
            get {
                return this.sHandlingSequenceField;
            }
            set {
                if ((object.ReferenceEquals(this.sHandlingSequenceField, value) != true)) {
                    this.sHandlingSequenceField = value;
                    this.RaisePropertyChanged("sHandlingSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Billstatus {
            get {
                return this.s_BillstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillstatusField, value) != true)) {
                    this.s_BillstatusField = value;
                    this.RaisePropertyChanged("s_Billstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ConfirmStatus {
            get {
                return this.s_ConfirmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ConfirmStatusField, value) != true)) {
                    this.s_ConfirmStatusField = value;
                    this.RaisePropertyChanged("s_ConfirmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeePaymentStatus {
            get {
                return this.s_FeePaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeePaymentStatusField, value) != true)) {
                    this.s_FeePaymentStatusField = value;
                    this.RaisePropertyChanged("s_FeePaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeReceivedStatus {
            get {
                return this.s_FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeReceivedStatusField, value) != true)) {
                    this.s_FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("s_FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Introducer {
            get {
                return this.s_IntroducerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroducerField, value) != true)) {
                    this.s_IntroducerField = value;
                    this.RaisePropertyChanged("s_Introducer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NotifyStatus {
            get {
                return this.s_NotifyStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotifyStatusField, value) != true)) {
                    this.s_NotifyStatusField = value;
                    this.RaisePropertyChanged("s_NotifyStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnualFeeBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData))]
    public partial class AnnualFeeBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AlarmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargePayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargeShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_IssuedPubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AnnualFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AssignAnnualFeeHandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_AssignBillHandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeAFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeOFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeTFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FeeApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OfficialCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialLateFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ReportStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_YearNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApprovalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ElecPayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstCaseAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FirstInventorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlowDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IntroSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InventorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsOfficialDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialDiscStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialReceiptPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ReceiptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_SecondAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AlarmDate {
            get {
                return this.dt_AlarmDateField;
            }
            set {
                if ((this.dt_AlarmDateField.Equals(value) != true)) {
                    this.dt_AlarmDateField = value;
                    this.RaisePropertyChanged("dt_AlarmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargePayDate {
            get {
                return this.dt_ChargePayDateField;
            }
            set {
                if ((this.dt_ChargePayDateField.Equals(value) != true)) {
                    this.dt_ChargePayDateField = value;
                    this.RaisePropertyChanged("dt_ChargePayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargeShldPayDate {
            get {
                return this.dt_ChargeShldPayDateField;
            }
            set {
                if ((this.dt_ChargeShldPayDateField.Equals(value) != true)) {
                    this.dt_ChargeShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ChargeShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CheckDate {
            get {
                return this.dt_CheckDateField;
            }
            set {
                if ((this.dt_CheckDateField.Equals(value) != true)) {
                    this.dt_CheckDateField = value;
                    this.RaisePropertyChanged("dt_CheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_IssuedPubDate {
            get {
                return this.dt_IssuedPubDateField;
            }
            set {
                if ((this.dt_IssuedPubDateField.Equals(value) != true)) {
                    this.dt_IssuedPubDateField = value;
                    this.RaisePropertyChanged("dt_IssuedPubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialPayDate {
            get {
                return this.dt_OfficialPayDateField;
            }
            set {
                if ((this.dt_OfficialPayDateField.Equals(value) != true)) {
                    this.dt_OfficialPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialShldPayDate {
            get {
                return this.dt_OfficialShldPayDateField;
            }
            set {
                if ((this.dt_OfficialShldPayDateField.Equals(value) != true)) {
                    this.dt_OfficialShldPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiptDate {
            get {
                return this.dt_ReceiptDateField;
            }
            set {
                if ((this.dt_ReceiptDateField.Equals(value) != true)) {
                    this.dt_ReceiptDateField = value;
                    this.RaisePropertyChanged("dt_ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AnnualFeeID {
            get {
                return this.n_AnnualFeeIDField;
            }
            set {
                if ((this.n_AnnualFeeIDField.Equals(value) != true)) {
                    this.n_AnnualFeeIDField = value;
                    this.RaisePropertyChanged("n_AnnualFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AssignAnnualFeeHandler {
            get {
                return this.n_AssignAnnualFeeHandlerField;
            }
            set {
                if ((this.n_AssignAnnualFeeHandlerField.Equals(value) != true)) {
                    this.n_AssignAnnualFeeHandlerField = value;
                    this.RaisePropertyChanged("n_AssignAnnualFeeHandler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_AssignBillHandler {
            get {
                return this.n_AssignBillHandlerField;
            }
            set {
                if ((this.n_AssignBillHandlerField.Equals(value) != true)) {
                    this.n_AssignBillHandlerField = value;
                    this.RaisePropertyChanged("n_AssignBillHandler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeAFee {
            get {
                return this.n_ChargeAFeeField;
            }
            set {
                if ((this.n_ChargeAFeeField.Equals(value) != true)) {
                    this.n_ChargeAFeeField = value;
                    this.RaisePropertyChanged("n_ChargeAFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargeCurrency {
            get {
                return this.n_ChargeCurrencyField;
            }
            set {
                if ((this.n_ChargeCurrencyField.Equals(value) != true)) {
                    this.n_ChargeCurrencyField = value;
                    this.RaisePropertyChanged("n_ChargeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeOFee {
            get {
                return this.n_ChargeOFeeField;
            }
            set {
                if ((this.n_ChargeOFeeField.Equals(value) != true)) {
                    this.n_ChargeOFeeField = value;
                    this.RaisePropertyChanged("n_ChargeOFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeTFee {
            get {
                return this.n_ChargeTFeeField;
            }
            set {
                if ((this.n_ChargeTFeeField.Equals(value) != true)) {
                    this.n_ChargeTFeeField = value;
                    this.RaisePropertyChanged("n_ChargeTFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Checker {
            get {
                return this.n_CheckerField;
            }
            set {
                if ((this.n_CheckerField.Equals(value) != true)) {
                    this.n_CheckerField = value;
                    this.RaisePropertyChanged("n_Checker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FeeApprovalStatus {
            get {
                return this.n_FeeApprovalStatusField;
            }
            set {
                if ((this.n_FeeApprovalStatusField.Equals(value) != true)) {
                    this.n_FeeApprovalStatusField = value;
                    this.RaisePropertyChanged("n_FeeApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OfficialCurrency {
            get {
                return this.n_OfficialCurrencyField;
            }
            set {
                if ((this.n_OfficialCurrencyField.Equals(value) != true)) {
                    this.n_OfficialCurrencyField = value;
                    this.RaisePropertyChanged("n_OfficialCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialDiscount {
            get {
                return this.n_OfficialDiscountField;
            }
            set {
                if ((this.n_OfficialDiscountField.Equals(value) != true)) {
                    this.n_OfficialDiscountField = value;
                    this.RaisePropertyChanged("n_OfficialDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialFee {
            get {
                return this.n_OfficialFeeField;
            }
            set {
                if ((this.n_OfficialFeeField.Equals(value) != true)) {
                    this.n_OfficialFeeField = value;
                    this.RaisePropertyChanged("n_OfficialFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialLateFee {
            get {
                return this.n_OfficialLateFeeField;
            }
            set {
                if ((this.n_OfficialLateFeeField.Equals(value) != true)) {
                    this.n_OfficialLateFeeField = value;
                    this.RaisePropertyChanged("n_OfficialLateFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ReportStatus {
            get {
                return this.n_ReportStatusField;
            }
            set {
                if ((this.n_ReportStatusField.Equals(value) != true)) {
                    this.n_ReportStatusField = value;
                    this.RaisePropertyChanged("n_ReportStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_YearNo {
            get {
                return this.n_YearNoField;
            }
            set {
                if ((this.n_YearNoField.Equals(value) != true)) {
                    this.n_YearNoField = value;
                    this.RaisePropertyChanged("n_YearNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ApprovalNotes {
            get {
                return this.s_ApprovalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApprovalNotesField, value) != true)) {
                    this.s_ApprovalNotesField = value;
                    this.RaisePropertyChanged("s_ApprovalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillApprovalStatus {
            get {
                return this.s_BillApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillApprovalStatusField, value) != true)) {
                    this.s_BillApprovalStatusField = value;
                    this.RaisePropertyChanged("s_BillApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillNum {
            get {
                return this.s_BillNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillNumField, value) != true)) {
                    this.s_BillNumField = value;
                    this.RaisePropertyChanged("s_BillNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CheckStatus {
            get {
                return this.s_CheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CheckStatusField, value) != true)) {
                    this.s_CheckStatusField = value;
                    this.RaisePropertyChanged("s_CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCode {
            get {
                return this.s_ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCodeField, value) != true)) {
                    this.s_ClientCodeField = value;
                    this.RaisePropertyChanged("s_ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientContacts {
            get {
                return this.s_ClientContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientContactsField, value) != true)) {
                    this.s_ClientContactsField = value;
                    this.RaisePropertyChanged("s_ClientContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientSerial {
            get {
                return this.s_ClientSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientSerialField, value) != true)) {
                    this.s_ClientSerialField = value;
                    this.RaisePropertyChanged("s_ClientSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ElecPayer {
            get {
                return this.s_ElecPayerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ElecPayerField, value) != true)) {
                    this.s_ElecPayerField = value;
                    this.RaisePropertyChanged("s_ElecPayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstAttorney {
            get {
                return this.s_FirstAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstAttorneyField, value) != true)) {
                    this.s_FirstAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstCaseAttorney {
            get {
                return this.s_FirstCaseAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstCaseAttorneyField, value) != true)) {
                    this.s_FirstCaseAttorneyField = value;
                    this.RaisePropertyChanged("s_FirstCaseAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstDealer {
            get {
                return this.s_FirstDealerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstDealerField, value) != true)) {
                    this.s_FirstDealerField = value;
                    this.RaisePropertyChanged("s_FirstDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FirstInventor {
            get {
                return this.s_FirstInventorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FirstInventorField, value) != true)) {
                    this.s_FirstInventorField = value;
                    this.RaisePropertyChanged("s_FirstInventor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FlowDirection {
            get {
                return this.s_FlowDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlowDirectionField, value) != true)) {
                    this.s_FlowDirectionField = value;
                    this.RaisePropertyChanged("s_FlowDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IntroSerial {
            get {
                return this.s_IntroSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IntroSerialField, value) != true)) {
                    this.s_IntroSerialField = value;
                    this.RaisePropertyChanged("s_IntroSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Inventors {
            get {
                return this.s_InventorsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InventorsField, value) != true)) {
                    this.s_InventorsField = value;
                    this.RaisePropertyChanged("s_Inventors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsOfficialDisc {
            get {
                return this.s_IsOfficialDiscField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsOfficialDiscField, value) != true)) {
                    this.s_IsOfficialDiscField = value;
                    this.RaisePropertyChanged("s_IsOfficialDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialDiscStyle {
            get {
                return this.s_OfficialDiscStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialDiscStyleField, value) != true)) {
                    this.s_OfficialDiscStyleField = value;
                    this.RaisePropertyChanged("s_OfficialDiscStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialReceiptPath {
            get {
                return this.s_OfficialReceiptPathField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialReceiptPathField, value) != true)) {
                    this.s_OfficialReceiptPathField = value;
                    this.RaisePropertyChanged("s_OfficialReceiptPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PayMode {
            get {
                return this.s_PayModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PayModeField, value) != true)) {
                    this.s_PayModeField = value;
                    this.RaisePropertyChanged("s_PayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ReceiptNo {
            get {
                return this.s_ReceiptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ReceiptNoField, value) != true)) {
                    this.s_ReceiptNoField = value;
                    this.RaisePropertyChanged("s_ReceiptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_SecondAttorney {
            get {
                return this.s_SecondAttorneyField;
            }
            set {
                if ((object.ReferenceEquals(this.s_SecondAttorneyField, value) != true)) {
                    this.s_SecondAttorneyField = value;
                    this.RaisePropertyChanged("s_SecondAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainNameRenewalData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class DomainNameRenewalData : TaskFlowTest.IPSPServices.DomainNameRenewalBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ConfirmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeePaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotifyStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Billstatus {
            get {
                return this.s_BillstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillstatusField, value) != true)) {
                    this.s_BillstatusField = value;
                    this.RaisePropertyChanged("s_Billstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ConfirmStatus {
            get {
                return this.s_ConfirmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ConfirmStatusField, value) != true)) {
                    this.s_ConfirmStatusField = value;
                    this.RaisePropertyChanged("s_ConfirmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeePaymentStatus {
            get {
                return this.s_FeePaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeePaymentStatusField, value) != true)) {
                    this.s_FeePaymentStatusField = value;
                    this.RaisePropertyChanged("s_FeePaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeReceivedStatus {
            get {
                return this.s_FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeReceivedStatusField, value) != true)) {
                    this.s_FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("s_FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NotifyStatus {
            get {
                return this.s_NotifyStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotifyStatusField, value) != true)) {
                    this.s_NotifyStatusField = value;
                    this.RaisePropertyChanged("s_NotifyStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainNameRenewalBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData))]
    public partial class DomainNameRenewalBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargePayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargeShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeAFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeOFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeTFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DRenewalFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OfficialCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsOfficialDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialDiscStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialReceiptPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargePayDate {
            get {
                return this.dt_ChargePayDateField;
            }
            set {
                if ((this.dt_ChargePayDateField.Equals(value) != true)) {
                    this.dt_ChargePayDateField = value;
                    this.RaisePropertyChanged("dt_ChargePayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargeShldPayDate {
            get {
                return this.dt_ChargeShldPayDateField;
            }
            set {
                if ((this.dt_ChargeShldPayDateField.Equals(value) != true)) {
                    this.dt_ChargeShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ChargeShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialPayDate {
            get {
                return this.dt_OfficialPayDateField;
            }
            set {
                if ((this.dt_OfficialPayDateField.Equals(value) != true)) {
                    this.dt_OfficialPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialShldPayDate {
            get {
                return this.dt_OfficialShldPayDateField;
            }
            set {
                if ((this.dt_OfficialShldPayDateField.Equals(value) != true)) {
                    this.dt_OfficialShldPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeAFee {
            get {
                return this.n_ChargeAFeeField;
            }
            set {
                if ((this.n_ChargeAFeeField.Equals(value) != true)) {
                    this.n_ChargeAFeeField = value;
                    this.RaisePropertyChanged("n_ChargeAFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargeCurrency {
            get {
                return this.n_ChargeCurrencyField;
            }
            set {
                if ((this.n_ChargeCurrencyField.Equals(value) != true)) {
                    this.n_ChargeCurrencyField = value;
                    this.RaisePropertyChanged("n_ChargeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeOFee {
            get {
                return this.n_ChargeOFeeField;
            }
            set {
                if ((this.n_ChargeOFeeField.Equals(value) != true)) {
                    this.n_ChargeOFeeField = value;
                    this.RaisePropertyChanged("n_ChargeOFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeTFee {
            get {
                return this.n_ChargeTFeeField;
            }
            set {
                if ((this.n_ChargeTFeeField.Equals(value) != true)) {
                    this.n_ChargeTFeeField = value;
                    this.RaisePropertyChanged("n_ChargeTFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DRenewalFeeID {
            get {
                return this.n_DRenewalFeeIDField;
            }
            set {
                if ((this.n_DRenewalFeeIDField.Equals(value) != true)) {
                    this.n_DRenewalFeeIDField = value;
                    this.RaisePropertyChanged("n_DRenewalFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OfficialCurrency {
            get {
                return this.n_OfficialCurrencyField;
            }
            set {
                if ((this.n_OfficialCurrencyField.Equals(value) != true)) {
                    this.n_OfficialCurrencyField = value;
                    this.RaisePropertyChanged("n_OfficialCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialDiscount {
            get {
                return this.n_OfficialDiscountField;
            }
            set {
                if ((this.n_OfficialDiscountField.Equals(value) != true)) {
                    this.n_OfficialDiscountField = value;
                    this.RaisePropertyChanged("n_OfficialDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialFee {
            get {
                return this.n_OfficialFeeField;
            }
            set {
                if ((this.n_OfficialFeeField.Equals(value) != true)) {
                    this.n_OfficialFeeField = value;
                    this.RaisePropertyChanged("n_OfficialFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsOfficialDisc {
            get {
                return this.s_IsOfficialDiscField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsOfficialDiscField, value) != true)) {
                    this.s_IsOfficialDiscField = value;
                    this.RaisePropertyChanged("s_IsOfficialDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialDiscStyle {
            get {
                return this.s_OfficialDiscStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialDiscStyleField, value) != true)) {
                    this.s_OfficialDiscStyleField = value;
                    this.RaisePropertyChanged("s_OfficialDiscStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialReceiptPath {
            get {
                return this.s_OfficialReceiptPathField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialReceiptPathField, value) != true)) {
                    this.s_OfficialReceiptPathField = value;
                    this.RaisePropertyChanged("s_OfficialReceiptPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrademarkRenewalData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class TrademarkRenewalData : TaskFlowTest.IPSPServices.TrademarkRenewalBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ConfirmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeePaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FeeReceivedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotifyStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Billstatus {
            get {
                return this.s_BillstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillstatusField, value) != true)) {
                    this.s_BillstatusField = value;
                    this.RaisePropertyChanged("s_Billstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ConfirmStatus {
            get {
                return this.s_ConfirmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ConfirmStatusField, value) != true)) {
                    this.s_ConfirmStatusField = value;
                    this.RaisePropertyChanged("s_ConfirmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeePaymentStatus {
            get {
                return this.s_FeePaymentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeePaymentStatusField, value) != true)) {
                    this.s_FeePaymentStatusField = value;
                    this.RaisePropertyChanged("s_FeePaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FeeReceivedStatus {
            get {
                return this.s_FeeReceivedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FeeReceivedStatusField, value) != true)) {
                    this.s_FeeReceivedStatusField = value;
                    this.RaisePropertyChanged("s_FeeReceivedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_NotifyStatus {
            get {
                return this.s_NotifyStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotifyStatusField, value) != true)) {
                    this.s_NotifyStatusField = value;
                    this.RaisePropertyChanged("s_NotifyStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrademarkRenewalBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData))]
    public partial class TrademarkRenewalBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargePayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ChargeShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_OfficialShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeAFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeOFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ChargeTFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OfficialCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OfficialFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TRenewalFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsOfficialDiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialDiscStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OfficialReceiptPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargePayDate {
            get {
                return this.dt_ChargePayDateField;
            }
            set {
                if ((this.dt_ChargePayDateField.Equals(value) != true)) {
                    this.dt_ChargePayDateField = value;
                    this.RaisePropertyChanged("dt_ChargePayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ChargeShldPayDate {
            get {
                return this.dt_ChargeShldPayDateField;
            }
            set {
                if ((this.dt_ChargeShldPayDateField.Equals(value) != true)) {
                    this.dt_ChargeShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ChargeShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialPayDate {
            get {
                return this.dt_OfficialPayDateField;
            }
            set {
                if ((this.dt_OfficialPayDateField.Equals(value) != true)) {
                    this.dt_OfficialPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_OfficialShldPayDate {
            get {
                return this.dt_OfficialShldPayDateField;
            }
            set {
                if ((this.dt_OfficialShldPayDateField.Equals(value) != true)) {
                    this.dt_OfficialShldPayDateField = value;
                    this.RaisePropertyChanged("dt_OfficialShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeAFee {
            get {
                return this.n_ChargeAFeeField;
            }
            set {
                if ((this.n_ChargeAFeeField.Equals(value) != true)) {
                    this.n_ChargeAFeeField = value;
                    this.RaisePropertyChanged("n_ChargeAFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargeCurrency {
            get {
                return this.n_ChargeCurrencyField;
            }
            set {
                if ((this.n_ChargeCurrencyField.Equals(value) != true)) {
                    this.n_ChargeCurrencyField = value;
                    this.RaisePropertyChanged("n_ChargeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeOFee {
            get {
                return this.n_ChargeOFeeField;
            }
            set {
                if ((this.n_ChargeOFeeField.Equals(value) != true)) {
                    this.n_ChargeOFeeField = value;
                    this.RaisePropertyChanged("n_ChargeOFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ChargeTFee {
            get {
                return this.n_ChargeTFeeField;
            }
            set {
                if ((this.n_ChargeTFeeField.Equals(value) != true)) {
                    this.n_ChargeTFeeField = value;
                    this.RaisePropertyChanged("n_ChargeTFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OfficialCurrency {
            get {
                return this.n_OfficialCurrencyField;
            }
            set {
                if ((this.n_OfficialCurrencyField.Equals(value) != true)) {
                    this.n_OfficialCurrencyField = value;
                    this.RaisePropertyChanged("n_OfficialCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialDiscount {
            get {
                return this.n_OfficialDiscountField;
            }
            set {
                if ((this.n_OfficialDiscountField.Equals(value) != true)) {
                    this.n_OfficialDiscountField = value;
                    this.RaisePropertyChanged("n_OfficialDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OfficialFee {
            get {
                return this.n_OfficialFeeField;
            }
            set {
                if ((this.n_OfficialFeeField.Equals(value) != true)) {
                    this.n_OfficialFeeField = value;
                    this.RaisePropertyChanged("n_OfficialFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TRenewalFeeID {
            get {
                return this.n_TRenewalFeeIDField;
            }
            set {
                if ((this.n_TRenewalFeeIDField.Equals(value) != true)) {
                    this.n_TRenewalFeeIDField = value;
                    this.RaisePropertyChanged("n_TRenewalFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsOfficialDisc {
            get {
                return this.s_IsOfficialDiscField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsOfficialDiscField, value) != true)) {
                    this.s_IsOfficialDiscField = value;
                    this.RaisePropertyChanged("s_IsOfficialDisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialDiscStyle {
            get {
                return this.s_OfficialDiscStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialDiscStyleField, value) != true)) {
                    this.s_OfficialDiscStyleField = value;
                    this.RaisePropertyChanged("s_OfficialDiscStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OfficialReceiptPath {
            get {
                return this.s_OfficialReceiptPathField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OfficialReceiptPathField, value) != true)) {
                    this.s_OfficialReceiptPathField = value;
                    this.RaisePropertyChanged("s_OfficialReceiptPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABillHedgeData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ABillHedgeData : TaskFlowTest.IPSPServices.ABillHedgeBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABillHedgeBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData))]
    public partial class ABillHedgeBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_HedgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BalanceAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TheAgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TheAgencyNativeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_Hedge {
            get {
                return this.dt_HedgeField;
            }
            set {
                if ((this.dt_HedgeField.Equals(value) != true)) {
                    this.dt_HedgeField = value;
                    this.RaisePropertyChanged("dt_Hedge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_Amount {
            get {
                return this.n_AmountField;
            }
            set {
                if ((this.n_AmountField.Equals(value) != true)) {
                    this.n_AmountField = value;
                    this.RaisePropertyChanged("n_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CurrencyID {
            get {
                return this.n_CurrencyIDField;
            }
            set {
                if ((this.n_CurrencyIDField.Equals(value) != true)) {
                    this.n_CurrencyIDField = value;
                    this.RaisePropertyChanged("n_CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ID {
            get {
                return this.n_IDField;
            }
            set {
                if ((this.n_IDField.Equals(value) != true)) {
                    this.n_IDField = value;
                    this.RaisePropertyChanged("n_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BalanceAmount {
            get {
                return this.s_BalanceAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BalanceAmountField, value) != true)) {
                    this.s_BalanceAmountField = value;
                    this.RaisePropertyChanged("s_BalanceAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientNativeName {
            get {
                return this.s_ClientNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNativeNameField, value) != true)) {
                    this.s_ClientNativeNameField = value;
                    this.RaisePropertyChanged("s_ClientNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TheAgencyName {
            get {
                return this.s_TheAgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TheAgencyNameField, value) != true)) {
                    this.s_TheAgencyNameField = value;
                    this.RaisePropertyChanged("s_TheAgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TheAgencyNativeName {
            get {
                return this.s_TheAgencyNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TheAgencyNativeNameField, value) != true)) {
                    this.s_TheAgencyNativeNameField = value;
                    this.RaisePropertyChanged("s_TheAgencyNativeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABillPaymentData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ABillPaymentData : TaskFlowTest.IPSPServices.ABillPaymentBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABillPaymentBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData))]
    public partial class ABillPaymentBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_PayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ABillPaymentCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BillIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_OppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int s_PayBillNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PayMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TheAgencyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_PayDate {
            get {
                return this.dt_PayDateField;
            }
            set {
                if ((this.dt_PayDateField.Equals(value) != true)) {
                    this.dt_PayDateField = value;
                    this.RaisePropertyChanged("dt_PayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReReceiptDate {
            get {
                return this.dt_ReReceiptDateField;
            }
            set {
                if ((this.dt_ReReceiptDateField.Equals(value) != true)) {
                    this.dt_ReReceiptDateField = value;
                    this.RaisePropertyChanged("dt_ReReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldPayDate {
            get {
                return this.dt_ShldPayDateField;
            }
            set {
                if ((this.dt_ShldPayDateField.Equals(value) != true)) {
                    this.dt_ShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ABillPaymentCurrencyID {
            get {
                return this.n_ABillPaymentCurrencyIDField;
            }
            set {
                if ((this.n_ABillPaymentCurrencyIDField.Equals(value) != true)) {
                    this.n_ABillPaymentCurrencyIDField = value;
                    this.RaisePropertyChanged("n_ABillPaymentCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BillID {
            get {
                return this.n_BillIDField;
            }
            set {
                if ((this.n_BillIDField.Equals(value) != true)) {
                    this.n_BillIDField = value;
                    this.RaisePropertyChanged("n_BillID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CurrencyID {
            get {
                return this.n_CurrencyIDField;
            }
            set {
                if ((this.n_CurrencyIDField.Equals(value) != true)) {
                    this.n_CurrencyIDField = value;
                    this.RaisePropertyChanged("n_CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_OppID {
            get {
                return this.s_OppIDField;
            }
            set {
                if ((object.ReferenceEquals(this.s_OppIDField, value) != true)) {
                    this.s_OppIDField = value;
                    this.RaisePropertyChanged("s_OppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s_PayBillNo {
            get {
                return this.s_PayBillNoField;
            }
            set {
                if ((this.s_PayBillNoField.Equals(value) != true)) {
                    this.s_PayBillNoField = value;
                    this.RaisePropertyChanged("s_PayBillNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_PayMark {
            get {
                return this.s_PayMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PayMarkField, value) != true)) {
                    this.s_PayMarkField = value;
                    this.RaisePropertyChanged("s_PayMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TheAgencyName {
            get {
                return this.s_TheAgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TheAgencyNameField, value) != true)) {
                    this.s_TheAgencyNameField = value;
                    this.RaisePropertyChanged("s_TheAgencyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class BillData : TaskFlowTest.IPSPServices.BillBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal nAFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal nOFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal nOriAFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal nOtherFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sFileExtensionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal nAFeeSum {
            get {
                return this.nAFeeSumField;
            }
            set {
                if ((this.nAFeeSumField.Equals(value) != true)) {
                    this.nAFeeSumField = value;
                    this.RaisePropertyChanged("nAFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal nOFeeSum {
            get {
                return this.nOFeeSumField;
            }
            set {
                if ((this.nOFeeSumField.Equals(value) != true)) {
                    this.nOFeeSumField = value;
                    this.RaisePropertyChanged("nOFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal nOriAFeeSum {
            get {
                return this.nOriAFeeSumField;
            }
            set {
                if ((this.nOriAFeeSumField.Equals(value) != true)) {
                    this.nOriAFeeSumField = value;
                    this.RaisePropertyChanged("nOriAFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal nOtherFeeSum {
            get {
                return this.nOtherFeeSumField;
            }
            set {
                if ((this.nOtherFeeSumField.Equals(value) != true)) {
                    this.nOtherFeeSumField = value;
                    this.RaisePropertyChanged("nOtherFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sFileExtension {
            get {
                return this.sFileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileExtensionField, value) != true)) {
                    this.sFileExtensionField = value;
                    this.RaisePropertyChanged("sFileExtension");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData))]
    public partial class BillBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ConfirmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_RecentRemindDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_SendOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ShldPayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_AFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BillCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BillIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_FeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OriAFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_OtherFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RemindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_TFeeSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CheckDate {
            get {
                return this.dt_CheckDateField;
            }
            set {
                if ((this.dt_CheckDateField.Equals(value) != true)) {
                    this.dt_CheckDateField = value;
                    this.RaisePropertyChanged("dt_CheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ConfirmDate {
            get {
                return this.dt_ConfirmDateField;
            }
            set {
                if ((this.dt_ConfirmDateField.Equals(value) != true)) {
                    this.dt_ConfirmDateField = value;
                    this.RaisePropertyChanged("dt_ConfirmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_RecentRemindDate {
            get {
                return this.dt_RecentRemindDateField;
            }
            set {
                if ((this.dt_RecentRemindDateField.Equals(value) != true)) {
                    this.dt_RecentRemindDateField = value;
                    this.RaisePropertyChanged("dt_RecentRemindDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_SendOutDate {
            get {
                return this.dt_SendOutDateField;
            }
            set {
                if ((this.dt_SendOutDateField.Equals(value) != true)) {
                    this.dt_SendOutDateField = value;
                    this.RaisePropertyChanged("dt_SendOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ShldPayDate {
            get {
                return this.dt_ShldPayDateField;
            }
            set {
                if ((this.dt_ShldPayDateField.Equals(value) != true)) {
                    this.dt_ShldPayDateField = value;
                    this.RaisePropertyChanged("dt_ShldPayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_AFeeSum {
            get {
                return this.n_AFeeSumField;
            }
            set {
                if ((this.n_AFeeSumField.Equals(value) != true)) {
                    this.n_AFeeSumField = value;
                    this.RaisePropertyChanged("n_AFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BillCurrency {
            get {
                return this.n_BillCurrencyField;
            }
            set {
                if ((this.n_BillCurrencyField.Equals(value) != true)) {
                    this.n_BillCurrencyField = value;
                    this.RaisePropertyChanged("n_BillCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BillID {
            get {
                return this.n_BillIDField;
            }
            set {
                if ((this.n_BillIDField.Equals(value) != true)) {
                    this.n_BillIDField = value;
                    this.RaisePropertyChanged("n_BillID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Checker {
            get {
                return this.n_CheckerField;
            }
            set {
                if ((this.n_CheckerField.Equals(value) != true)) {
                    this.n_CheckerField = value;
                    this.RaisePropertyChanged("n_Checker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((this.n_ClientIDField.Equals(value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_Country {
            get {
                return this.n_CountryField;
            }
            set {
                if ((this.n_CountryField.Equals(value) != true)) {
                    this.n_CountryField = value;
                    this.RaisePropertyChanged("n_Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_FeeSum {
            get {
                return this.n_FeeSumField;
            }
            set {
                if ((this.n_FeeSumField.Equals(value) != true)) {
                    this.n_FeeSumField = value;
                    this.RaisePropertyChanged("n_FeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FlowNum {
            get {
                return this.n_FlowNumField;
            }
            set {
                if ((this.n_FlowNumField.Equals(value) != true)) {
                    this.n_FlowNumField = value;
                    this.RaisePropertyChanged("n_FlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OFeeSum {
            get {
                return this.n_OFeeSumField;
            }
            set {
                if ((this.n_OFeeSumField.Equals(value) != true)) {
                    this.n_OFeeSumField = value;
                    this.RaisePropertyChanged("n_OFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OriAFeeSum {
            get {
                return this.n_OriAFeeSumField;
            }
            set {
                if ((this.n_OriAFeeSumField.Equals(value) != true)) {
                    this.n_OriAFeeSumField = value;
                    this.RaisePropertyChanged("n_OriAFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_OtherFeeSum {
            get {
                return this.n_OtherFeeSumField;
            }
            set {
                if ((this.n_OtherFeeSumField.Equals(value) != true)) {
                    this.n_OtherFeeSumField = value;
                    this.RaisePropertyChanged("n_OtherFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RemindCount {
            get {
                return this.n_RemindCountField;
            }
            set {
                if ((this.n_RemindCountField.Equals(value) != true)) {
                    this.n_RemindCountField = value;
                    this.RaisePropertyChanged("n_RemindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_TFeeSum {
            get {
                return this.n_TFeeSumField;
            }
            set {
                if ((this.n_TFeeSumField.Equals(value) != true)) {
                    this.n_TFeeSumField = value;
                    this.RaisePropertyChanged("n_TFeeSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillNum {
            get {
                return this.s_BillNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillNumField, value) != true)) {
                    this.s_BillNumField = value;
                    this.RaisePropertyChanged("s_BillNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillToName {
            get {
                return this.s_BillToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillToNameField, value) != true)) {
                    this.s_BillToNameField = value;
                    this.RaisePropertyChanged("s_BillToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_BillType {
            get {
                return this.s_BillTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BillTypeField, value) != true)) {
                    this.s_BillTypeField = value;
                    this.RaisePropertyChanged("s_BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CheckStatus {
            get {
                return this.s_CheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CheckStatusField, value) != true)) {
                    this.s_CheckStatusField = value;
                    this.RaisePropertyChanged("s_CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_City {
            get {
                return this.s_CityField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CityField, value) != true)) {
                    this.s_CityField = value;
                    this.RaisePropertyChanged("s_City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Creator {
            get {
                return this.s_CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CreatorField, value) != true)) {
                    this.s_CreatorField = value;
                    this.RaisePropertyChanged("s_Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Editor {
            get {
                return this.s_EditorField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EditorField, value) != true)) {
                    this.s_EditorField = value;
                    this.RaisePropertyChanged("s_Editor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_FilePath {
            get {
                return this.s_FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FilePathField, value) != true)) {
                    this.s_FilePathField = value;
                    this.RaisePropertyChanged("s_FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Flag {
            get {
                return this.s_FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.s_FlagField, value) != true)) {
                    this.s_FlagField = value;
                    this.RaisePropertyChanged("s_Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Reason {
            get {
                return this.s_ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ReasonField, value) != true)) {
                    this.s_ReasonField = value;
                    this.RaisePropertyChanged("s_Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_State {
            get {
                return this.s_StateField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StateField, value) != true)) {
                    this.s_StateField = value;
                    this.RaisePropertyChanged("s_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Street {
            get {
                return this.s_StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StreetField, value) != true)) {
                    this.s_StreetField = value;
                    this.RaisePropertyChanged("s_Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ZipCode {
            get {
                return this.s_ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ZipCodeField, value) != true)) {
                    this.s_ZipCodeField = value;
                    this.RaisePropertyChanged("s_ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeSheetData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class TimeSheetData : TaskFlowTest.IPSPServices.TimeSheetBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_WorkItemEmployeeIDsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_WorkItemEmployeeIDs {
            get {
                return this.s_WorkItemEmployeeIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_WorkItemEmployeeIDsField, value) != true)) {
                    this.s_WorkItemEmployeeIDsField = value;
                    this.RaisePropertyChanged("s_WorkItemEmployeeIDs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeSheetBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData))]
    public partial class TimeSheetBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_TimesheetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargeCurrency {
            get {
                return this.n_ChargeCurrencyField;
            }
            set {
                if ((this.n_ChargeCurrencyField.Equals(value) != true)) {
                    this.n_ChargeCurrencyField = value;
                    this.RaisePropertyChanged("n_ChargeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_Rate {
            get {
                return this.n_RateField;
            }
            set {
                if ((this.n_RateField.Equals(value) != true)) {
                    this.n_RateField = value;
                    this.RaisePropertyChanged("n_Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_TimesheetID {
            get {
                return this.n_TimesheetIDField;
            }
            set {
                if ((this.n_TimesheetIDField.Equals(value) != true)) {
                    this.n_TimesheetIDField = value;
                    this.RaisePropertyChanged("n_TimesheetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CheckStatus {
            get {
                return this.s_CheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CheckStatusField, value) != true)) {
                    this.s_CheckStatusField = value;
                    this.RaisePropertyChanged("s_CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Invoiced {
            get {
                return this.s_InvoicedField;
            }
            set {
                if ((object.ReferenceEquals(this.s_InvoicedField, value) != true)) {
                    this.s_InvoicedField = value;
                    this.RaisePropertyChanged("s_Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Notes {
            get {
                return this.s_NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NotesField, value) != true)) {
                    this.s_NotesField = value;
                    this.RaisePropertyChanged("s_Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Paid {
            get {
                return this.s_PaidField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PaidField, value) != true)) {
                    this.s_PaidField = value;
                    this.RaisePropertyChanged("s_Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Task {
            get {
                return this.s_TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskField, value) != true)) {
                    this.s_TaskField = value;
                    this.RaisePropertyChanged("s_Task");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitorData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class MonitorData : TaskFlowTest.IPSPServices.MonitorBaseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseProcessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseProcess {
            get {
                return this.s_CaseProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseProcessField, value) != true)) {
                    this.s_CaseProcessField = value;
                    this.RaisePropertyChanged("s_CaseProcess");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitorBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData))]
    public partial class MonitorBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_BeginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_MonitorDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_MonitorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CodeProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ObjTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_BeginDate {
            get {
                return this.dt_BeginDateField;
            }
            set {
                if ((this.dt_BeginDateField.Equals(value) != true)) {
                    this.dt_BeginDateField = value;
                    this.RaisePropertyChanged("dt_BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_MonitorDate {
            get {
                return this.dt_MonitorDateField;
            }
            set {
                if ((this.dt_MonitorDateField.Equals(value) != true)) {
                    this.dt_MonitorDateField = value;
                    this.RaisePropertyChanged("dt_MonitorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_MonitorID {
            get {
                return this.n_MonitorIDField;
            }
            set {
                if ((this.n_MonitorIDField.Equals(value) != true)) {
                    this.n_MonitorIDField = value;
                    this.RaisePropertyChanged("n_MonitorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CodeProcessName {
            get {
                return this.s_CodeProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CodeProcessNameField, value) != true)) {
                    this.s_CodeProcessNameField = value;
                    this.RaisePropertyChanged("s_CodeProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IsActive {
            get {
                return this.s_IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IsActiveField, value) != true)) {
                    this.s_IsActiveField = value;
                    this.RaisePropertyChanged("s_IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ObjType {
            get {
                return this.s_ObjTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ObjTypeField, value) != true)) {
                    this.s_ObjTypeField = value;
                    this.RaisePropertyChanged("s_ObjType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ProcessName {
            get {
                return this.s_ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ProcessNameField, value) != true)) {
                    this.s_ProcessNameField = value;
                    this.RaisePropertyChanged("s_ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Status {
            get {
                return this.s_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_StatusField, value) != true)) {
                    this.s_StatusField = value;
                    this.RaisePropertyChanged("s_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Title {
            get {
                return this.s_TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TitleField, value) != true)) {
                    this.s_TitleField = value;
                    this.RaisePropertyChanged("s_Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkItemData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class WorkItemData : TaskFlowTest.IPSPServices.WorkItemBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkItemBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData))]
    public partial class WorkItemBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dt_ActualValueTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dt_ChargeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EstimateValueTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dt_OfeeChargeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_TaskChainGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid g_TaskGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ActualServiceValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_ActualValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ActualValueRecorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ChargeRecorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CodeWorkItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CodeWorkItemIDForUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_EstimateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_EstimateValueRecorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_HasChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_HasOfeeChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_OfeeChargeRecorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_RelatedFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ActualValueNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_EstimateValueNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_RelatedCaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_TaskChainNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dt_ActualValueTime {
            get {
                return this.dt_ActualValueTimeField;
            }
            set {
                if ((this.dt_ActualValueTimeField.Equals(value) != true)) {
                    this.dt_ActualValueTimeField = value;
                    this.RaisePropertyChanged("dt_ActualValueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dt_ChargeTime {
            get {
                return this.dt_ChargeTimeField;
            }
            set {
                if ((this.dt_ChargeTimeField.Equals(value) != true)) {
                    this.dt_ChargeTimeField = value;
                    this.RaisePropertyChanged("dt_ChargeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EstimateValueTime {
            get {
                return this.dt_EstimateValueTimeField;
            }
            set {
                if ((this.dt_EstimateValueTimeField.Equals(value) != true)) {
                    this.dt_EstimateValueTimeField = value;
                    this.RaisePropertyChanged("dt_EstimateValueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dt_OfeeChargeTime {
            get {
                return this.dt_OfeeChargeTimeField;
            }
            set {
                if ((this.dt_OfeeChargeTimeField.Equals(value) != true)) {
                    this.dt_OfeeChargeTimeField = value;
                    this.RaisePropertyChanged("dt_OfeeChargeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_ID {
            get {
                return this.g_IDField;
            }
            set {
                if ((this.g_IDField.Equals(value) != true)) {
                    this.g_IDField = value;
                    this.RaisePropertyChanged("g_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_TaskChainGuid {
            get {
                return this.g_TaskChainGuidField;
            }
            set {
                if ((this.g_TaskChainGuidField.Equals(value) != true)) {
                    this.g_TaskChainGuidField = value;
                    this.RaisePropertyChanged("g_TaskChainGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid g_TaskGuid {
            get {
                return this.g_TaskGuidField;
            }
            set {
                if ((this.g_TaskGuidField.Equals(value) != true)) {
                    this.g_TaskGuidField = value;
                    this.RaisePropertyChanged("g_TaskGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ActualServiceValue {
            get {
                return this.n_ActualServiceValueField;
            }
            set {
                if ((this.n_ActualServiceValueField.Equals(value) != true)) {
                    this.n_ActualServiceValueField = value;
                    this.RaisePropertyChanged("n_ActualServiceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_ActualValue {
            get {
                return this.n_ActualValueField;
            }
            set {
                if ((this.n_ActualValueField.Equals(value) != true)) {
                    this.n_ActualValueField = value;
                    this.RaisePropertyChanged("n_ActualValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ActualValueRecorder {
            get {
                return this.n_ActualValueRecorderField;
            }
            set {
                if ((this.n_ActualValueRecorderField.Equals(value) != true)) {
                    this.n_ActualValueRecorderField = value;
                    this.RaisePropertyChanged("n_ActualValueRecorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ChargeRecorder {
            get {
                return this.n_ChargeRecorderField;
            }
            set {
                if ((this.n_ChargeRecorderField.Equals(value) != true)) {
                    this.n_ChargeRecorderField = value;
                    this.RaisePropertyChanged("n_ChargeRecorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CodeWorkItemID {
            get {
                return this.n_CodeWorkItemIDField;
            }
            set {
                if ((this.n_CodeWorkItemIDField.Equals(value) != true)) {
                    this.n_CodeWorkItemIDField = value;
                    this.RaisePropertyChanged("n_CodeWorkItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CodeWorkItemIDForUnit {
            get {
                return this.n_CodeWorkItemIDForUnitField;
            }
            set {
                if ((this.n_CodeWorkItemIDForUnitField.Equals(value) != true)) {
                    this.n_CodeWorkItemIDForUnitField = value;
                    this.RaisePropertyChanged("n_CodeWorkItemIDForUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_EstimateValue {
            get {
                return this.n_EstimateValueField;
            }
            set {
                if ((this.n_EstimateValueField.Equals(value) != true)) {
                    this.n_EstimateValueField = value;
                    this.RaisePropertyChanged("n_EstimateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_EstimateValueRecorder {
            get {
                return this.n_EstimateValueRecorderField;
            }
            set {
                if ((this.n_EstimateValueRecorderField.Equals(value) != true)) {
                    this.n_EstimateValueRecorderField = value;
                    this.RaisePropertyChanged("n_EstimateValueRecorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_HasCharge {
            get {
                return this.n_HasChargeField;
            }
            set {
                if ((this.n_HasChargeField.Equals(value) != true)) {
                    this.n_HasChargeField = value;
                    this.RaisePropertyChanged("n_HasCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_HasOfeeCharge {
            get {
                return this.n_HasOfeeChargeField;
            }
            set {
                if ((this.n_HasOfeeChargeField.Equals(value) != true)) {
                    this.n_HasOfeeChargeField = value;
                    this.RaisePropertyChanged("n_HasOfeeCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_OfeeChargeRecorder {
            get {
                return this.n_OfeeChargeRecorderField;
            }
            set {
                if ((this.n_OfeeChargeRecorderField.Equals(value) != true)) {
                    this.n_OfeeChargeRecorderField = value;
                    this.RaisePropertyChanged("n_OfeeChargeRecorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_RelatedFileID {
            get {
                return this.n_RelatedFileIDField;
            }
            set {
                if ((this.n_RelatedFileIDField.Equals(value) != true)) {
                    this.n_RelatedFileIDField = value;
                    this.RaisePropertyChanged("n_RelatedFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ActualValueNote {
            get {
                return this.s_ActualValueNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ActualValueNoteField, value) != true)) {
                    this.s_ActualValueNoteField = value;
                    this.RaisePropertyChanged("s_ActualValueNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Description {
            get {
                return this.s_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_DescriptionField, value) != true)) {
                    this.s_DescriptionField = value;
                    this.RaisePropertyChanged("s_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_EstimateValueNote {
            get {
                return this.s_EstimateValueNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_EstimateValueNoteField, value) != true)) {
                    this.s_EstimateValueNoteField = value;
                    this.RaisePropertyChanged("s_EstimateValueNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Note {
            get {
                return this.s_NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NoteField, value) != true)) {
                    this.s_NoteField = value;
                    this.RaisePropertyChanged("s_Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_RelatedCaseSerial {
            get {
                return this.s_RelatedCaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_RelatedCaseSerialField, value) != true)) {
                    this.s_RelatedCaseSerialField = value;
                    this.RaisePropertyChanged("s_RelatedCaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_TaskChainName {
            get {
                return this.s_TaskChainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_TaskChainNameField, value) != true)) {
                    this.s_TaskChainNameField = value;
                    this.RaisePropertyChanged("s_TaskChainName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameMoneyData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class CameMoneyData : TaskFlowTest.IPSPServices.CameMoneyBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameMoneyBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData))]
    public partial class CameMoneyBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ArriveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_EditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CMoneyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CurrUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DeptIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal n_TotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CMoneyNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CameModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_PayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ReceiptField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ArriveDate {
            get {
                return this.dt_ArriveDateField;
            }
            set {
                if ((this.dt_ArriveDateField.Equals(value) != true)) {
                    this.dt_ArriveDateField = value;
                    this.RaisePropertyChanged("dt_ArriveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_CreateDate {
            get {
                return this.dt_CreateDateField;
            }
            set {
                if ((this.dt_CreateDateField.Equals(value) != true)) {
                    this.dt_CreateDateField = value;
                    this.RaisePropertyChanged("dt_CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_EditDate {
            get {
                return this.dt_EditDateField;
            }
            set {
                if ((this.dt_EditDateField.Equals(value) != true)) {
                    this.dt_EditDateField = value;
                    this.RaisePropertyChanged("dt_EditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_ReceiptDate {
            get {
                return this.dt_ReceiptDateField;
            }
            set {
                if ((this.dt_ReceiptDateField.Equals(value) != true)) {
                    this.dt_ReceiptDateField = value;
                    this.RaisePropertyChanged("dt_ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_Amount {
            get {
                return this.n_AmountField;
            }
            set {
                if ((this.n_AmountField.Equals(value) != true)) {
                    this.n_AmountField = value;
                    this.RaisePropertyChanged("n_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_Balance {
            get {
                return this.n_BalanceField;
            }
            set {
                if ((this.n_BalanceField.Equals(value) != true)) {
                    this.n_BalanceField = value;
                    this.RaisePropertyChanged("n_Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CMoneyID {
            get {
                return this.n_CMoneyIDField;
            }
            set {
                if ((this.n_CMoneyIDField.Equals(value) != true)) {
                    this.n_CMoneyIDField = value;
                    this.RaisePropertyChanged("n_CMoneyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CurrUnitID {
            get {
                return this.n_CurrUnitIDField;
            }
            set {
                if ((this.n_CurrUnitIDField.Equals(value) != true)) {
                    this.n_CurrUnitIDField = value;
                    this.RaisePropertyChanged("n_CurrUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DeptID {
            get {
                return this.n_DeptIDField;
            }
            set {
                if ((this.n_DeptIDField.Equals(value) != true)) {
                    this.n_DeptIDField = value;
                    this.RaisePropertyChanged("n_DeptID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal n_TotalMoney {
            get {
                return this.n_TotalMoneyField;
            }
            set {
                if ((this.n_TotalMoneyField.Equals(value) != true)) {
                    this.n_TotalMoneyField = value;
                    this.RaisePropertyChanged("n_TotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Bank {
            get {
                return this.s_BankField;
            }
            set {
                if ((object.ReferenceEquals(this.s_BankField, value) != true)) {
                    this.s_BankField = value;
                    this.RaisePropertyChanged("s_Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CMoneyNum {
            get {
                return this.s_CMoneyNumField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CMoneyNumField, value) != true)) {
                    this.s_CMoneyNumField = value;
                    this.RaisePropertyChanged("s_CMoneyNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CameMode {
            get {
                return this.s_CameModeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CameModeField, value) != true)) {
                    this.s_CameModeField = value;
                    this.RaisePropertyChanged("s_CameMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientCode {
            get {
                return this.s_ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientCodeField, value) != true)) {
                    this.s_ClientCodeField = value;
                    this.RaisePropertyChanged("s_ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Note {
            get {
                return this.s_NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.s_NoteField, value) != true)) {
                    this.s_NoteField = value;
                    this.RaisePropertyChanged("s_Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Payer {
            get {
                return this.s_PayerField;
            }
            set {
                if ((object.ReferenceEquals(this.s_PayerField, value) != true)) {
                    this.s_PayerField = value;
                    this.RaisePropertyChanged("s_Payer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Receipt {
            get {
                return this.s_ReceiptField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ReceiptField, value) != true)) {
                    this.s_ReceiptField = value;
                    this.RaisePropertyChanged("s_Receipt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.SearchData")]
    [System.SerializableAttribute()]
    public partial class ArchiveData : TaskFlowTest.IPSPServices.ArchiveBaseData {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveBaseData", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts.BaseTable")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData))]
    public partial class ArchiveBaseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dt_AppDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_BorrowTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int n_FirstAttorneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_AppNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ApplicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ArchivePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ArchiveStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_CaseSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string s_IPTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dt_AppDate {
            get {
                return this.dt_AppDateField;
            }
            set {
                if ((this.dt_AppDateField.Equals(value) != true)) {
                    this.dt_AppDateField = value;
                    this.RaisePropertyChanged("dt_AppDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_BorrowTimes {
            get {
                return this.n_BorrowTimesField;
            }
            set {
                if ((this.n_BorrowTimesField.Equals(value) != true)) {
                    this.n_BorrowTimesField = value;
                    this.RaisePropertyChanged("n_BorrowTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_CaseID {
            get {
                return this.n_CaseIDField;
            }
            set {
                if ((this.n_CaseIDField.Equals(value) != true)) {
                    this.n_CaseIDField = value;
                    this.RaisePropertyChanged("n_CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_ClientID {
            get {
                return this.n_ClientIDField;
            }
            set {
                if ((this.n_ClientIDField.Equals(value) != true)) {
                    this.n_ClientIDField = value;
                    this.RaisePropertyChanged("n_ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_DepartmentID {
            get {
                return this.n_DepartmentIDField;
            }
            set {
                if ((this.n_DepartmentIDField.Equals(value) != true)) {
                    this.n_DepartmentIDField = value;
                    this.RaisePropertyChanged("n_DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n_FirstAttorney {
            get {
                return this.n_FirstAttorneyField;
            }
            set {
                if ((this.n_FirstAttorneyField.Equals(value) != true)) {
                    this.n_FirstAttorneyField = value;
                    this.RaisePropertyChanged("n_FirstAttorney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_AppNo {
            get {
                return this.s_AppNoField;
            }
            set {
                if ((object.ReferenceEquals(this.s_AppNoField, value) != true)) {
                    this.s_AppNoField = value;
                    this.RaisePropertyChanged("s_AppNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_Applicants {
            get {
                return this.s_ApplicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ApplicantsField, value) != true)) {
                    this.s_ApplicantsField = value;
                    this.RaisePropertyChanged("s_Applicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ArchivePosition {
            get {
                return this.s_ArchivePositionField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ArchivePositionField, value) != true)) {
                    this.s_ArchivePositionField = value;
                    this.RaisePropertyChanged("s_ArchivePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ArchiveStatus {
            get {
                return this.s_ArchiveStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ArchiveStatusField, value) != true)) {
                    this.s_ArchiveStatusField = value;
                    this.RaisePropertyChanged("s_ArchiveStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseName {
            get {
                return this.s_CaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseNameField, value) != true)) {
                    this.s_CaseNameField = value;
                    this.RaisePropertyChanged("s_CaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_CaseSerial {
            get {
                return this.s_CaseSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.s_CaseSerialField, value) != true)) {
                    this.s_CaseSerialField = value;
                    this.RaisePropertyChanged("s_CaseSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_ClientName {
            get {
                return this.s_ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.s_ClientNameField, value) != true)) {
                    this.s_ClientNameField = value;
                    this.RaisePropertyChanged("s_ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string s_IPType {
            get {
                return this.s_IPTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.s_IPTypeField, value) != true)) {
                    this.s_IPTypeField = value;
                    this.RaisePropertyChanged("s_IPType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LifeCycleInfo", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class LifeCycleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sClientVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sClientVersion {
            get {
                return this.sClientVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.sClientVersionField, value) != true)) {
                    this.sClientVersionField = value;
                    this.RaisePropertyChanged("sClientVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPSPServices.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerDeleteTaskChain", ReplyAction="http://tempuri.org/IService/ByServerDeleteTaskChainResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerDeleteTaskChain(System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerDeleteTaskChain", ReplyAction="http://tempuri.org/IService/ByServerDeleteTaskChainResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerDeleteTaskChainAsync(System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerRollBackNode", ReplyAction="http://tempuri.org/IService/ByServerRollBackNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerRollBackNode(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerRollBackNode", ReplyAction="http://tempuri.org/IService/ByServerRollBackNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerRollBackNodeAsync(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerUpdateTaskExecutor", ReplyAction="http://tempuri.org/IService/ByServerUpdateTaskExecutorResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerUpdateTaskExecutor(System.Guid[] listTaskIDs, int nExecutorID, int nExecutePositionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerUpdateTaskExecutor", ReplyAction="http://tempuri.org/IService/ByServerUpdateTaskExecutorResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerUpdateTaskExecutorAsync(System.Guid[] listTaskIDs, int nExecutorID, int nExecutePositionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualUpdateDeadline", ReplyAction="http://tempuri.org/IService/ByServerManualUpdateDeadlineResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualUpdateDeadline(System.Guid gCodeDeadlineID, string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualUpdateDeadline", ReplyAction="http://tempuri.org/IService/ByServerManualUpdateDeadlineResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualUpdateDeadlineAsync(System.Guid gCodeDeadlineID, string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoUpdateDeadlineByCodeBaseDate", ReplyAction="http://tempuri.org/IService/ByServerAutoUpdateDeadlineByCodeBaseDateResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerAutoUpdateDeadlineByCodeBaseDate(int nCodeBaseDateID, string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoUpdateDeadlineByCodeBaseDate", ReplyAction="http://tempuri.org/IService/ByServerAutoUpdateDeadlineByCodeBaseDateResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoUpdateDeadlineByCodeBaseDateAsync(int nCodeBaseDateID, string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoUpdateRelatedInfo", ReplyAction="http://tempuri.org/IService/ByServerAutoUpdateRelatedInfoResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerAutoUpdateRelatedInfo(string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoUpdateRelatedInfo", ReplyAction="http://tempuri.org/IService/ByServerAutoUpdateRelatedInfoResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoUpdateRelatedInfoAsync(string sRelatedObjectType, int nRelatedObjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateClient", ReplyAction="http://tempuri.org/IService/InsertOrUpdateClientResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateClient(string sClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateClient", ReplyAction="http://tempuri.org/IService/InsertOrUpdateClientResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateClientAsync(string sClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateBaseCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdateBaseCaseResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateBaseCase(string sCaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateBaseCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdateBaseCaseResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateBaseCaseAsync(string sCaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdatePatentCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdatePatentCaseResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdatePatentCase(string sPatentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdatePatentCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdatePatentCaseResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdatePatentCaseAsync(string sPatentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTrademarkCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTrademarkCaseResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTrademarkCase(string sTrademarkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTrademarkCase", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTrademarkCaseResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTrademarkCaseAsync(string sTrademarkID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateFee", ReplyAction="http://tempuri.org/IService/InsertOrUpdateFeeResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateFee(string sFeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateFee", ReplyAction="http://tempuri.org/IService/InsertOrUpdateFeeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateFeeAsync(string sFeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateMainFiles", ReplyAction="http://tempuri.org/IService/InsertOrUpdateMainFilesResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateMainFiles(string sFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateMainFiles", ReplyAction="http://tempuri.org/IService/InsertOrUpdateMainFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateMainFilesAsync(string sFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateMonitor", ReplyAction="http://tempuri.org/IService/InsertOrUpdateMonitorResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateMonitor(string sMonitorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateMonitor", ReplyAction="http://tempuri.org/IService/InsertOrUpdateMonitorResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateMonitorAsync(string sMonitorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTask", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTaskResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTask(string sTaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTask", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTaskResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTaskAsync(string sTaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTimeSheet", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTimeSheetResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTimeSheet(string sTimesheetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateTimeSheet", ReplyAction="http://tempuri.org/IService/InsertOrUpdateTimeSheetResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTimeSheetAsync(string sTimesheetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateBill", ReplyAction="http://tempuri.org/IService/InsertOrUpdateBillResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateBill(string sBillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateBill", ReplyAction="http://tempuri.org/IService/InsertOrUpdateBillResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateBillAsync(string sBillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateEmployeeName", ReplyAction="http://tempuri.org/IService/InsertOrUpdateEmployeeNameResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateEmployeeName(string sEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateEmployeeName", ReplyAction="http://tempuri.org/IService/InsertOrUpdateEmployeeNameResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateEmployeeNameAsync(string sEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateEmail", ReplyAction="http://tempuri.org/IService/InsertOrUpdateEmailResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateEmail(string sEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateEmail", ReplyAction="http://tempuri.org/IService/InsertOrUpdateEmailResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateEmailAsync(string sEmailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateExpense", ReplyAction="http://tempuri.org/IService/InsertOrUpdateExpenseResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateExpense(string sExpenseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateExpense", ReplyAction="http://tempuri.org/IService/InsertOrUpdateExpenseResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateExpenseAsync(string sExpenseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateProcess", ReplyAction="http://tempuri.org/IService/InsertOrUpdateProcessResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateProcess(string sProcessID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateProcess", ReplyAction="http://tempuri.org/IService/InsertOrUpdateProcessResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateProcessAsync(string sProcessID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateIntroducer", ReplyAction="http://tempuri.org/IService/InsertOrUpdateIntroducerResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateIntroducer(string sIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateIntroducer", ReplyAction="http://tempuri.org/IService/InsertOrUpdateIntroducerResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateIntroducerAsync(string sIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApplicant", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApplicantResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateApplicant(string sAppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateApplicant", ReplyAction="http://tempuri.org/IService/InsertOrUpdateApplicantResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateApplicantAsync(string sAppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateAgency", ReplyAction="http://tempuri.org/IService/InsertOrUpdateAgencyResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateAgency(string nAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrUpdateAgency", ReplyAction="http://tempuri.org/IService/InsertOrUpdateAgencyResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateAgencyAsync(string nAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientPatentCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateClientPatentCaseCount(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientPatentCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientPatentCaseCountAsync(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientTMCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateClientTMCaseCount(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientTMCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientTMCaseCountAsync(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientCopyRightCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateClientCopyRightCaseCount(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientCopyRightCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientCopyRightCaseCountAsync(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientDomainCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateClientDomainCaseCount(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientDomainCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientDomainCaseCountAsync(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientOtherCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateClientOtherCaseCount(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClientOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateClientOtherCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientOtherCaseCountAsync(string nOldClientID, string nNewClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerPatentCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerPatentCaseCount(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerPatentCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerPatentCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerTMCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerTMCaseCount(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerTMCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerTMCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerCopyRightCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerCopyRightCaseCount(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerCopyRightCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerCopyRightCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerDomainCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerDomainCaseCount(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerDomainCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerDomainCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerOtherCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerOtherCaseCount(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateIntroducerOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateIntroducerOtherCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerOtherCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToPatentCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToPatentCaseCount(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToPatentCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToPatentCaseCountAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToTMCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToTMCaseCount(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToTMCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToTMCaseCountAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToCopyRightCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToCopyRightCaseCount(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToCopyRightCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToCopyRightCaseCountAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToDomainCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToDomainCaseCount(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToDomainCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToDomainCaseCountAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToOtherCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToOtherCaseCount(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencyToOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateAgencyToOtherCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToOtherCaseCountAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantPatentCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantPatentCaseCount(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantPatentCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantPatentCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantPatentCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantTMCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantTMCaseCount(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantTMCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantTMCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantTMCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantCopyRightCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantCopyRightCaseCount(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantCopyRightCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantCopyRightCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantCopyRightCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantDomainCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantDomainCaseCount(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantDomainCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantDomainCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantDomainCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantOtherCaseCountResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantOtherCaseCount(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantOtherCaseCount", ReplyAction="http://tempuri.org/IService/UpdateApplicantOtherCaseCountResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantOtherCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantFirstOrLastDate", ReplyAction="http://tempuri.org/IService/UpdateApplicantFirstOrLastDateResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantFirstOrLastDate(string[] nOldAppID, string[] nNewAppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateApplicantFirstOrLastDate", ReplyAction="http://tempuri.org/IService/UpdateApplicantFirstOrLastDateResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantFirstOrLastDateAsync(string[] nOldAppID, string[] nNewAppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencytFirstOrLastDate", ReplyAction="http://tempuri.org/IService/UpdateAgencytFirstOrLastDateResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencytFirstOrLastDate(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAgencytFirstOrLastDate", ReplyAction="http://tempuri.org/IService/UpdateAgencytFirstOrLastDateResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencytFirstOrLastDateAsync(string nOldAgencyID, string nNewAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAllCaseCustomFiled", ReplyAction="http://tempuri.org/IService/UpdateAllCaseCustomFiledResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateAllCaseCustomFiled(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAllCaseCustomFiled", ReplyAction="http://tempuri.org/IService/UpdateAllCaseCustomFiledResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAllCaseCustomFiledAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCaseCustomFiled", ReplyAction="http://tempuri.org/IService/UpdateCaseCustomFiledResponse")]
        TaskFlowTest.IPSPServices.UpdateInfo UpdateCaseCustomFiled(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCaseCustomFiled", ReplyAction="http://tempuri.org/IService/UpdateCaseCustomFiledResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateCaseCustomFiledAsync(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/UpdateMyTaskReadState")]
        void UpdateMyTaskReadState(System.Guid gTaskId, string readState);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/UpdateMyTaskReadState")]
        System.Threading.Tasks.Task UpdateMyTaskReadStateAsync(System.Guid gTaskId, string readState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        bool UploadFile(byte[] bytes, string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        System.Threading.Tasks.Task<bool> UploadFileAsync(byte[] bytes, string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFile", ReplyAction="http://tempuri.org/IService/DownloadFileResponse")]
        byte[] DownloadFile(string sSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFile", ReplyAction="http://tempuri.org/IService/DownloadFileResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadFileAsync(string sSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteFile", ReplyAction="http://tempuri.org/IService/DeleteFileResponse")]
        bool DeleteFile(string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteFile", ReplyAction="http://tempuri.org/IService/DeleteFileResponse")]
        System.Threading.Tasks.Task<bool> DeleteFileAsync(string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FileExists", ReplyAction="http://tempuri.org/IService/FileExistsResponse")]
        bool FileExists(string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FileExists", ReplyAction="http://tempuri.org/IService/FileExistsResponse")]
        System.Threading.Tasks.Task<bool> FileExistsAsync(string sTargetPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBillProcedureXmlFile", ReplyAction="http://tempuri.org/IService/GetBillProcedureXmlFileResponse")]
        TaskFlowTest.IPSPServices.GetBillProcedureXmlFileResponse GetBillProcedureXmlFile(TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBillProcedureXmlFile", ReplyAction="http://tempuri.org/IService/GetBillProcedureXmlFileResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.GetBillProcedureXmlFileResponse> GetBillProcedureXmlFileAsync(TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateImmediatelyReminds", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateImmediatelyRemindsResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateImmediatelyReminds(string sReminderTriggerType, string sReminderTriggerID, string sImmediatelyRemindType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateImmediatelyReminds", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateImmediatelyRemindsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateImmediatelyRemindsAsync(string sReminderTriggerType, string sReminderTriggerID, string sImmediatelyRemindType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateTimeReminds", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateTimeRemindsResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateTimeReminds(string sReminderTriggerType, string sReminderTriggerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateTimeReminds", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateTimeRemindsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateTimeRemindsAsync(string sReminderTriggerType, string sReminderTriggerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateImmediatelyRemindsForCameFileDi" +
            "stribute", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateImmediatelyRemindsForCameFileDi" +
            "stributeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateImmediatelyRemindsForCameFileDistribute(int nFileID, int[] listNewDistributerIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateImmediatelyRemindsForCameFileDi" +
            "stribute", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateImmediatelyRemindsForCameFileDi" +
            "stributeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateImmediatelyRemindsForCameFileDistributeAsync(int nFileID, int[] listNewDistributerIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBasicCases", ReplyAction="http://tempuri.org/IService/GetBasicCasesResponse")]
        TaskFlowTest.IPSPServices.BasicCaseData[] GetBasicCases(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBasicCases", ReplyAction="http://tempuri.org/IService/GetBasicCasesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BasicCaseData[]> GetBasicCasesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserBasicCases", ReplyAction="http://tempuri.org/IService/GetUserBasicCasesResponse")]
        TaskFlowTest.IPSPServices.BasicCaseData[] GetUserBasicCases(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserBasicCases", ReplyAction="http://tempuri.org/IService/GetUserBasicCasesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BasicCaseData[]> GetUserBasicCasesAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPatents", ReplyAction="http://tempuri.org/IService/GetPatentsResponse")]
        TaskFlowTest.IPSPServices.PatentData[] GetPatents(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPatents", ReplyAction="http://tempuri.org/IService/GetPatentsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.PatentData[]> GetPatentsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserPatents", ReplyAction="http://tempuri.org/IService/GetUserPatentsResponse")]
        TaskFlowTest.IPSPServices.PatentData[] GetUserPatents(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserPatents", ReplyAction="http://tempuri.org/IService/GetUserPatentsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.PatentData[]> GetUserPatentsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarks", ReplyAction="http://tempuri.org/IService/GetTrademarksResponse")]
        TaskFlowTest.IPSPServices.TrademarkData[] GetTrademarks(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarks", ReplyAction="http://tempuri.org/IService/GetTrademarksResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkData[]> GetTrademarksAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTrademarks", ReplyAction="http://tempuri.org/IService/GetUserTrademarksResponse")]
        TaskFlowTest.IPSPServices.TrademarkData[] GetUserTrademarks(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTrademarks", ReplyAction="http://tempuri.org/IService/GetUserTrademarksResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkData[]> GetUserTrademarksAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDomains", ReplyAction="http://tempuri.org/IService/GetDomainsResponse")]
        TaskFlowTest.IPSPServices.DomainData[] GetDomains(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDomains", ReplyAction="http://tempuri.org/IService/GetDomainsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainData[]> GetDomainsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDomains", ReplyAction="http://tempuri.org/IService/GetUserDomainsResponse")]
        TaskFlowTest.IPSPServices.DomainData[] GetUserDomains(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDomains", ReplyAction="http://tempuri.org/IService/GetUserDomainsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainData[]> GetUserDomainsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCopyRights", ReplyAction="http://tempuri.org/IService/GetCopyRightsResponse")]
        TaskFlowTest.IPSPServices.CopyRightData[] GetCopyRights(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCopyRights", ReplyAction="http://tempuri.org/IService/GetCopyRightsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CopyRightData[]> GetCopyRightsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserCopyRights", ReplyAction="http://tempuri.org/IService/GetUserCopyRightsResponse")]
        TaskFlowTest.IPSPServices.CopyRightData[] GetUserCopyRights(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserCopyRights", ReplyAction="http://tempuri.org/IService/GetUserCopyRightsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CopyRightData[]> GetUserCopyRightsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOtherCases", ReplyAction="http://tempuri.org/IService/GetOtherCasesResponse")]
        TaskFlowTest.IPSPServices.OtherCaseData[] GetOtherCases(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOtherCases", ReplyAction="http://tempuri.org/IService/GetOtherCasesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherCaseData[]> GetOtherCasesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOtherCases", ReplyAction="http://tempuri.org/IService/GetUserOtherCasesResponse")]
        TaskFlowTest.IPSPServices.OtherCaseData[] GetUserOtherCases(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOtherCases", ReplyAction="http://tempuri.org/IService/GetUserOtherCasesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherCaseData[]> GetUserOtherCasesAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        TaskFlowTest.IPSPServices.ClientData[] GetClients(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ClientData[]> GetClientsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserClients", ReplyAction="http://tempuri.org/IService/GetUserClientsResponse")]
        TaskFlowTest.IPSPServices.ClientData[] GetUserClients(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserClients", ReplyAction="http://tempuri.org/IService/GetUserClientsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ClientData[]> GetUserClientsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAgencys", ReplyAction="http://tempuri.org/IService/GetAgencysResponse")]
        TaskFlowTest.IPSPServices.AgencyData[] GetAgencys(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAgencys", ReplyAction="http://tempuri.org/IService/GetAgencysResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AgencyData[]> GetAgencysAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserAgencys", ReplyAction="http://tempuri.org/IService/GetUserAgencysResponse")]
        TaskFlowTest.IPSPServices.AgencyData[] GetUserAgencys(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserAgencys", ReplyAction="http://tempuri.org/IService/GetUserAgencysResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AgencyData[]> GetUserAgencysAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetIntroducers", ReplyAction="http://tempuri.org/IService/GetIntroducersResponse")]
        TaskFlowTest.IPSPServices.IntroducerData[] GetIntroducers(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetIntroducers", ReplyAction="http://tempuri.org/IService/GetIntroducersResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.IntroducerData[]> GetIntroducersAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserIntroducers", ReplyAction="http://tempuri.org/IService/GetUserIntroducersResponse")]
        TaskFlowTest.IPSPServices.IntroducerData[] GetUserIntroducers(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserIntroducers", ReplyAction="http://tempuri.org/IService/GetUserIntroducersResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.IntroducerData[]> GetUserIntroducersAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplicants", ReplyAction="http://tempuri.org/IService/GetApplicantsResponse")]
        TaskFlowTest.IPSPServices.ApplicantData[] GetApplicants(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetApplicants", ReplyAction="http://tempuri.org/IService/GetApplicantsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ApplicantData[]> GetApplicantsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserApplicants", ReplyAction="http://tempuri.org/IService/GetUserApplicantsResponse")]
        TaskFlowTest.IPSPServices.ApplicantData[] GetUserApplicants(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserApplicants", ReplyAction="http://tempuri.org/IService/GetUserApplicantsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ApplicantData[]> GetUserApplicantsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOutFiles", ReplyAction="http://tempuri.org/IService/GetOutFilesResponse")]
        TaskFlowTest.IPSPServices.OutFileData[] GetOutFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOutFiles", ReplyAction="http://tempuri.org/IService/GetOutFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OutFileData[]> GetOutFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOutFiles", ReplyAction="http://tempuri.org/IService/GetUserOutFilesResponse")]
        TaskFlowTest.IPSPServices.OutFileData[] GetUserOutFiles(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOutFiles", ReplyAction="http://tempuri.org/IService/GetUserOutFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OutFileData[]> GetUserOutFilesAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInFiles", ReplyAction="http://tempuri.org/IService/GetInFilesResponse")]
        TaskFlowTest.IPSPServices.InFileData[] GetInFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInFiles", ReplyAction="http://tempuri.org/IService/GetInFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.InFileData[]> GetInFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserInFiles", ReplyAction="http://tempuri.org/IService/GetUserInFilesResponse")]
        TaskFlowTest.IPSPServices.InFileData[] GetUserInFiles(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserInFiles", ReplyAction="http://tempuri.org/IService/GetUserInFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.InFileData[]> GetUserInFilesAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOtherFiles", ReplyAction="http://tempuri.org/IService/GetOtherFilesResponse")]
        TaskFlowTest.IPSPServices.OtherFileData[] GetOtherFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOtherFiles", ReplyAction="http://tempuri.org/IService/GetOtherFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherFileData[]> GetOtherFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOtherFiles", ReplyAction="http://tempuri.org/IService/GetUserOtherFilesResponse")]
        TaskFlowTest.IPSPServices.OtherFileData[] GetUserOtherFiles(string userID, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserOtherFiles", ReplyAction="http://tempuri.org/IService/GetUserOtherFilesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherFileData[]> GetUserOtherFilesAsync(string userID, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetEmails", ReplyAction="http://tempuri.org/IService/GetEmailsResponse")]
        TaskFlowTest.IPSPServices.EmailData[] GetEmails(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetEmails", ReplyAction="http://tempuri.org/IService/GetEmailsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.EmailData[]> GetEmailsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserEmails", ReplyAction="http://tempuri.org/IService/GetUserEmailsResponse")]
        TaskFlowTest.IPSPServices.EmailData[] GetUserEmails(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserEmails", ReplyAction="http://tempuri.org/IService/GetUserEmailsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.EmailData[]> GetUserEmailsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTasks", ReplyAction="http://tempuri.org/IService/GetTasksResponse")]
        TaskFlowTest.IPSPServices.TaskData[] GetTasks(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTasks", ReplyAction="http://tempuri.org/IService/GetTasksResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskData[]> GetTasksAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTasks", ReplyAction="http://tempuri.org/IService/GetUserTasksResponse")]
        TaskFlowTest.IPSPServices.TaskData[] GetUserTasks(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTasks", ReplyAction="http://tempuri.org/IService/GetUserTasksResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskData[]> GetUserTasksAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTaskChains", ReplyAction="http://tempuri.org/IService/GetTaskChainsResponse")]
        TaskFlowTest.IPSPServices.TaskChainData[] GetTaskChains(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTaskChains", ReplyAction="http://tempuri.org/IService/GetTaskChainsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskChainData[]> GetTaskChainsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTaskChains", ReplyAction="http://tempuri.org/IService/GetUserTaskChainsResponse")]
        TaskFlowTest.IPSPServices.TaskChainData[] GetUserTaskChains(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTaskChains", ReplyAction="http://tempuri.org/IService/GetUserTaskChainsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskChainData[]> GetUserTaskChainsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetReminds", ReplyAction="http://tempuri.org/IService/GetRemindsResponse")]
        TaskFlowTest.IPSPServices.RemindData[] GetReminds(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetReminds", ReplyAction="http://tempuri.org/IService/GetRemindsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindData[]> GetRemindsAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserReminds", ReplyAction="http://tempuri.org/IService/GetUserRemindsResponse")]
        TaskFlowTest.IPSPServices.RemindData[] GetUserReminds(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserReminds", ReplyAction="http://tempuri.org/IService/GetUserRemindsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindData[]> GetUserRemindsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRemindRecords", ReplyAction="http://tempuri.org/IService/GetRemindRecordsResponse")]
        TaskFlowTest.IPSPServices.RemindRecordData[] GetRemindRecords(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRemindRecords", ReplyAction="http://tempuri.org/IService/GetRemindRecordsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindRecordData[]> GetRemindRecordsAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserRemindRecords", ReplyAction="http://tempuri.org/IService/GetUserRemindRecordsResponse")]
        TaskFlowTest.IPSPServices.RemindRecordData[] GetUserRemindRecords(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserRemindRecords", ReplyAction="http://tempuri.org/IService/GetUserRemindRecordsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindRecordData[]> GetUserRemindRecordsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDeadlines", ReplyAction="http://tempuri.org/IService/GetDeadlinesResponse")]
        TaskFlowTest.IPSPServices.DeadlineData[] GetDeadlines(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDeadlines", ReplyAction="http://tempuri.org/IService/GetDeadlinesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DeadlineData[]> GetDeadlinesAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFees", ReplyAction="http://tempuri.org/IService/GetFeesResponse")]
        TaskFlowTest.IPSPServices.FeeData[] GetFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFees", ReplyAction="http://tempuri.org/IService/GetFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.FeeData[]> GetFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFees", ReplyAction="http://tempuri.org/IService/GetUserFeesResponse")]
        TaskFlowTest.IPSPServices.FeeData[] GetUserFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFees", ReplyAction="http://tempuri.org/IService/GetUserFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.FeeData[]> GetUserFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChargingFees", ReplyAction="http://tempuri.org/IService/GetChargingFeesResponse")]
        TaskFlowTest.IPSPServices.ChargingFeeData[] GetChargingFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChargingFees", ReplyAction="http://tempuri.org/IService/GetChargingFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ChargingFeeData[]> GetChargingFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserChargingFees", ReplyAction="http://tempuri.org/IService/GetUserChargingFeesResponse")]
        TaskFlowTest.IPSPServices.ChargingFeeData[] GetUserChargingFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserChargingFees", ReplyAction="http://tempuri.org/IService/GetUserChargingFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ChargingFeeData[]> GetUserChargingFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAnnualFees", ReplyAction="http://tempuri.org/IService/GetAnnualFeesResponse")]
        TaskFlowTest.IPSPServices.AnnualFeeData[] GetAnnualFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAnnualFees", ReplyAction="http://tempuri.org/IService/GetAnnualFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AnnualFeeData[]> GetAnnualFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserAnnualFees", ReplyAction="http://tempuri.org/IService/GetUserAnnualFeesResponse")]
        TaskFlowTest.IPSPServices.AnnualFeeData[] GetUserAnnualFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserAnnualFees", ReplyAction="http://tempuri.org/IService/GetUserAnnualFeesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AnnualFeeData[]> GetUserAnnualFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDomainNameRenewal", ReplyAction="http://tempuri.org/IService/GetDomainNameRenewalResponse")]
        TaskFlowTest.IPSPServices.DomainNameRenewalData[] GetDomainNameRenewal(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDomainNameRenewal", ReplyAction="http://tempuri.org/IService/GetDomainNameRenewalResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainNameRenewalData[]> GetDomainNameRenewalAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDomainNameRenewal", ReplyAction="http://tempuri.org/IService/GetUserDomainNameRenewalResponse")]
        TaskFlowTest.IPSPServices.DomainNameRenewalData[] GetUserDomainNameRenewal(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserDomainNameRenewal", ReplyAction="http://tempuri.org/IService/GetUserDomainNameRenewalResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainNameRenewalData[]> GetUserDomainNameRenewalAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkRenewal", ReplyAction="http://tempuri.org/IService/GetTrademarkRenewalResponse")]
        TaskFlowTest.IPSPServices.TrademarkRenewalData[] GetTrademarkRenewal(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkRenewal", ReplyAction="http://tempuri.org/IService/GetTrademarkRenewalResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkRenewalData[]> GetTrademarkRenewalAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTrademarkRenewal", ReplyAction="http://tempuri.org/IService/GetUserTrademarkRenewalResponse")]
        TaskFlowTest.IPSPServices.TrademarkRenewalData[] GetUserTrademarkRenewal(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTrademarkRenewal", ReplyAction="http://tempuri.org/IService/GetUserTrademarkRenewalResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkRenewalData[]> GetUserTrademarkRenewalAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetABillHedges", ReplyAction="http://tempuri.org/IService/GetABillHedgesResponse")]
        TaskFlowTest.IPSPServices.ABillHedgeData[] GetABillHedges(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetABillHedges", ReplyAction="http://tempuri.org/IService/GetABillHedgesResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ABillHedgeData[]> GetABillHedgesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetABillPayments", ReplyAction="http://tempuri.org/IService/GetABillPaymentsResponse")]
        TaskFlowTest.IPSPServices.ABillPaymentData[] GetABillPayments(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetABillPayments", ReplyAction="http://tempuri.org/IService/GetABillPaymentsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ABillPaymentData[]> GetABillPaymentsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBills", ReplyAction="http://tempuri.org/IService/GetBillsResponse")]
        TaskFlowTest.IPSPServices.BillData[] GetBills(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBills", ReplyAction="http://tempuri.org/IService/GetBillsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BillData[]> GetBillsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeSheets", ReplyAction="http://tempuri.org/IService/GetTimeSheetsResponse")]
        TaskFlowTest.IPSPServices.TimeSheetData[] GetTimeSheets(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeSheets", ReplyAction="http://tempuri.org/IService/GetTimeSheetsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TimeSheetData[]> GetTimeSheetsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTimeSheets", ReplyAction="http://tempuri.org/IService/GetUserTimeSheetsResponse")]
        TaskFlowTest.IPSPServices.TimeSheetData[] GetUserTimeSheets(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserTimeSheets", ReplyAction="http://tempuri.org/IService/GetUserTimeSheetsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TimeSheetData[]> GetUserTimeSheetsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMonitors", ReplyAction="http://tempuri.org/IService/GetMonitorsResponse")]
        TaskFlowTest.IPSPServices.MonitorData[] GetMonitors(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMonitors", ReplyAction="http://tempuri.org/IService/GetMonitorsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.MonitorData[]> GetMonitorsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserMonitors", ReplyAction="http://tempuri.org/IService/GetUserMonitorsResponse")]
        TaskFlowTest.IPSPServices.MonitorData[] GetUserMonitors(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserMonitors", ReplyAction="http://tempuri.org/IService/GetUserMonitorsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.MonitorData[]> GetUserMonitorsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkItems", ReplyAction="http://tempuri.org/IService/GetWorkItemsResponse")]
        TaskFlowTest.IPSPServices.WorkItemData[] GetWorkItems(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWorkItems", ReplyAction="http://tempuri.org/IService/GetWorkItemsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.WorkItemData[]> GetWorkItemsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserWorkItems", ReplyAction="http://tempuri.org/IService/GetUserWorkItemsResponse")]
        TaskFlowTest.IPSPServices.WorkItemData[] GetUserWorkItems(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserWorkItems", ReplyAction="http://tempuri.org/IService/GetUserWorkItemsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.WorkItemData[]> GetUserWorkItemsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCameMoney", ReplyAction="http://tempuri.org/IService/GetCameMoneyResponse")]
        TaskFlowTest.IPSPServices.CameMoneyData[] GetCameMoney(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCameMoney", ReplyAction="http://tempuri.org/IService/GetCameMoneyResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CameMoneyData[]> GetCameMoneyAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserCameMoney", ReplyAction="http://tempuri.org/IService/GetUserCameMoneyResponse")]
        TaskFlowTest.IPSPServices.CameMoneyData[] GetUserCameMoney(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserCameMoney", ReplyAction="http://tempuri.org/IService/GetUserCameMoneyResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CameMoneyData[]> GetUserCameMoneyAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetArchiveData", ReplyAction="http://tempuri.org/IService/GetArchiveDataResponse")]
        TaskFlowTest.IPSPServices.ArchiveData[] GetArchiveData(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetArchiveData", ReplyAction="http://tempuri.org/IService/GetArchiveDataResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ArchiveData[]> GetArchiveDataAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserArchiveData", ReplyAction="http://tempuri.org/IService/GetUserArchiveDataResponse")]
        TaskFlowTest.IPSPServices.ArchiveData[] GetUserArchiveData(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserArchiveData", ReplyAction="http://tempuri.org/IService/GetUserArchiveDataResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ArchiveData[]> GetUserArchiveDataAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(string sData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(string sData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConnectSuccess", ReplyAction="http://tempuri.org/IService/ConnectSuccessResponse")]
        bool ConnectSuccess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConnectSuccess", ReplyAction="http://tempuri.org/IService/ConnectSuccessResponse")]
        System.Threading.Tasks.Task<bool> ConnectSuccessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetConnectionString", ReplyAction="http://tempuri.org/IService/GetConnectionStringResponse")]
        string GetConnectionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetConnectionString", ReplyAction="http://tempuri.org/IService/GetConnectionStringResponse")]
        System.Threading.Tasks.Task<string> GetConnectionStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurrentVersion", ReplyAction="http://tempuri.org/IService/GetCurrentVersionResponse")]
        string GetCurrentVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurrentVersion", ReplyAction="http://tempuri.org/IService/GetCurrentVersionResponse")]
        System.Threading.Tasks.Task<string> GetCurrentVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClientVersion", ReplyAction="http://tempuri.org/IService/GetClientVersionResponse")]
        string GetClientVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClientVersion", ReplyAction="http://tempuri.org/IService/GetClientVersionResponse")]
        System.Threading.Tasks.Task<string> GetClientVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUpgradeConfigInfo", ReplyAction="http://tempuri.org/IService/GetUpgradeConfigInfoResponse")]
        string GetUpgradeConfigInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUpgradeConfigInfo", ReplyAction="http://tempuri.org/IService/GetUpgradeConfigInfoResponse")]
        System.Threading.Tasks.Task<string> GetUpgradeConfigInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RequestLifeCycle", ReplyAction="http://tempuri.org/IService/RequestLifeCycleResponse")]
        TaskFlowTest.IPSPServices.LifeCycleInfo RequestLifeCycle(int nEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RequestLifeCycle", ReplyAction="http://tempuri.org/IService/RequestLifeCycleResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.LifeCycleInfo> RequestLifeCycleAsync(int nEmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkGoodsPatternCN", ReplyAction="http://tempuri.org/IService/GetTrademarkGoodsPatternCNResponse")]
        string GetTrademarkGoodsPatternCN();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkGoodsPatternCN", ReplyAction="http://tempuri.org/IService/GetTrademarkGoodsPatternCNResponse")]
        System.Threading.Tasks.Task<string> GetTrademarkGoodsPatternCNAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkGoodsPatternEN", ReplyAction="http://tempuri.org/IService/GetTrademarkGoodsPatternENResponse")]
        string GetTrademarkGoodsPatternEN();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTrademarkGoodsPatternEN", ReplyAction="http://tempuri.org/IService/GetTrademarkGoodsPatternENResponse")]
        System.Threading.Tasks.Task<string> GetTrademarkGoodsPatternENAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerUpdateTaskFlowConfig", ReplyAction="http://tempuri.org/IService/ByServerUpdateTaskFlowConfigResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerUpdateTaskFlowConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerUpdateTaskFlowConfig", ReplyAction="http://tempuri.org/IService/ByServerUpdateTaskFlowConfigResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerUpdateTaskFlowConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateTopTaskChains", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateTopTaskChainsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OperationInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.UpdateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.LifeCycleInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveBaseData))]
        TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateTopTaskChains(string sTriggerType, string sTriggerObjectFullName, object objTriggerObjectKey, bool bCanRepeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerAutoGenerateTopTaskChains", ReplyAction="http://tempuri.org/IService/ByServerAutoGenerateTopTaskChainsResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateTopTaskChainsAsync(string sTriggerType, string sTriggerObjectFullName, object objTriggerObjectKey, bool bCanRepeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateTopTaskChain", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateTopTaskChainResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OperationInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.UpdateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.LifeCycleInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveBaseData))]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateTopTaskChain(System.Guid gTaskChainID, string sRelatedObjectFullName, object objRelatedObjectKey, bool bCanRepeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateTopTaskChain", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateTopTaskChainResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateTopTaskChainAsync(System.Guid gTaskChainID, string sRelatedObjectFullName, object objRelatedObjectKey, bool bCanRepeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerIsObjectExistsSpecifiedTaskChain", ReplyAction="http://tempuri.org/IService/ByServerIsObjectExistsSpecifiedTaskChainResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OperationInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.UpdateInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.LifeCycleInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BasicCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.PatentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CopyRightBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherCaseBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ClientBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AgencyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.IntroducerBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ApplicantBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OutFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.InFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.OtherFileBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.EmailBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TaskChainBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.RemindRecordBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DeadlineBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.FeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ChargingFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.AnnualFeeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.DomainNameRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TrademarkRenewalBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillHedgeBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ABillPaymentBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.BillBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.TimeSheetBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.MonitorBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.WorkItemBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.CameMoneyBaseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskFlowTest.IPSPServices.ArchiveBaseData))]
        TaskFlowTest.IPSPServices.OperationInfo ByServerIsObjectExistsSpecifiedTaskChain(string sObjectFullName, object objObjectKey, System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerIsObjectExistsSpecifiedTaskChain", ReplyAction="http://tempuri.org/IService/ByServerIsObjectExistsSpecifiedTaskChainResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerIsObjectExistsSpecifiedTaskChainAsync(string sObjectFullName, object objObjectKey, System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateTaskNode", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateTaskNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateTaskNode(System.Guid gTaskChainID, System.Guid gCodeNodeTaskID, int nCreatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualGenerateTaskNode", ReplyAction="http://tempuri.org/IService/ByServerManualGenerateTaskNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateTaskNodeAsync(System.Guid gTaskChainID, System.Guid gCodeNodeTaskID, int nCreatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualCreateTaskNodeWithoutCode", ReplyAction="http://tempuri.org/IService/ByServerManualCreateTaskNodeWithoutCodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualCreateTaskNodeWithoutCode(System.Guid gTaskChainID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualCreateTaskNodeWithoutCode", ReplyAction="http://tempuri.org/IService/ByServerManualCreateTaskNodeWithoutCodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualCreateTaskNodeWithoutCodeAsync(System.Guid gTaskChainID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualCreateTaskNodeInNewTaskChainWithoutCode" +
            "", ReplyAction="http://tempuri.org/IService/ByServerManualCreateTaskNodeInNewTaskChainWithoutCode" +
            "Response")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerManualCreateTaskNodeInNewTaskChainWithoutCode(string sTaskChainName, string sRelatedObjectType, int nRelatedObjectID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerManualCreateTaskNodeInNewTaskChainWithoutCode" +
            "", ReplyAction="http://tempuri.org/IService/ByServerManualCreateTaskNodeInNewTaskChainWithoutCode" +
            "Response")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualCreateTaskNodeInNewTaskChainWithoutCodeAsync(string sTaskChainName, string sRelatedObjectType, int nRelatedObjectID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerFinishTaskNode", ReplyAction="http://tempuri.org/IService/ByServerFinishTaskNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerFinishTaskNode(System.Guid gTaskNodeID, int nFinisherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerFinishTaskNode", ReplyAction="http://tempuri.org/IService/ByServerFinishTaskNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerFinishTaskNodeAsync(System.Guid gTaskNodeID, int nFinisherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerCloseNode", ReplyAction="http://tempuri.org/IService/ByServerCloseNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerCloseNode(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerCloseNode", ReplyAction="http://tempuri.org/IService/ByServerCloseNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerCloseNodeAsync(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerCloseTaskChain", ReplyAction="http://tempuri.org/IService/ByServerCloseTaskChainResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerCloseTaskChain(System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerCloseTaskChain", ReplyAction="http://tempuri.org/IService/ByServerCloseTaskChainResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerCloseTaskChainAsync(System.Guid gTaskChainID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerReopenNode", ReplyAction="http://tempuri.org/IService/ByServerReopenNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerReopenNode(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerReopenNode", ReplyAction="http://tempuri.org/IService/ByServerReopenNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerReopenNodeAsync(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerDeleteNode", ReplyAction="http://tempuri.org/IService/ByServerDeleteNodeResponse")]
        TaskFlowTest.IPSPServices.OperationInfo ByServerDeleteNode(System.Guid gNodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ByServerDeleteNode", ReplyAction="http://tempuri.org/IService/ByServerDeleteNodeResponse")]
        System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerDeleteNodeAsync(System.Guid gNodeID);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBillProcedureXmlFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBillProcedureXmlFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int billId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int billTemplateId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string templateFilePath;
        
        public GetBillProcedureXmlFileRequest() {
        }
        
        public GetBillProcedureXmlFileRequest(int billId, int billTemplateId, string templateFilePath) {
            this.billId = billId;
            this.billTemplateId = billTemplateId;
            this.templateFilePath = templateFilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBillProcedureXmlFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBillProcedureXmlFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] GetBillProcedureXmlFileResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string templateFilePath;
        
        public GetBillProcedureXmlFileResponse() {
        }
        
        public GetBillProcedureXmlFileResponse(byte[] GetBillProcedureXmlFileResult, string templateFilePath) {
            this.GetBillProcedureXmlFileResult = GetBillProcedureXmlFileResult;
            this.templateFilePath = templateFilePath;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TaskFlowTest.IPSPServices.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TaskFlowTest.IPSPServices.IService>, TaskFlowTest.IPSPServices.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerDeleteTaskChain(System.Guid gTaskChainID) {
            return base.Channel.ByServerDeleteTaskChain(gTaskChainID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerDeleteTaskChainAsync(System.Guid gTaskChainID) {
            return base.Channel.ByServerDeleteTaskChainAsync(gTaskChainID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerRollBackNode(System.Guid gNodeID) {
            return base.Channel.ByServerRollBackNode(gNodeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerRollBackNodeAsync(System.Guid gNodeID) {
            return base.Channel.ByServerRollBackNodeAsync(gNodeID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerUpdateTaskExecutor(System.Guid[] listTaskIDs, int nExecutorID, int nExecutePositionID) {
            return base.Channel.ByServerUpdateTaskExecutor(listTaskIDs, nExecutorID, nExecutePositionID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerUpdateTaskExecutorAsync(System.Guid[] listTaskIDs, int nExecutorID, int nExecutePositionID) {
            return base.Channel.ByServerUpdateTaskExecutorAsync(listTaskIDs, nExecutorID, nExecutePositionID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualUpdateDeadline(System.Guid gCodeDeadlineID, string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerManualUpdateDeadline(gCodeDeadlineID, sRelatedObjectType, nRelatedObjectID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualUpdateDeadlineAsync(System.Guid gCodeDeadlineID, string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerManualUpdateDeadlineAsync(gCodeDeadlineID, sRelatedObjectType, nRelatedObjectID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerAutoUpdateDeadlineByCodeBaseDate(int nCodeBaseDateID, string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerAutoUpdateDeadlineByCodeBaseDate(nCodeBaseDateID, sRelatedObjectType, nRelatedObjectID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoUpdateDeadlineByCodeBaseDateAsync(int nCodeBaseDateID, string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerAutoUpdateDeadlineByCodeBaseDateAsync(nCodeBaseDateID, sRelatedObjectType, nRelatedObjectID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerAutoUpdateRelatedInfo(string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerAutoUpdateRelatedInfo(sRelatedObjectType, nRelatedObjectID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoUpdateRelatedInfoAsync(string sRelatedObjectType, int nRelatedObjectID) {
            return base.Channel.ByServerAutoUpdateRelatedInfoAsync(sRelatedObjectType, nRelatedObjectID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateClient(string sClientID) {
            return base.Channel.InsertOrUpdateClient(sClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateClientAsync(string sClientID) {
            return base.Channel.InsertOrUpdateClientAsync(sClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateBaseCase(string sCaseID) {
            return base.Channel.InsertOrUpdateBaseCase(sCaseID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateBaseCaseAsync(string sCaseID) {
            return base.Channel.InsertOrUpdateBaseCaseAsync(sCaseID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdatePatentCase(string sPatentID) {
            return base.Channel.InsertOrUpdatePatentCase(sPatentID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdatePatentCaseAsync(string sPatentID) {
            return base.Channel.InsertOrUpdatePatentCaseAsync(sPatentID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTrademarkCase(string sTrademarkID) {
            return base.Channel.InsertOrUpdateTrademarkCase(sTrademarkID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTrademarkCaseAsync(string sTrademarkID) {
            return base.Channel.InsertOrUpdateTrademarkCaseAsync(sTrademarkID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateFee(string sFeeID) {
            return base.Channel.InsertOrUpdateFee(sFeeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateFeeAsync(string sFeeID) {
            return base.Channel.InsertOrUpdateFeeAsync(sFeeID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateMainFiles(string sFileID) {
            return base.Channel.InsertOrUpdateMainFiles(sFileID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateMainFilesAsync(string sFileID) {
            return base.Channel.InsertOrUpdateMainFilesAsync(sFileID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateMonitor(string sMonitorID) {
            return base.Channel.InsertOrUpdateMonitor(sMonitorID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateMonitorAsync(string sMonitorID) {
            return base.Channel.InsertOrUpdateMonitorAsync(sMonitorID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTask(string sTaskID) {
            return base.Channel.InsertOrUpdateTask(sTaskID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTaskAsync(string sTaskID) {
            return base.Channel.InsertOrUpdateTaskAsync(sTaskID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateTimeSheet(string sTimesheetID) {
            return base.Channel.InsertOrUpdateTimeSheet(sTimesheetID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateTimeSheetAsync(string sTimesheetID) {
            return base.Channel.InsertOrUpdateTimeSheetAsync(sTimesheetID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateBill(string sBillID) {
            return base.Channel.InsertOrUpdateBill(sBillID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateBillAsync(string sBillID) {
            return base.Channel.InsertOrUpdateBillAsync(sBillID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateEmployeeName(string sEmployeeID) {
            return base.Channel.InsertOrUpdateEmployeeName(sEmployeeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateEmployeeNameAsync(string sEmployeeID) {
            return base.Channel.InsertOrUpdateEmployeeNameAsync(sEmployeeID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateEmail(string sEmailID) {
            return base.Channel.InsertOrUpdateEmail(sEmailID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateEmailAsync(string sEmailID) {
            return base.Channel.InsertOrUpdateEmailAsync(sEmailID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateExpense(string sExpenseID) {
            return base.Channel.InsertOrUpdateExpense(sExpenseID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateExpenseAsync(string sExpenseID) {
            return base.Channel.InsertOrUpdateExpenseAsync(sExpenseID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateProcess(string sProcessID) {
            return base.Channel.InsertOrUpdateProcess(sProcessID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateProcessAsync(string sProcessID) {
            return base.Channel.InsertOrUpdateProcessAsync(sProcessID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateIntroducer(string sIntroducerID) {
            return base.Channel.InsertOrUpdateIntroducer(sIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateIntroducerAsync(string sIntroducerID) {
            return base.Channel.InsertOrUpdateIntroducerAsync(sIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateApplicant(string sAppID) {
            return base.Channel.InsertOrUpdateApplicant(sAppID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateApplicantAsync(string sAppID) {
            return base.Channel.InsertOrUpdateApplicantAsync(sAppID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo InsertOrUpdateAgency(string nAgencyID) {
            return base.Channel.InsertOrUpdateAgency(nAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> InsertOrUpdateAgencyAsync(string nAgencyID) {
            return base.Channel.InsertOrUpdateAgencyAsync(nAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateClientPatentCaseCount(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientPatentCaseCount(nOldClientID, nNewClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientPatentCaseCountAsync(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientPatentCaseCountAsync(nOldClientID, nNewClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateClientTMCaseCount(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientTMCaseCount(nOldClientID, nNewClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientTMCaseCountAsync(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientTMCaseCountAsync(nOldClientID, nNewClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateClientCopyRightCaseCount(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientCopyRightCaseCount(nOldClientID, nNewClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientCopyRightCaseCountAsync(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientCopyRightCaseCountAsync(nOldClientID, nNewClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateClientDomainCaseCount(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientDomainCaseCount(nOldClientID, nNewClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientDomainCaseCountAsync(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientDomainCaseCountAsync(nOldClientID, nNewClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateClientOtherCaseCount(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientOtherCaseCount(nOldClientID, nNewClientID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateClientOtherCaseCountAsync(string nOldClientID, string nNewClientID) {
            return base.Channel.UpdateClientOtherCaseCountAsync(nOldClientID, nNewClientID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerPatentCaseCount(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerPatentCaseCount(nOldIntroducerID, nNewIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerPatentCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerPatentCaseCountAsync(nOldIntroducerID, nNewIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerTMCaseCount(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerTMCaseCount(nOldIntroducerID, nNewIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerTMCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerTMCaseCountAsync(nOldIntroducerID, nNewIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerCopyRightCaseCount(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerCopyRightCaseCount(nOldIntroducerID, nNewIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerCopyRightCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerCopyRightCaseCountAsync(nOldIntroducerID, nNewIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerDomainCaseCount(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerDomainCaseCount(nOldIntroducerID, nNewIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerDomainCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerDomainCaseCountAsync(nOldIntroducerID, nNewIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateIntroducerOtherCaseCount(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerOtherCaseCount(nOldIntroducerID, nNewIntroducerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateIntroducerOtherCaseCountAsync(string nOldIntroducerID, string nNewIntroducerID) {
            return base.Channel.UpdateIntroducerOtherCaseCountAsync(nOldIntroducerID, nNewIntroducerID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToPatentCaseCount(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToPatentCaseCount(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToPatentCaseCountAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToPatentCaseCountAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToTMCaseCount(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToTMCaseCount(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToTMCaseCountAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToTMCaseCountAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToCopyRightCaseCount(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToCopyRightCaseCount(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToCopyRightCaseCountAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToCopyRightCaseCountAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToDomainCaseCount(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToDomainCaseCount(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToDomainCaseCountAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToDomainCaseCountAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencyToOtherCaseCount(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToOtherCaseCount(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencyToOtherCaseCountAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencyToOtherCaseCountAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantPatentCaseCount(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantPatentCaseCount(nOldApplicantID, nNewApplicantID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantPatentCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantPatentCaseCountAsync(nOldApplicantID, nNewApplicantID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantTMCaseCount(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantTMCaseCount(nOldApplicantID, nNewApplicantID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantTMCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantTMCaseCountAsync(nOldApplicantID, nNewApplicantID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantCopyRightCaseCount(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantCopyRightCaseCount(nOldApplicantID, nNewApplicantID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantCopyRightCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantCopyRightCaseCountAsync(nOldApplicantID, nNewApplicantID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantDomainCaseCount(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantDomainCaseCount(nOldApplicantID, nNewApplicantID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantDomainCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantDomainCaseCountAsync(nOldApplicantID, nNewApplicantID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantOtherCaseCount(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantOtherCaseCount(nOldApplicantID, nNewApplicantID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantOtherCaseCountAsync(string[] nOldApplicantID, string[] nNewApplicantID) {
            return base.Channel.UpdateApplicantOtherCaseCountAsync(nOldApplicantID, nNewApplicantID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateApplicantFirstOrLastDate(string[] nOldAppID, string[] nNewAppID) {
            return base.Channel.UpdateApplicantFirstOrLastDate(nOldAppID, nNewAppID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateApplicantFirstOrLastDateAsync(string[] nOldAppID, string[] nNewAppID) {
            return base.Channel.UpdateApplicantFirstOrLastDateAsync(nOldAppID, nNewAppID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAgencytFirstOrLastDate(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencytFirstOrLastDate(nOldAgencyID, nNewAgencyID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAgencytFirstOrLastDateAsync(string nOldAgencyID, string nNewAgencyID) {
            return base.Channel.UpdateAgencytFirstOrLastDateAsync(nOldAgencyID, nNewAgencyID);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateAllCaseCustomFiled(string type) {
            return base.Channel.UpdateAllCaseCustomFiled(type);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateAllCaseCustomFiledAsync(string type) {
            return base.Channel.UpdateAllCaseCustomFiledAsync(type);
        }
        
        public TaskFlowTest.IPSPServices.UpdateInfo UpdateCaseCustomFiled(int caseId) {
            return base.Channel.UpdateCaseCustomFiled(caseId);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.UpdateInfo> UpdateCaseCustomFiledAsync(int caseId) {
            return base.Channel.UpdateCaseCustomFiledAsync(caseId);
        }
        
        public void UpdateMyTaskReadState(System.Guid gTaskId, string readState) {
            base.Channel.UpdateMyTaskReadState(gTaskId, readState);
        }
        
        public System.Threading.Tasks.Task UpdateMyTaskReadStateAsync(System.Guid gTaskId, string readState) {
            return base.Channel.UpdateMyTaskReadStateAsync(gTaskId, readState);
        }
        
        public bool UploadFile(byte[] bytes, string sTargetPath) {
            return base.Channel.UploadFile(bytes, sTargetPath);
        }
        
        public System.Threading.Tasks.Task<bool> UploadFileAsync(byte[] bytes, string sTargetPath) {
            return base.Channel.UploadFileAsync(bytes, sTargetPath);
        }
        
        public byte[] DownloadFile(string sSourcePath) {
            return base.Channel.DownloadFile(sSourcePath);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadFileAsync(string sSourcePath) {
            return base.Channel.DownloadFileAsync(sSourcePath);
        }
        
        public bool DeleteFile(string sTargetPath) {
            return base.Channel.DeleteFile(sTargetPath);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFileAsync(string sTargetPath) {
            return base.Channel.DeleteFileAsync(sTargetPath);
        }
        
        public bool FileExists(string sTargetPath) {
            return base.Channel.FileExists(sTargetPath);
        }
        
        public System.Threading.Tasks.Task<bool> FileExistsAsync(string sTargetPath) {
            return base.Channel.FileExistsAsync(sTargetPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TaskFlowTest.IPSPServices.GetBillProcedureXmlFileResponse TaskFlowTest.IPSPServices.IService.GetBillProcedureXmlFile(TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest request) {
            return base.Channel.GetBillProcedureXmlFile(request);
        }
        
        public byte[] GetBillProcedureXmlFile(int billId, int billTemplateId, ref string templateFilePath) {
            TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest inValue = new TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest();
            inValue.billId = billId;
            inValue.billTemplateId = billTemplateId;
            inValue.templateFilePath = templateFilePath;
            TaskFlowTest.IPSPServices.GetBillProcedureXmlFileResponse retVal = ((TaskFlowTest.IPSPServices.IService)(this)).GetBillProcedureXmlFile(inValue);
            templateFilePath = retVal.templateFilePath;
            return retVal.GetBillProcedureXmlFileResult;
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.GetBillProcedureXmlFileResponse> GetBillProcedureXmlFileAsync(TaskFlowTest.IPSPServices.GetBillProcedureXmlFileRequest request) {
            return base.Channel.GetBillProcedureXmlFileAsync(request);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateImmediatelyReminds(string sReminderTriggerType, string sReminderTriggerID, string sImmediatelyRemindType) {
            return base.Channel.ByServerAutoGenerateImmediatelyReminds(sReminderTriggerType, sReminderTriggerID, sImmediatelyRemindType);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateImmediatelyRemindsAsync(string sReminderTriggerType, string sReminderTriggerID, string sImmediatelyRemindType) {
            return base.Channel.ByServerAutoGenerateImmediatelyRemindsAsync(sReminderTriggerType, sReminderTriggerID, sImmediatelyRemindType);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateTimeReminds(string sReminderTriggerType, string sReminderTriggerID) {
            return base.Channel.ByServerAutoGenerateTimeReminds(sReminderTriggerType, sReminderTriggerID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateTimeRemindsAsync(string sReminderTriggerType, string sReminderTriggerID) {
            return base.Channel.ByServerAutoGenerateTimeRemindsAsync(sReminderTriggerType, sReminderTriggerID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateImmediatelyRemindsForCameFileDistribute(int nFileID, int[] listNewDistributerIDs) {
            return base.Channel.ByServerManualGenerateImmediatelyRemindsForCameFileDistribute(nFileID, listNewDistributerIDs);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateImmediatelyRemindsForCameFileDistributeAsync(int nFileID, int[] listNewDistributerIDs) {
            return base.Channel.ByServerManualGenerateImmediatelyRemindsForCameFileDistributeAsync(nFileID, listNewDistributerIDs);
        }
        
        public TaskFlowTest.IPSPServices.BasicCaseData[] GetBasicCases(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetBasicCases(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BasicCaseData[]> GetBasicCasesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetBasicCasesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.BasicCaseData[] GetUserBasicCases(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserBasicCases(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BasicCaseData[]> GetUserBasicCasesAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserBasicCasesAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.PatentData[] GetPatents(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetPatents(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.PatentData[]> GetPatentsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetPatentsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.PatentData[] GetUserPatents(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserPatents(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.PatentData[]> GetUserPatentsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserPatentsAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TrademarkData[] GetTrademarks(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTrademarks(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkData[]> GetTrademarksAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTrademarksAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TrademarkData[] GetUserTrademarks(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTrademarks(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkData[]> GetUserTrademarksAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTrademarksAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.DomainData[] GetDomains(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDomains(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainData[]> GetDomainsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDomainsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.DomainData[] GetUserDomains(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserDomains(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainData[]> GetUserDomainsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserDomainsAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.CopyRightData[] GetCopyRights(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetCopyRights(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CopyRightData[]> GetCopyRightsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetCopyRightsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.CopyRightData[] GetUserCopyRights(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserCopyRights(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CopyRightData[]> GetUserCopyRightsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserCopyRightsAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OtherCaseData[] GetOtherCases(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOtherCases(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherCaseData[]> GetOtherCasesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOtherCasesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OtherCaseData[] GetUserOtherCases(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOtherCases(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherCaseData[]> GetUserOtherCasesAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOtherCasesAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ClientData[] GetClients(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetClients(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ClientData[]> GetClientsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetClientsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ClientData[] GetUserClients(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserClients(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ClientData[]> GetUserClientsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserClientsAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.AgencyData[] GetAgencys(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetAgencys(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AgencyData[]> GetAgencysAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetAgencysAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.AgencyData[] GetUserAgencys(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserAgencys(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AgencyData[]> GetUserAgencysAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserAgencysAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.IntroducerData[] GetIntroducers(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetIntroducers(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.IntroducerData[]> GetIntroducersAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetIntroducersAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.IntroducerData[] GetUserIntroducers(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserIntroducers(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.IntroducerData[]> GetUserIntroducersAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserIntroducersAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ApplicantData[] GetApplicants(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetApplicants(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ApplicantData[]> GetApplicantsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetApplicantsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ApplicantData[] GetUserApplicants(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserApplicants(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ApplicantData[]> GetUserApplicantsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserApplicantsAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OutFileData[] GetOutFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOutFiles(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OutFileData[]> GetOutFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOutFilesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OutFileData[] GetUserOutFiles(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOutFiles(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OutFileData[]> GetUserOutFilesAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOutFilesAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.InFileData[] GetInFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetInFiles(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.InFileData[]> GetInFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetInFilesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.InFileData[] GetUserInFiles(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserInFiles(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.InFileData[]> GetUserInFilesAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserInFilesAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OtherFileData[] GetOtherFiles(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOtherFiles(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherFileData[]> GetOtherFilesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetOtherFilesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.OtherFileData[] GetUserOtherFiles(string userID, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOtherFiles(userID, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OtherFileData[]> GetUserOtherFilesAsync(string userID, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserOtherFilesAsync(userID, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.EmailData[] GetEmails(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetEmails(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.EmailData[]> GetEmailsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetEmailsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.EmailData[] GetUserEmails(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserEmails(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.EmailData[]> GetUserEmailsAsync(string userID, string sMyBagFlag, string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserEmailsAsync(userID, sMyBagFlag, sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TaskData[] GetTasks(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTasks(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskData[]> GetTasksAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTasksAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TaskData[] GetUserTasks(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTasks(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskData[]> GetUserTasksAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTasksAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TaskChainData[] GetTaskChains(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTaskChains(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskChainData[]> GetTaskChainsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTaskChainsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TaskChainData[] GetUserTaskChains(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTaskChains(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TaskChainData[]> GetUserTaskChainsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTaskChainsAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.RemindData[] GetReminds(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetReminds(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindData[]> GetRemindsAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetRemindsAsync(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.RemindData[] GetUserReminds(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserReminds(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindData[]> GetUserRemindsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserRemindsAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.RemindRecordData[] GetRemindRecords(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetRemindRecords(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindRecordData[]> GetRemindRecordsAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetRemindRecordsAsync(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.RemindRecordData[] GetUserRemindRecords(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserRemindRecords(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.RemindRecordData[]> GetUserRemindRecordsAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserRemindRecordsAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.DeadlineData[] GetDeadlines(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDeadlines(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DeadlineData[]> GetDeadlinesAsync(string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDeadlinesAsync(sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.FeeData[] GetFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetFees(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.FeeData[]> GetFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetFeesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.FeeData[] GetUserFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserFees(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.FeeData[]> GetUserFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserFeesAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ChargingFeeData[] GetChargingFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetChargingFees(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ChargingFeeData[]> GetChargingFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetChargingFeesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ChargingFeeData[] GetUserChargingFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserChargingFees(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ChargingFeeData[]> GetUserChargingFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserChargingFeesAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.AnnualFeeData[] GetAnnualFees(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetAnnualFees(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AnnualFeeData[]> GetAnnualFeesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetAnnualFeesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.AnnualFeeData[] GetUserAnnualFees(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserAnnualFees(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.AnnualFeeData[]> GetUserAnnualFeesAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserAnnualFeesAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.DomainNameRenewalData[] GetDomainNameRenewal(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDomainNameRenewal(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainNameRenewalData[]> GetDomainNameRenewalAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetDomainNameRenewalAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.DomainNameRenewalData[] GetUserDomainNameRenewal(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserDomainNameRenewal(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.DomainNameRenewalData[]> GetUserDomainNameRenewalAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserDomainNameRenewalAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TrademarkRenewalData[] GetTrademarkRenewal(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTrademarkRenewal(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkRenewalData[]> GetTrademarkRenewalAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTrademarkRenewalAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TrademarkRenewalData[] GetUserTrademarkRenewal(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTrademarkRenewal(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TrademarkRenewalData[]> GetUserTrademarkRenewalAsync(string userID, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTrademarkRenewalAsync(userID, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ABillHedgeData[] GetABillHedges(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetABillHedges(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ABillHedgeData[]> GetABillHedgesAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetABillHedgesAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ABillPaymentData[] GetABillPayments(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetABillPayments(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ABillPaymentData[]> GetABillPaymentsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetABillPaymentsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.BillData[] GetBills(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetBills(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.BillData[]> GetBillsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetBillsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TimeSheetData[] GetTimeSheets(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTimeSheets(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TimeSheetData[]> GetTimeSheetsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetTimeSheetsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.TimeSheetData[] GetUserTimeSheets(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTimeSheets(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.TimeSheetData[]> GetUserTimeSheetsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserTimeSheetsAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.MonitorData[] GetMonitors(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetMonitors(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.MonitorData[]> GetMonitorsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetMonitorsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.MonitorData[] GetUserMonitors(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserMonitors(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.MonitorData[]> GetUserMonitorsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserMonitorsAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.WorkItemData[] GetWorkItems(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetWorkItems(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.WorkItemData[]> GetWorkItemsAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetWorkItemsAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.WorkItemData[] GetUserWorkItems(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserWorkItems(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.WorkItemData[]> GetUserWorkItemsAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserWorkItemsAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.CameMoneyData[] GetCameMoney(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetCameMoney(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CameMoneyData[]> GetCameMoneyAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetCameMoneyAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.CameMoneyData[] GetUserCameMoney(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserCameMoney(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.CameMoneyData[]> GetUserCameMoneyAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserCameMoneyAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ArchiveData[] GetArchiveData(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetArchiveData(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ArchiveData[]> GetArchiveDataAsync(string sCondition, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetArchiveDataAsync(sCondition, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public TaskFlowTest.IPSPServices.ArchiveData[] GetUserArchiveData(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserArchiveData(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.ArchiveData[]> GetUserArchiveDataAsync(string userID, string sMyBagFlag, string sCondtion, string sOrderBy, string sField, bool bOnlyGetTopCount) {
            return base.Channel.GetUserArchiveDataAsync(userID, sMyBagFlag, sCondtion, sOrderBy, sField, bOnlyGetTopCount);
        }
        
        public string GetData(string sData) {
            return base.Channel.GetData(sData);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(string sData) {
            return base.Channel.GetDataAsync(sData);
        }
        
        public bool ConnectSuccess() {
            return base.Channel.ConnectSuccess();
        }
        
        public System.Threading.Tasks.Task<bool> ConnectSuccessAsync() {
            return base.Channel.ConnectSuccessAsync();
        }
        
        public string GetConnectionString() {
            return base.Channel.GetConnectionString();
        }
        
        public System.Threading.Tasks.Task<string> GetConnectionStringAsync() {
            return base.Channel.GetConnectionStringAsync();
        }
        
        public string GetCurrentVersion() {
            return base.Channel.GetCurrentVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentVersionAsync() {
            return base.Channel.GetCurrentVersionAsync();
        }
        
        public string GetClientVersion() {
            return base.Channel.GetClientVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetClientVersionAsync() {
            return base.Channel.GetClientVersionAsync();
        }
        
        public string GetUpgradeConfigInfo() {
            return base.Channel.GetUpgradeConfigInfo();
        }
        
        public System.Threading.Tasks.Task<string> GetUpgradeConfigInfoAsync() {
            return base.Channel.GetUpgradeConfigInfoAsync();
        }
        
        public TaskFlowTest.IPSPServices.LifeCycleInfo RequestLifeCycle(int nEmployeeID) {
            return base.Channel.RequestLifeCycle(nEmployeeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.LifeCycleInfo> RequestLifeCycleAsync(int nEmployeeID) {
            return base.Channel.RequestLifeCycleAsync(nEmployeeID);
        }
        
        public string GetTrademarkGoodsPatternCN() {
            return base.Channel.GetTrademarkGoodsPatternCN();
        }
        
        public System.Threading.Tasks.Task<string> GetTrademarkGoodsPatternCNAsync() {
            return base.Channel.GetTrademarkGoodsPatternCNAsync();
        }
        
        public string GetTrademarkGoodsPatternEN() {
            return base.Channel.GetTrademarkGoodsPatternEN();
        }
        
        public System.Threading.Tasks.Task<string> GetTrademarkGoodsPatternENAsync() {
            return base.Channel.GetTrademarkGoodsPatternENAsync();
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerUpdateTaskFlowConfig() {
            return base.Channel.ByServerUpdateTaskFlowConfig();
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerUpdateTaskFlowConfigAsync() {
            return base.Channel.ByServerUpdateTaskFlowConfigAsync();
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerAutoGenerateTopTaskChains(string sTriggerType, string sTriggerObjectFullName, object objTriggerObjectKey, bool bCanRepeat) {
            return base.Channel.ByServerAutoGenerateTopTaskChains(sTriggerType, sTriggerObjectFullName, objTriggerObjectKey, bCanRepeat);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerAutoGenerateTopTaskChainsAsync(string sTriggerType, string sTriggerObjectFullName, object objTriggerObjectKey, bool bCanRepeat) {
            return base.Channel.ByServerAutoGenerateTopTaskChainsAsync(sTriggerType, sTriggerObjectFullName, objTriggerObjectKey, bCanRepeat);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateTopTaskChain(System.Guid gTaskChainID, string sRelatedObjectFullName, object objRelatedObjectKey, bool bCanRepeat) {
            return base.Channel.ByServerManualGenerateTopTaskChain(gTaskChainID, sRelatedObjectFullName, objRelatedObjectKey, bCanRepeat);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateTopTaskChainAsync(System.Guid gTaskChainID, string sRelatedObjectFullName, object objRelatedObjectKey, bool bCanRepeat) {
            return base.Channel.ByServerManualGenerateTopTaskChainAsync(gTaskChainID, sRelatedObjectFullName, objRelatedObjectKey, bCanRepeat);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerIsObjectExistsSpecifiedTaskChain(string sObjectFullName, object objObjectKey, System.Guid gTaskChainID) {
            return base.Channel.ByServerIsObjectExistsSpecifiedTaskChain(sObjectFullName, objObjectKey, gTaskChainID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerIsObjectExistsSpecifiedTaskChainAsync(string sObjectFullName, object objObjectKey, System.Guid gTaskChainID) {
            return base.Channel.ByServerIsObjectExistsSpecifiedTaskChainAsync(sObjectFullName, objObjectKey, gTaskChainID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualGenerateTaskNode(System.Guid gTaskChainID, System.Guid gCodeNodeTaskID, int nCreatorID) {
            return base.Channel.ByServerManualGenerateTaskNode(gTaskChainID, gCodeNodeTaskID, nCreatorID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualGenerateTaskNodeAsync(System.Guid gTaskChainID, System.Guid gCodeNodeTaskID, int nCreatorID) {
            return base.Channel.ByServerManualGenerateTaskNodeAsync(gTaskChainID, gCodeNodeTaskID, nCreatorID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualCreateTaskNodeWithoutCode(System.Guid gTaskChainID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays) {
            return base.Channel.ByServerManualCreateTaskNodeWithoutCode(gTaskChainID, sTaskName, nCreatorID, sTaskCyclePara, dtTaskCycleBaseDate, nAdvanceDays);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualCreateTaskNodeWithoutCodeAsync(System.Guid gTaskChainID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays) {
            return base.Channel.ByServerManualCreateTaskNodeWithoutCodeAsync(gTaskChainID, sTaskName, nCreatorID, sTaskCyclePara, dtTaskCycleBaseDate, nAdvanceDays);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerManualCreateTaskNodeInNewTaskChainWithoutCode(string sTaskChainName, string sRelatedObjectType, int nRelatedObjectID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays) {
            return base.Channel.ByServerManualCreateTaskNodeInNewTaskChainWithoutCode(sTaskChainName, sRelatedObjectType, nRelatedObjectID, sTaskName, nCreatorID, sTaskCyclePara, dtTaskCycleBaseDate, nAdvanceDays);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerManualCreateTaskNodeInNewTaskChainWithoutCodeAsync(string sTaskChainName, string sRelatedObjectType, int nRelatedObjectID, string sTaskName, int nCreatorID, string sTaskCyclePara, System.DateTime dtTaskCycleBaseDate, int nAdvanceDays) {
            return base.Channel.ByServerManualCreateTaskNodeInNewTaskChainWithoutCodeAsync(sTaskChainName, sRelatedObjectType, nRelatedObjectID, sTaskName, nCreatorID, sTaskCyclePara, dtTaskCycleBaseDate, nAdvanceDays);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerFinishTaskNode(System.Guid gTaskNodeID, int nFinisherID) {
            return base.Channel.ByServerFinishTaskNode(gTaskNodeID, nFinisherID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerFinishTaskNodeAsync(System.Guid gTaskNodeID, int nFinisherID) {
            return base.Channel.ByServerFinishTaskNodeAsync(gTaskNodeID, nFinisherID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerCloseNode(System.Guid gNodeID) {
            return base.Channel.ByServerCloseNode(gNodeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerCloseNodeAsync(System.Guid gNodeID) {
            return base.Channel.ByServerCloseNodeAsync(gNodeID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerCloseTaskChain(System.Guid gTaskChainID) {
            return base.Channel.ByServerCloseTaskChain(gTaskChainID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerCloseTaskChainAsync(System.Guid gTaskChainID) {
            return base.Channel.ByServerCloseTaskChainAsync(gTaskChainID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerReopenNode(System.Guid gNodeID) {
            return base.Channel.ByServerReopenNode(gNodeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerReopenNodeAsync(System.Guid gNodeID) {
            return base.Channel.ByServerReopenNodeAsync(gNodeID);
        }
        
        public TaskFlowTest.IPSPServices.OperationInfo ByServerDeleteNode(System.Guid gNodeID) {
            return base.Channel.ByServerDeleteNode(gNodeID);
        }
        
        public System.Threading.Tasks.Task<TaskFlowTest.IPSPServices.OperationInfo> ByServerDeleteNodeAsync(System.Guid gNodeID) {
            return base.Channel.ByServerDeleteNodeAsync(gNodeID);
        }
    }
}
